{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u5907\u5fd8\u5f55 \u8bb0\u5f55\u4e00\u4e9b\u5e38\u7528\u7684\u5c0f\u6280\u5de7\u548c\u77e5\u8bc6\u70b9","title":"Home"},{"location":"#_1","text":"\u8bb0\u5f55\u4e00\u4e9b\u5e38\u7528\u7684\u5c0f\u6280\u5de7\u548c\u77e5\u8bc6\u70b9","title":"\u5907\u5fd8\u5f55"},{"location":"C++/","text":"\u5b66\u4e60\u8def\u7ebf \u6458\u81ea:https://www.cnblogs.com/humanchan/archive/2013/04/14/3020877.html \u8bed\u8a00\u5165\u95e8 \u300aC++ Primer\u300b \u300aThe C++ Programming Language\u300b \u300aEssential C++\u300b,\u300aAccelerated C++\u300b \u8fdb\u9636A \u300aEffective C++\u300b \u300aC++ Coding Standards: 101 Rules, Guidelines, and Best Practices\u300b/\u300aC++ \u7f16\u7a0b\u89c4\u8303\u300b \u300aMore Effective C++\u300b \u300aExceptional C++\u300b \u300aMore Exceptional C++\u300b \u300aExceptional C++ Style\u300b \u8fdb\u9636B \u300aThe C++ Standard Library\u300b/\u300aC++\u6807\u51c6\u7a0b\u5e8f\u5e93\u2014\u81ea\u4fee\u6559\u7a0b\u4e0e\u53c2\u8003\u624b\u518c\u300b \u300aEffective STL\u300b \u300aGeneric Programming and the STL: Using and Extending the C++ Standard Template Library\u300b/\u300a\u6cdb\u578b\u7f16\u7a0b\u4e0eSTL\u300b\u3002 \u300aC++ STL\u300b Misc \u300aThinking in C++\u300b/\u300aC++\u7f16\u7a0b\u601d\u60f3\u300b \u300aC++\u5fc5\u77e5\u5fc5\u4f1a\u300b \u300aC++ Gotchas: Avoiding Common Problems in Coding and Design\u300b/\u300aC++\u7a0b\u5e8f\u8bbe\u8ba1\u9677\u9631\u300b \u300aSTL \u6e90\u7801\u5256\u6790\u300b \u9ad8\u7ea7 \u300aThe Design and Evolution of C++\u300b/\u300aC++\u8bed\u65b9\u7684\u8bbe\u8ba1\u548c\u6f14\u5316\u300b \u300aInside The C++ Object Model\u300b/\u300a\u6df1\u5ea6\u63a2\u7d22C++\u5bf9\u8c61\u6a21\u578b\u300b \u300aC++ Template\u300b \u300aModern C++ Design Generic Programming and Design Patterns Applied\u300b/\u300aC++\u8bbe\u8ba1\u65b0\u601d\u7ef4\u2014\u2014\u6cdb\u578b\u7f16\u7a0b\u4e0e\u8bbe\u8ba1\u6a21\u5f0f\u4e4b\u5e94\u7528\u300b \u300a\u5bf9\u8c61\u63ed\u79d8\uff1aJava\u3001Eiffel\u548cC++\u300b","title":"\u5b66\u4e60\u8def\u7ebf"},{"location":"C++/#_1","text":"\u6458\u81ea:https://www.cnblogs.com/humanchan/archive/2013/04/14/3020877.html","title":"\u5b66\u4e60\u8def\u7ebf"},{"location":"C++/#_2","text":"\u300aC++ Primer\u300b \u300aThe C++ Programming Language\u300b \u300aEssential C++\u300b,\u300aAccelerated C++\u300b","title":"\u8bed\u8a00\u5165\u95e8"},{"location":"C++/#a","text":"\u300aEffective C++\u300b \u300aC++ Coding Standards: 101 Rules, Guidelines, and Best Practices\u300b/\u300aC++ \u7f16\u7a0b\u89c4\u8303\u300b \u300aMore Effective C++\u300b \u300aExceptional C++\u300b \u300aMore Exceptional C++\u300b \u300aExceptional C++ Style\u300b","title":"\u8fdb\u9636A"},{"location":"C++/#b","text":"\u300aThe C++ Standard Library\u300b/\u300aC++\u6807\u51c6\u7a0b\u5e8f\u5e93\u2014\u81ea\u4fee\u6559\u7a0b\u4e0e\u53c2\u8003\u624b\u518c\u300b \u300aEffective STL\u300b \u300aGeneric Programming and the STL: Using and Extending the C++ Standard Template Library\u300b/\u300a\u6cdb\u578b\u7f16\u7a0b\u4e0eSTL\u300b\u3002 \u300aC++ STL\u300b","title":"\u8fdb\u9636B"},{"location":"C++/#misc","text":"\u300aThinking in C++\u300b/\u300aC++\u7f16\u7a0b\u601d\u60f3\u300b \u300aC++\u5fc5\u77e5\u5fc5\u4f1a\u300b \u300aC++ Gotchas: Avoiding Common Problems in Coding and Design\u300b/\u300aC++\u7a0b\u5e8f\u8bbe\u8ba1\u9677\u9631\u300b \u300aSTL \u6e90\u7801\u5256\u6790\u300b \u9ad8\u7ea7 \u300aThe Design and Evolution of C++\u300b/\u300aC++\u8bed\u65b9\u7684\u8bbe\u8ba1\u548c\u6f14\u5316\u300b \u300aInside The C++ Object Model\u300b/\u300a\u6df1\u5ea6\u63a2\u7d22C++\u5bf9\u8c61\u6a21\u578b\u300b \u300aC++ Template\u300b \u300aModern C++ Design Generic Programming and Design Patterns Applied\u300b/\u300aC++\u8bbe\u8ba1\u65b0\u601d\u7ef4\u2014\u2014\u6cdb\u578b\u7f16\u7a0b\u4e0e\u8bbe\u8ba1\u6a21\u5f0f\u4e4b\u5e94\u7528\u300b \u300a\u5bf9\u8c61\u63ed\u79d8\uff1aJava\u3001Eiffel\u548cC++\u300b","title":"Misc"},{"location":"Latex/error/","text":"\u9519\u8bef\u603b\u7ed3 \u5b57\u4f53 Q: Windows\u4e0b\u6267\u884cxelatex xxx.tex\u540e\u51fa\u73b0\u627e\u4e0d\u5230SimSun\u7b49\u5b57\u4f53\u3002(Cannot find SimSun/OT.mf.) A: \u8fd9\u91cc\u4e3b\u8981\u662f\u6ca1\u6709\u627e\u5230config\u8def\u5f84\uff0c\u5728\u7528\u6237\u73af\u5883\u53d8\u91cf\u4e2d\u65b0\u5efa\u73af\u5883\u53d8\u91cf FONTCONFIG_FILE \uff0c\u8f93\u5165fonts.conf\u7684\u8def\u5f84\uff0c\u6211\u8fd9\u91cc\u4e3a\uff1a C:\\Users\\hq\\AppData\\Roaming\\TinyTeX\\texmf-var\\fonts\\conf\\fonts.conf \uff08\u7528everything\u641c\u7d22\u4e0b\uff09\uff0c\u7136\u540e\u91cd\u65b0\u6253\u5f00\u547d\u4ee4\u884c\uff0c\u8f93\u5165 fc-list \u5c31\u80fd\u770b\u5230\u7cfb\u7edf\u5b57\u4f53\u4e86\uff0c\u95ee\u9898\u4e5f\u5f97\u4ee5\u89e3\u51b3\u3002","title":"\u9519\u8bef\u603b\u7ed3"},{"location":"Latex/error/#_1","text":"","title":"\u9519\u8bef\u603b\u7ed3"},{"location":"Latex/error/#_2","text":"Q: Windows\u4e0b\u6267\u884cxelatex xxx.tex\u540e\u51fa\u73b0\u627e\u4e0d\u5230SimSun\u7b49\u5b57\u4f53\u3002(Cannot find SimSun/OT.mf.) A: \u8fd9\u91cc\u4e3b\u8981\u662f\u6ca1\u6709\u627e\u5230config\u8def\u5f84\uff0c\u5728\u7528\u6237\u73af\u5883\u53d8\u91cf\u4e2d\u65b0\u5efa\u73af\u5883\u53d8\u91cf FONTCONFIG_FILE \uff0c\u8f93\u5165fonts.conf\u7684\u8def\u5f84\uff0c\u6211\u8fd9\u91cc\u4e3a\uff1a C:\\Users\\hq\\AppData\\Roaming\\TinyTeX\\texmf-var\\fonts\\conf\\fonts.conf \uff08\u7528everything\u641c\u7d22\u4e0b\uff09\uff0c\u7136\u540e\u91cd\u65b0\u6253\u5f00\u547d\u4ee4\u884c\uff0c\u8f93\u5165 fc-list \u5c31\u80fd\u770b\u5230\u7cfb\u7edf\u5b57\u4f53\u4e86\uff0c\u95ee\u9898\u4e5f\u5f97\u4ee5\u89e3\u51b3\u3002","title":"\u5b57\u4f53"},{"location":"Linux/dd/","text":"dd\u547d\u4ee4\u5236\u4f5c\u542f\u52a8\u76d8 \u5177\u4f53\u65b9\u6cd5 Linux\u4e0b\u5236\u4f5c\u542f\u52a8\u76d8\u7684\u65b9\u5f0f\u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7dd\u547d\u4ee4\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a sudo dd if = xxx.iso of = /dev/sdbx \u8fd9\u91cc\u8868\u793a\u5c06if\u6307\u5411\u7684\u955c\u50cf\u6587\u4ef6\u5199\u5165of\u6307\u5411\u7684\u76d8\u4e2d\u3002\u5176\u4e2d\uff0cof\u6307\u5411\u7684\u76d8\u4f4d\u7f6e\u53ef\u901a\u8fc7 sudo fdisk -l \u67e5\u770b\u3002","title":"dd\u547d\u4ee4\u5236\u4f5c\u542f\u52a8\u76d8"},{"location":"Linux/dd/#dd","text":"","title":"dd\u547d\u4ee4\u5236\u4f5c\u542f\u52a8\u76d8"},{"location":"Linux/dd/#_1","text":"Linux\u4e0b\u5236\u4f5c\u542f\u52a8\u76d8\u7684\u65b9\u5f0f\u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7dd\u547d\u4ee4\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a sudo dd if = xxx.iso of = /dev/sdbx \u8fd9\u91cc\u8868\u793a\u5c06if\u6307\u5411\u7684\u955c\u50cf\u6587\u4ef6\u5199\u5165of\u6307\u5411\u7684\u76d8\u4e2d\u3002\u5176\u4e2d\uff0cof\u6307\u5411\u7684\u76d8\u4f4d\u7f6e\u53ef\u901a\u8fc7 sudo fdisk -l \u67e5\u770b\u3002","title":"\u5177\u4f53\u65b9\u6cd5"},{"location":"Linux/scp/","text":"scp\u547d\u4ee4\u8bb0\u5f55 \u672c\u5730\u4e0a\u4f20 #\u6587\u4ef6 $scp local_file remote_username@remote_ip:remote_folder $scp local_file remote_username@remote_ip:remote_file # \u6587\u4ef6\u5939 $scp -r local_folder remote_username@remote_ip:remote_folder $scp -r local_folder remote_ip:remote_folder \u4ece\u8fdc\u7aef\u4e0b\u8f7d #\u6587\u4ef6 $scp remote_username@remote_ip:remote_folder local_file $scp remote_username@remote_ip:remote_file local_file #\u6587\u4ef6\u5939 $scp -r remote_username@remote_ip:remote_folder local_folder $scp -r remote_ip:remote_folder local_folder","title":"scp"},{"location":"Linux/scp/#scp","text":"","title":"scp\u547d\u4ee4\u8bb0\u5f55"},{"location":"Linux/scp/#_1","text":"#\u6587\u4ef6 $scp local_file remote_username@remote_ip:remote_folder $scp local_file remote_username@remote_ip:remote_file # \u6587\u4ef6\u5939 $scp -r local_folder remote_username@remote_ip:remote_folder $scp -r local_folder remote_ip:remote_folder","title":"\u672c\u5730\u4e0a\u4f20"},{"location":"Linux/scp/#_2","text":"#\u6587\u4ef6 $scp remote_username@remote_ip:remote_folder local_file $scp remote_username@remote_ip:remote_file local_file #\u6587\u4ef6\u5939 $scp -r remote_username@remote_ip:remote_folder local_folder $scp -r remote_ip:remote_folder local_folder","title":"\u4ece\u8fdc\u7aef\u4e0b\u8f7d"},{"location":"ftp/","text":"\u670d\u52a1\u5668\u642d\u5efaftp\u5e73\u53f0 \u670d\u52a1\u5668\u7aef\u5b89\u88c5 \u5b89\u88c5ftp\u5e76\u914d\u7f6e sudo apt-get install vsftpd sudo vim /etc/vsftpd.conf \u6267\u884c\u4e4b\u540e\u5c31\u53ef\u4ee5\u8fdb\u884c\u4ee5\u4e0b\u4fee\u6539\uff08\u4e0d\u60f3\u4fee\u6539\u53ef\u8df3\u8fc7\uff09 #\u7981\u6b62\u533f\u540d\u8bbf\u95ee anonymous_enable = NO #\u63a5\u53d7\u672c\u5730\u7528\u6237 local_enable = YES #\u5141\u8bb8\u4e0a\u4f20 write_enable = YES #\u7528\u6237\u53ea\u80fd\u8bbf\u95ee\u9650\u5236\u7684\u76ee\u5f55 chroot_local_user = YES #\u8bbe\u7f6e\u56fa\u5b9a\u76ee\u5f55\uff0c\u5728\u7ed3\u5c3e\u6dfb\u52a0\u3002\u5982\u679c\u4e0d\u6dfb\u52a0\u8fd9\u4e00\u884c\uff0c\u5404\u7528\u6237\u5bf9\u5e94\u81ea\u5df1\u7684\u76ee\u5f55\uff0c\u5f53\u7136\u8fd9\u4e2a\u6587\u4ef6\u5939\u81ea\u5df1\u5efa local_root = /home/ftp \u6dfb\u52a0ftp\u7528\u6237 sudo useradd -d /home/ftp -M ftpuser sudo passwd ftpuser \u8c03\u6574\u6587\u4ef6\u5939\u6743\u9650 # \u8fd9\u91cc\u4e3a\u4e86\u9632\u6b62\u5916\u90e8\u7528\u6237\u76f4\u63a5\u5bf9ftp\u4e3b\u6587\u4ef6\u5939\u8fdb\u884c\u4fee\u6539 sudo chmod a-w /home/ftp sudo mkdir /home/ftp/data \u6539pam.d/vsftpd sudo vim /etc/pam.d/vsftpd \u5c06\u4ee5\u4e0b\u4e00\u884c\u7528#\u53f7\u6ce8\u91ca\u6389\uff0c\u5426\u5219\u4f1a\u51fa\u73b0login incorrect\uff1a auth required pam_shells.so \u91cd\u542f\u670d\u52a1 sudo service vsftpd restart \u5ba2\u6237\u7aef\u4f7f\u7528 \u6709\u4e09\u79cd\u9014\u5f84\uff1a\u547d\u4ee4\u884c\uff0cftp\u5ba2\u6237\u7aef\uff0c\u8d44\u6e90\u7ba1\u7406\u5668\u3002\u5206\u522b\u4ecb\u7ecd\u4e00\u4e0b\uff1a \u547d\u4ee4\u884c :~$ ftp your_ip Connected to your_ip. 220 ( vsFTPd 3 .0.3 ) Name () : ftpuser 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp> passive # \u5f00\u542fpassive\u6a21\u5f0f\uff0c\u5426\u5219\u65e0\u6cd5\u8fdb\u884c\u64cd\u4f5c ftp> ls # \u67e5\u770b ftp> cd data # \u5207\u6362 ftp> put xxx # \u4e0a\u4f20 ftp> get xxx # \u4e0b\u8f7d ftp\u5ba2\u6237\u7aef \u6bd4\u5982xftp,\u4f7f\u7528\u65b9\u6cd5\u76f4\u63a5\u767e\u5ea6\u5c31\u884c\u3002 \u8d44\u6e90\u7ba1\u7406\u5668 \u5728\u8d44\u6e90\u7ba1\u7406\u5668\uff08\u4e5f\u5c31\u662f\u4f60\u5e73\u5e38\u770b\u78c1\u76d8\u6587\u4ef6\u7684\u5730\u65b9\uff09\u4e0a\u65b9\u7684\u641c\u7d22\u680f\u8f93\u5165\u4ee5\u4e0b\u4e09\u79cd\u683c\u5f0f\u4e2d\u7684\u4efb\u610f\u4e00\u79cd\uff1a 1 ) \u5b8c\u5168\u683c\u5f0f\uff1a ftp://username:password@hostname:port 2 ) \u5feb\u6377\u683c\u5f0f\uff1a ftp://username@hostname:port 3 ) \u4fbf\u6377\u683c\u5f0f\uff1a ftp://hostname:port \u7136\u540e\u5c31\u53ef\u4ee5\u770b\u5230\u76f8\u5e94\u7684\u6587\u4ef6\u4e86\u3002","title":"\u5b89\u88c5\u4e0e\u4f7f\u7528"},{"location":"ftp/#ftp","text":"","title":"\u670d\u52a1\u5668\u642d\u5efaftp\u5e73\u53f0"},{"location":"ftp/#_1","text":"","title":"\u670d\u52a1\u5668\u7aef\u5b89\u88c5"},{"location":"ftp/#ftp_1","text":"sudo apt-get install vsftpd sudo vim /etc/vsftpd.conf \u6267\u884c\u4e4b\u540e\u5c31\u53ef\u4ee5\u8fdb\u884c\u4ee5\u4e0b\u4fee\u6539\uff08\u4e0d\u60f3\u4fee\u6539\u53ef\u8df3\u8fc7\uff09 #\u7981\u6b62\u533f\u540d\u8bbf\u95ee anonymous_enable = NO #\u63a5\u53d7\u672c\u5730\u7528\u6237 local_enable = YES #\u5141\u8bb8\u4e0a\u4f20 write_enable = YES #\u7528\u6237\u53ea\u80fd\u8bbf\u95ee\u9650\u5236\u7684\u76ee\u5f55 chroot_local_user = YES #\u8bbe\u7f6e\u56fa\u5b9a\u76ee\u5f55\uff0c\u5728\u7ed3\u5c3e\u6dfb\u52a0\u3002\u5982\u679c\u4e0d\u6dfb\u52a0\u8fd9\u4e00\u884c\uff0c\u5404\u7528\u6237\u5bf9\u5e94\u81ea\u5df1\u7684\u76ee\u5f55\uff0c\u5f53\u7136\u8fd9\u4e2a\u6587\u4ef6\u5939\u81ea\u5df1\u5efa local_root = /home/ftp","title":"\u5b89\u88c5ftp\u5e76\u914d\u7f6e"},{"location":"ftp/#ftp_2","text":"sudo useradd -d /home/ftp -M ftpuser sudo passwd ftpuser","title":"\u6dfb\u52a0ftp\u7528\u6237"},{"location":"ftp/#_2","text":"# \u8fd9\u91cc\u4e3a\u4e86\u9632\u6b62\u5916\u90e8\u7528\u6237\u76f4\u63a5\u5bf9ftp\u4e3b\u6587\u4ef6\u5939\u8fdb\u884c\u4fee\u6539 sudo chmod a-w /home/ftp sudo mkdir /home/ftp/data","title":"\u8c03\u6574\u6587\u4ef6\u5939\u6743\u9650"},{"location":"ftp/#pamdvsftpd","text":"sudo vim /etc/pam.d/vsftpd \u5c06\u4ee5\u4e0b\u4e00\u884c\u7528#\u53f7\u6ce8\u91ca\u6389\uff0c\u5426\u5219\u4f1a\u51fa\u73b0login incorrect\uff1a auth required pam_shells.so","title":"\u6539pam.d/vsftpd"},{"location":"ftp/#_3","text":"sudo service vsftpd restart","title":"\u91cd\u542f\u670d\u52a1"},{"location":"ftp/#_4","text":"\u6709\u4e09\u79cd\u9014\u5f84\uff1a\u547d\u4ee4\u884c\uff0cftp\u5ba2\u6237\u7aef\uff0c\u8d44\u6e90\u7ba1\u7406\u5668\u3002\u5206\u522b\u4ecb\u7ecd\u4e00\u4e0b\uff1a \u547d\u4ee4\u884c :~$ ftp your_ip Connected to your_ip. 220 ( vsFTPd 3 .0.3 ) Name () : ftpuser 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp> passive # \u5f00\u542fpassive\u6a21\u5f0f\uff0c\u5426\u5219\u65e0\u6cd5\u8fdb\u884c\u64cd\u4f5c ftp> ls # \u67e5\u770b ftp> cd data # \u5207\u6362 ftp> put xxx # \u4e0a\u4f20 ftp> get xxx # \u4e0b\u8f7d ftp\u5ba2\u6237\u7aef \u6bd4\u5982xftp,\u4f7f\u7528\u65b9\u6cd5\u76f4\u63a5\u767e\u5ea6\u5c31\u884c\u3002 \u8d44\u6e90\u7ba1\u7406\u5668 \u5728\u8d44\u6e90\u7ba1\u7406\u5668\uff08\u4e5f\u5c31\u662f\u4f60\u5e73\u5e38\u770b\u78c1\u76d8\u6587\u4ef6\u7684\u5730\u65b9\uff09\u4e0a\u65b9\u7684\u641c\u7d22\u680f\u8f93\u5165\u4ee5\u4e0b\u4e09\u79cd\u683c\u5f0f\u4e2d\u7684\u4efb\u610f\u4e00\u79cd\uff1a 1 ) \u5b8c\u5168\u683c\u5f0f\uff1a ftp://username:password@hostname:port 2 ) \u5feb\u6377\u683c\u5f0f\uff1a ftp://username@hostname:port 3 ) \u4fbf\u6377\u683c\u5f0f\uff1a ftp://hostname:port \u7136\u540e\u5c31\u53ef\u4ee5\u770b\u5230\u76f8\u5e94\u7684\u6587\u4ef6\u4e86\u3002","title":"\u5ba2\u6237\u7aef\u4f7f\u7528"},{"location":"git/commands/","text":"Git\u5e38\u89c1\u547d\u4ee4 git remote # rename git remote set-url origin git@xxx.git # delete git remote remove origin # add git remote add origin yourRemoteUrl git branch+cheakout =======clear all commit history ======= 1.Checkout,build a new branch without parent node git checkout --orphan latest_branch 2. Add all the files git add -A 3. Commit the changes git commit -am \"commit message\" 4. Delete the branch git branch -D master 5.Rename the current branch to master git branch -m master 6.Finally, force update your repository git push -f origin master","title":"\u5e38\u89c1\u547d\u4ee4"},{"location":"git/commands/#git","text":"","title":"Git\u5e38\u89c1\u547d\u4ee4"},{"location":"git/commands/#git-remote","text":"# rename git remote set-url origin git@xxx.git # delete git remote remove origin # add git remote add origin yourRemoteUrl","title":"git remote"},{"location":"git/commands/#git-branchcheakout","text":"=======clear all commit history ======= 1.Checkout,build a new branch without parent node git checkout --orphan latest_branch 2. Add all the files git add -A 3. Commit the changes git commit -am \"commit message\" 4. Delete the branch git branch -D master 5.Rename the current branch to master git branch -m master 6.Finally, force update your repository git push -f origin master","title":"git branch+cheakout"},{"location":"git/proxy/","text":"git \u8bbe\u7f6eshaodwsocks\u4ee3\u7406 \u4eca\u5929\u4f53\u9a8c\u4e86\u4e00\u628agit\u4e0b\u8f7d\u56fd\u5916\u4ed3\u5e93\u7684\u7f13\u6162\u901f\u5ea6\uff08\u4ee5\u524d\u7528github\u90fd\u6ca1\u89c9\u5f97\u8fd9\u4e48\u6162\uff09\uff0c\u5b9e\u5728\u662f\u4e0d\u60f3\u7b49\u4e86\uff0c\u4e8e\u662f \u4e86\u89e3\u4e86\u4e00\u4e0b\u5982\u4f55\u7528shadowsocks\u5f00\u4ee3\u7406\u52a0\u901f\uff0c\u8bbe\u7f6e\u65b9\u6cd5\u5f88\u7b80\u5355\uff1a git config --global http.proxy 'socks5://127.0.0.1:1080' \u8fd9\u6837\u5c31\u53ef\u4ee5\u4ece\u539f\u6765\u5341\u51e0k\u63d0\u5347\u5230\u51e0\u767ek\u4e86\uff08\u4eb2\u6d4b\uff09\u3002\u9700\u8981\u6ce8\u610f\uff0cgit\u4e0d\u5b58\u5728https.proxy\u8bbe\u7f6e\u7684\uff0c\u8fd9\u91cc\u662f http ,\u4e0d\u5e26s, \u5426\u5219\u8bbe\u7f6e\u65e0\u6548\u3002 \u8fd9\u4e2a\u53ef\u80fd\u6bd4\u8f83\u9ebb\u70e6\u7684\u5c31\u662f\u9700\u8981\u540e\u53f0\u5fc5\u987b\u6302\u7740sahdowsocks\u5ba2\u6237\u7aef\uff0c\u800c\u4e14\u5982\u679c\u8bbf\u95ee\u56fd\u5185\u7684\u4ed3\u5e93\uff0c\u52a0\u901f\u4f30\u8ba1\u4f1a\u8d77\u53cd\u6548\u679c\uff0c \u56e0\u6b64\u8fd9\u91cc\u4e5f\u653e\u4e00\u4e0b\u5173\u95ed\u7684\u65b9\u5f0f\uff1a git config --global --unset http.proxy \u67e5\u770b config --global \u7684\u6240\u6709\u9009\u9879\uff1a git config --global -l #\u5217\u51fa\u6765 git config --global -e #\u7f16\u8f91","title":"\u5f00\u542fss\u4ee3\u7406\u52a0\u901f"},{"location":"git/proxy/#git-shaodwsocks","text":"\u4eca\u5929\u4f53\u9a8c\u4e86\u4e00\u628agit\u4e0b\u8f7d\u56fd\u5916\u4ed3\u5e93\u7684\u7f13\u6162\u901f\u5ea6\uff08\u4ee5\u524d\u7528github\u90fd\u6ca1\u89c9\u5f97\u8fd9\u4e48\u6162\uff09\uff0c\u5b9e\u5728\u662f\u4e0d\u60f3\u7b49\u4e86\uff0c\u4e8e\u662f \u4e86\u89e3\u4e86\u4e00\u4e0b\u5982\u4f55\u7528shadowsocks\u5f00\u4ee3\u7406\u52a0\u901f\uff0c\u8bbe\u7f6e\u65b9\u6cd5\u5f88\u7b80\u5355\uff1a git config --global http.proxy 'socks5://127.0.0.1:1080' \u8fd9\u6837\u5c31\u53ef\u4ee5\u4ece\u539f\u6765\u5341\u51e0k\u63d0\u5347\u5230\u51e0\u767ek\u4e86\uff08\u4eb2\u6d4b\uff09\u3002\u9700\u8981\u6ce8\u610f\uff0cgit\u4e0d\u5b58\u5728https.proxy\u8bbe\u7f6e\u7684\uff0c\u8fd9\u91cc\u662f http ,\u4e0d\u5e26s, \u5426\u5219\u8bbe\u7f6e\u65e0\u6548\u3002 \u8fd9\u4e2a\u53ef\u80fd\u6bd4\u8f83\u9ebb\u70e6\u7684\u5c31\u662f\u9700\u8981\u540e\u53f0\u5fc5\u987b\u6302\u7740sahdowsocks\u5ba2\u6237\u7aef\uff0c\u800c\u4e14\u5982\u679c\u8bbf\u95ee\u56fd\u5185\u7684\u4ed3\u5e93\uff0c\u52a0\u901f\u4f30\u8ba1\u4f1a\u8d77\u53cd\u6548\u679c\uff0c \u56e0\u6b64\u8fd9\u91cc\u4e5f\u653e\u4e00\u4e0b\u5173\u95ed\u7684\u65b9\u5f0f\uff1a git config --global --unset http.proxy \u67e5\u770b config --global \u7684\u6240\u6709\u9009\u9879\uff1a git config --global -l #\u5217\u51fa\u6765 git config --global -e #\u7f16\u8f91","title":"git \u8bbe\u7f6eshaodwsocks\u4ee3\u7406"},{"location":"misc/cmd_proxy/","text":"\u5f00\u542fWindows\u547d\u4ee4\u884c\u4ee3\u7406 \u65b9\u6cd5\u4e3a\uff1a set http_proxy = http : // 127.0 . 0.1 : 1080 set https_proxy = http : // 127.0 . 0.1 : 1080 \u8fd9\u4e2a\u53ea\u662f\u5728\u5f53\u524dshell\u8d77\u4f5c\u7528\u7684\uff0c\u4e0d\u662f\u7cfb\u7edf\u53d8\u91cf\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u8651\u3002\u5982\u679c\u5e0c\u671b\u6240\u6709shell\u90fd\u914d\u7f6e\u53ef\u4ee5\u76f4\u63a5\u914d\u7f6e\u8fdb\u7cfb\u7edf\u53d8\u91cf\u3002","title":"Windows\u547d\u4ee4\u884c\u4ee3\u7406"},{"location":"misc/cmd_proxy/#windows","text":"\u65b9\u6cd5\u4e3a\uff1a set http_proxy = http : // 127.0 . 0.1 : 1080 set https_proxy = http : // 127.0 . 0.1 : 1080 \u8fd9\u4e2a\u53ea\u662f\u5728\u5f53\u524dshell\u8d77\u4f5c\u7528\u7684\uff0c\u4e0d\u662f\u7cfb\u7edf\u53d8\u91cf\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u8651\u3002\u5982\u679c\u5e0c\u671b\u6240\u6709shell\u90fd\u914d\u7f6e\u53ef\u4ee5\u76f4\u63a5\u914d\u7f6e\u8fdb\u7cfb\u7edf\u53d8\u91cf\u3002","title":"\u5f00\u542fWindows\u547d\u4ee4\u884c\u4ee3\u7406"},{"location":"misc/origin_src/","text":"\u5404\u79cd\u6e90\u7801\u5b89\u88c5 Python setuptool \u4e0b\u8f7d\u6e90\u7801\u5305: https://pypi.python.org/pypi/setuptools \u89e3\u538b\u540e\u8fdb\u5165\u76ee\u5f55\u6267\u884c\uff1a python setup . py install pip \u4e0b\u8f7d\u6e90\u7801\u5305: https://pypi.python.org/pypi/pip#downloads \u89e3\u538b\u540e\u8fdb\u5165\u76ee\u5f55\u6267\u884c\uff1a $python setup.py build $python setup.py install","title":"\u6e90\u7801\u5b89\u88c5"},{"location":"misc/origin_src/#_1","text":"","title":"\u5404\u79cd\u6e90\u7801\u5b89\u88c5"},{"location":"misc/origin_src/#python","text":"","title":"Python"},{"location":"misc/origin_src/#setuptool","text":"\u4e0b\u8f7d\u6e90\u7801\u5305: https://pypi.python.org/pypi/setuptools \u89e3\u538b\u540e\u8fdb\u5165\u76ee\u5f55\u6267\u884c\uff1a python setup . py install","title":"setuptool"},{"location":"misc/origin_src/#pip","text":"\u4e0b\u8f7d\u6e90\u7801\u5305: https://pypi.python.org/pypi/pip#downloads \u89e3\u538b\u540e\u8fdb\u5165\u76ee\u5f55\u6267\u884c\uff1a $python setup.py build $python setup.py install","title":"pip"},{"location":"misc/tricks/","text":"\u5730\u5740\u680f\u5207\u6362\u641c\u7d22\u5f15\u64ce \u8fdb\u5165\u641c\u7d22\u5f15\u64ce\u7684\u8bbe\u7f6e\u754c\u9762\uff0c\u5c06\u4e0d\u540c\u5f15\u64ce\u7684\u5173\u952e\u5b57\u8bbe\u7f6e\u4e3a\u65b9\u4fbf\u4f7f\u7528\u7684\uff0c\u4f8b\u5982baidu.com ,\u8bbe\u7f6e\u4e3abd \u5728\u5730\u5740\u680f\u8f93\u5165\u76f8\u5e94\u5173\u952e\u5b57\uff0c\u6309Tab\u952e\uff0c\u5207\u6362\u641c\u7d22\u5f15\u64ce","title":"Chrome\u5b9e\u7528\u6280\u5de7"},{"location":"misc/tricks/#_1","text":"\u8fdb\u5165\u641c\u7d22\u5f15\u64ce\u7684\u8bbe\u7f6e\u754c\u9762\uff0c\u5c06\u4e0d\u540c\u5f15\u64ce\u7684\u5173\u952e\u5b57\u8bbe\u7f6e\u4e3a\u65b9\u4fbf\u4f7f\u7528\u7684\uff0c\u4f8b\u5982baidu.com ,\u8bbe\u7f6e\u4e3abd \u5728\u5730\u5740\u680f\u8f93\u5165\u76f8\u5e94\u5173\u952e\u5b57\uff0c\u6309Tab\u952e\uff0c\u5207\u6362\u641c\u7d22\u5f15\u64ce","title":"\u5730\u5740\u680f\u5207\u6362\u641c\u7d22\u5f15\u64ce"},{"location":"mkdocs/useguide/","text":"\u5b89\u88c5 pip install mkdocs \u57fa\u672c\u64cd\u4f5c mkdocs new my-project #\u7528\u4e8e\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u65b0\u9879\u76ee cd my-project #\u8fdb\u5165\u9879\u76ee \u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e2d\u53ef\u770b\u5230 mkdocs.yml \u6587\u4ef6\u548c docs \u6587\u4ef6\u5939,\u524d\u8005\u7528\u4e8e\u914d\u7f6e\uff0c\u540e\u8005\u653e\u6587\u6863\u3002 \u8fdb\u5165\u9879\u76ee\u6587\u4ef6\u5939\uff0c\u6267\u884c mkdocs build mkdocs serve \u6253\u5f00 http://127.0.0.1:8000/ \u53ef\u4ee5\u770b\u5230\u9ed8\u8ba4\u4e3b\u9875\u9762\u3002\u5728\u540e\u7eed\u7684\u672c\u5730\u4e66\u5199\u4e2d\uff0c\u5982\u679c\u9700\u8981\u5373\u65f6\u67e5\u770b\u6548\u679c\uff0c\u4e5f\u662f\u7528\u8fd9\u4e24\u4e2a\u547d\u4ee4\u3002 \u76f8\u5173\u914d\u7f6e site_name site_name: my memos ,\u914d\u7f6e\u7684\u662f\u7f51\u7ad9\u540d\u79f0\u3002 pages \u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u683c\u5f0f\uff1a pages: - Home: index.md - Chrome: - \u5b9e\u7528\u6280\u5de7: chrome/tricks.md \u4e00\u5c42\u5c42\u521b\u5efa\u76ee\u5f55\uff0c\u5e76\u5c06\u7d22\u5f15\u548c\u6587\u6863\u5339\u914d\u3002 \u5728\u6bcf\u4e00\u6b21\u66f4\u6539\u5b8c\u6587\u6863\u540e\uff0c\u9700\u8981\u5728\u8fd9\u91cc\u8bbe\u7f6e\u597d\u5bf9\u5e94\u7684\u7d22\u5f15\u548c\u6587\u6863\uff0c\u5207\u8bb0\uff01 theme theme: xxx \u53ef\u4ee5\u8bbe\u7f6e\u4e3b\u9898\u3002 \u4f8b\u5982\uff0c\u66f4\u6362\u4e3a material \u4e3b\u9898\u53ef\u6267\u884c\uff1a pip install mkdocs-material \u5e76\u914d\u7f6e\uff1a theme : name : 'material' markdown_extensions : - codehilite \u5982\u679c\u60f3\u66f4\u6362\u5176\u4ed6\u4e3b\u9898\uff0c\u53ef\u53c2\u8003\uff1a mkdoc\u4e3b\u9898\u914d\u7f6e\u6587\u6863 \u90e8\u7f72\u5230github \u5728github\u4e0a\u65b0\u5f00\u4e00\u4e2a\u4ed3\u5e93\uff0c\u5982 memos ,\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u6b65\u9aa4\u5c06\u5176\u90e8\u7f72\u5230githubPages\u4e0a\u53bb\uff08\u901a\u8fc7 \u4f60\u7684github\u7528\u6237\u540d.gitub.io/memos\u8bbf\u95ee\uff09 \u6267\u884c\uff1a mkdocs gh-deploy git add . git commit -m \"update master\" git push origin master \u5176\u4e2d\uff0c gh-deploy \u4f1a\u5c06\u5f53\u524d\u6587\u6863build\u4e00\u4e0b\u5e76\u63d0\u4ea4\u5230 gh-pages \u5206\u652f\uff0c\u540e\u9762\u5c31\u662f\u63d0\u4ea4\u4e3b\u5206\u652f\u7684\u66f4\u6539\u4e86\u3002\u63d0\u4ea4\u4e4b\u524d\u5728\u7f51\u7ad9\u4e0a\u662f\u770b\u4e0d\u5230\u66f4\u6539\u7684\uff0c\u8981\u770b\u7684\u8bdd\uff0c\u53ef\u4ee5\u672c\u5730\u6267\u884c\u4e4b\u524d\u63d0\u5230\u7684\u4e24\u4e2a\u547d\u4ee4\u8fdb\u884c\u64cd\u4f5c\u3002 \u5229\u7528makefile\u8fdb\u884c\u7ba1\u7406 \u8fdb\u884c\u4e00\u6b21\u63d0\u4ea4\uff0c\u9700\u8981\u6267\u884c\u90a3\u4e48\u591a\u64cd\u4f5c\uff0c\u6709\u6ca1\u6709\u5077\u61d2\u7684\u65b9\u6cd5\u5462\uff1f\u5176\u5b9e\u662f\u6709\u7684\u3002\u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e0b\u5efa\u7acb\u4e00\u4e2a\u6587\u4ef6 Makefile \uff0c\u5199\u5165\uff1a run : mkdocs gh - deploy git add . git commit - m \"update master\" git push origin master \u4fdd\u5b58\u540e\uff0c\u4ee5\u540e\u63d0\u4ea4\u5c31\u76f4\u63a5 make run \u5c31\u884c\u4e86\u3002 \u9047\u5230\u7684\u95ee\u9898 pkg_resources.ContextualVersionConflict: (Markdown 2.6.6 (d:\\python36-32\\lib\\site-packages), Requirement.parse('Markdown>=2.6.10'), {'pymdown-extensions'}) \u8fd9\u662fmaterial\u4e3b\u9898\u5f15\u8d77\u7684\uff0c\u628amarkdown\u5e93\u5347\u7ea7\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\u65b9\u6cd5\uff1a pip install Markdown==2.6.10","title":"MkDocs"},{"location":"mkdocs/useguide/#_1","text":"pip install mkdocs","title":"\u5b89\u88c5"},{"location":"mkdocs/useguide/#_2","text":"mkdocs new my-project #\u7528\u4e8e\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u65b0\u9879\u76ee cd my-project #\u8fdb\u5165\u9879\u76ee \u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e2d\u53ef\u770b\u5230 mkdocs.yml \u6587\u4ef6\u548c docs \u6587\u4ef6\u5939,\u524d\u8005\u7528\u4e8e\u914d\u7f6e\uff0c\u540e\u8005\u653e\u6587\u6863\u3002 \u8fdb\u5165\u9879\u76ee\u6587\u4ef6\u5939\uff0c\u6267\u884c mkdocs build mkdocs serve \u6253\u5f00 http://127.0.0.1:8000/ \u53ef\u4ee5\u770b\u5230\u9ed8\u8ba4\u4e3b\u9875\u9762\u3002\u5728\u540e\u7eed\u7684\u672c\u5730\u4e66\u5199\u4e2d\uff0c\u5982\u679c\u9700\u8981\u5373\u65f6\u67e5\u770b\u6548\u679c\uff0c\u4e5f\u662f\u7528\u8fd9\u4e24\u4e2a\u547d\u4ee4\u3002","title":"\u57fa\u672c\u64cd\u4f5c"},{"location":"mkdocs/useguide/#_3","text":"","title":"\u76f8\u5173\u914d\u7f6e"},{"location":"mkdocs/useguide/#site_name","text":"site_name: my memos ,\u914d\u7f6e\u7684\u662f\u7f51\u7ad9\u540d\u79f0\u3002","title":"site_name"},{"location":"mkdocs/useguide/#pages","text":"\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u683c\u5f0f\uff1a pages: - Home: index.md - Chrome: - \u5b9e\u7528\u6280\u5de7: chrome/tricks.md \u4e00\u5c42\u5c42\u521b\u5efa\u76ee\u5f55\uff0c\u5e76\u5c06\u7d22\u5f15\u548c\u6587\u6863\u5339\u914d\u3002 \u5728\u6bcf\u4e00\u6b21\u66f4\u6539\u5b8c\u6587\u6863\u540e\uff0c\u9700\u8981\u5728\u8fd9\u91cc\u8bbe\u7f6e\u597d\u5bf9\u5e94\u7684\u7d22\u5f15\u548c\u6587\u6863\uff0c\u5207\u8bb0\uff01","title":"pages"},{"location":"mkdocs/useguide/#theme","text":"theme: xxx \u53ef\u4ee5\u8bbe\u7f6e\u4e3b\u9898\u3002 \u4f8b\u5982\uff0c\u66f4\u6362\u4e3a material \u4e3b\u9898\u53ef\u6267\u884c\uff1a pip install mkdocs-material \u5e76\u914d\u7f6e\uff1a theme : name : 'material' markdown_extensions : - codehilite \u5982\u679c\u60f3\u66f4\u6362\u5176\u4ed6\u4e3b\u9898\uff0c\u53ef\u53c2\u8003\uff1a mkdoc\u4e3b\u9898\u914d\u7f6e\u6587\u6863","title":"theme"},{"location":"mkdocs/useguide/#github","text":"\u5728github\u4e0a\u65b0\u5f00\u4e00\u4e2a\u4ed3\u5e93\uff0c\u5982 memos ,\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u6b65\u9aa4\u5c06\u5176\u90e8\u7f72\u5230githubPages\u4e0a\u53bb\uff08\u901a\u8fc7 \u4f60\u7684github\u7528\u6237\u540d.gitub.io/memos\u8bbf\u95ee\uff09 \u6267\u884c\uff1a mkdocs gh-deploy git add . git commit -m \"update master\" git push origin master \u5176\u4e2d\uff0c gh-deploy \u4f1a\u5c06\u5f53\u524d\u6587\u6863build\u4e00\u4e0b\u5e76\u63d0\u4ea4\u5230 gh-pages \u5206\u652f\uff0c\u540e\u9762\u5c31\u662f\u63d0\u4ea4\u4e3b\u5206\u652f\u7684\u66f4\u6539\u4e86\u3002\u63d0\u4ea4\u4e4b\u524d\u5728\u7f51\u7ad9\u4e0a\u662f\u770b\u4e0d\u5230\u66f4\u6539\u7684\uff0c\u8981\u770b\u7684\u8bdd\uff0c\u53ef\u4ee5\u672c\u5730\u6267\u884c\u4e4b\u524d\u63d0\u5230\u7684\u4e24\u4e2a\u547d\u4ee4\u8fdb\u884c\u64cd\u4f5c\u3002","title":"\u90e8\u7f72\u5230github"},{"location":"mkdocs/useguide/#makefile","text":"\u8fdb\u884c\u4e00\u6b21\u63d0\u4ea4\uff0c\u9700\u8981\u6267\u884c\u90a3\u4e48\u591a\u64cd\u4f5c\uff0c\u6709\u6ca1\u6709\u5077\u61d2\u7684\u65b9\u6cd5\u5462\uff1f\u5176\u5b9e\u662f\u6709\u7684\u3002\u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e0b\u5efa\u7acb\u4e00\u4e2a\u6587\u4ef6 Makefile \uff0c\u5199\u5165\uff1a run : mkdocs gh - deploy git add . git commit - m \"update master\" git push origin master \u4fdd\u5b58\u540e\uff0c\u4ee5\u540e\u63d0\u4ea4\u5c31\u76f4\u63a5 make run \u5c31\u884c\u4e86\u3002","title":"\u5229\u7528makefile\u8fdb\u884c\u7ba1\u7406"},{"location":"mkdocs/useguide/#_4","text":"pkg_resources.ContextualVersionConflict: (Markdown 2.6.6 (d:\\python36-32\\lib\\site-packages), Requirement.parse('Markdown>=2.6.10'), {'pymdown-extensions'}) \u8fd9\u662fmaterial\u4e3b\u9898\u5f15\u8d77\u7684\uff0c\u628amarkdown\u5e93\u5347\u7ea7\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\u65b9\u6cd5\uff1a pip install Markdown==2.6.10","title":"\u9047\u5230\u7684\u95ee\u9898"},{"location":"python/Basic_01/","text":"Basic 01 \u6570\u5b66\u8ba1\u7b97 \u6574\u9664\u548c\u53d6\u4f59 Python3\u4e2d\u7684\u6574\u9664\u7528\u7684\u662f // \u7b26\u53f7\uff0c\u91c7\u7528\u7684\u662f\u5411\u4e0b\u53d6\u6574\uff0c\u5982\uff1a >>> - 10 // 3 - 4 >>> 10 //- 3 - 4 >>> 10 // 3 3 >>> - 10 //- 3 3 \u8fd9\u91cc\u53ef\u4ee5\u770b\u51fa\uff0c\u6574\u9664\u53ef\u4ee5\u4f5c\u7528\u4e8e\u8d1f\u6570\uff0c\u800c a//b=c \u53d6\u7684\u662f: b c1<=a,b c2>=a\u91cc\uff0cc1\u4e0ec2\u4e2d\u8f83\u5c0f\u7684\u4e00\u4e2a(\u5e26\u7b26\u53f7),\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u5411\u4e0b\u53d6\u6574\u3002 \u4f9d\u636e a mod b = a- (a//b *b) \u7684\u516c\u5f0f\u53ef\u4ee5\u63a8\u51fa\u53d6\u4f59\u7684\u7ed3\u679c\uff1a >>> 10 % 3 1 >>> 10 %- 3 - 2 >>> - 10 % 3 2 >>> - 10 %- 3 - 1 \u4e58\u65b9 \u4e58\u65b9\u7684\u4f18\u5148\u7ea7\u6bd4\u8d1f\u53f7(\u5355\u76ee\u6c42\u8d1f)\u7684\u4f18\u5148\u7ea7\u9ad8\uff0c\u56e0\u6b64 -3**2 \u4f1a\u51fa\u73b0\uff1a >>> - 3 ** 2 - 9 >>> ( - 3 ) ** 2 9 \u4f18\u5148\u7ea7 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 ** \u6307\u6570 (\u6700\u9ad8\u4f18\u5148\u7ea7) ~ + - \u6309\u4f4d\u7ffb\u8f6c, \u4e00\u5143\u52a0\u53f7\u548c\u51cf\u53f7 (\u6700\u540e\u4e24\u4e2a\u7684\u65b9\u6cd5\u540d\u4e3a +@ \u548c -@) * / % // \u4e58\uff0c\u9664\uff0c\u53d6\u6a21\u548c\u53d6\u6574\u9664 + - \u52a0\u6cd5\u51cf\u6cd5 >> << \u53f3\u79fb\uff0c\u5de6\u79fb\u8fd0\u7b97\u7b26 & \u4f4d 'AND' ^ | \u4f4d\u8fd0\u7b97\u7b26 <= < > >= \u6bd4\u8f83\u8fd0\u7b97\u7b26 <> == != \u7b49\u4e8e\u8fd0\u7b97\u7b26 = %= /= //= -= += = *= \u8d4b\u503c\u8fd0\u7b97\u7b26 is is not \u8eab\u4efd\u8fd0\u7b97\u7b26 in not in \u6210\u5458\u8fd0\u7b97\u7b26 not or and \u903b\u8f91\u8fd0\u7b97\u7b26 is\u548c== \u4e00\u4e2a\u5bf9\u8c61\u62e5\u6709\u4e09\u4e2a\u57fa\u672c\u5143\u7d20\uff1aid,\u7c7b\u578b\u548c\u503c\u3002\u800cis\u662f\u5bf9\u5bf9\u8c61id\u7684\u5224\u65ad\uff0c==\u662f\u5bf9\u5bf9\u8c61\u503c\u7684\u5224\u65ad\u3002 >>> a = 1 >>> b = 1 >>> a is b True >>> a = 1.23 >>> b = 1.23 >>> a is b False >>> a = 'test' >>> b = 'test' >>> a is b True >>> a = ( 1 , 2 , 3 ) >>> b = ( 1 , 2 , 3 ) >>> a is b False >>> a = [ 1 , 2 , 3 ] >>> b = [ 1 , 2 , 3 ] >>> a is b False >>> a = { 'a' : 1 , 'b' : 2 } >>> b = { 'a' : 1 , 'b' : 2 } >>> a is b False >>> id ( a ) 2343361272424 >>> id ( b ) 2343368258904 \u53ef\u4ee5\u770b\u51fa,\u5bf9\u4e8e\u6574\u6570,\u5b57\u7b26\u4e32\u7c7b\u578b,is\u4e3aTrue,\u5bf9\u4e8e\u6d6e\u70b9\u6570,\u5143\u7ec4,\u5217\u8868,\u5b57\u5178\u4e3aFalse. \u4f46\u662f\u5bf9\u4e8e\u6574\u6570\u548c\u5b57\u7b26\u4e32\u662f\u5b58\u5728\u7279\u4f8b\u7684\uff0cpython\u4e3a\u4e86\u4f18\u5316\u901f\u5ea6,\u4f7f\u7528\u4e86\u4e00\u4e2a\u5c0f\u6574\u6570\u5bf9\u8c61\u6c60,\u53ea\u8981\u5728[-5,256]\u4e4b\u95f4\u7684\u6574\u6570\u90fd\u662f\u63d0\u524d\u5efa\u7acb\u597d\u7684,\u4e0d\u4f1a\u88ab\u5783\u573e\u56de\u6536,\u56e0\u6b64\u76f8\u5e94\u5bf9\u8c61\u7684id\u4e5f\u76f8\u540c. \u5bf9\u4e8e\u5b57\u7b26\u4e32,python\u4e5f\u6709\u7740\u7c7b\u4f3c\u7684\u7b56\u7565,\u4e00\u4e9b\u8f83\u77ed\u7684\u5b57\u7b26\u4e32(\u4e0d\u5305\u542b\u7a7a\u683c)\u4e5f\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61. >>> a =- 6 >>> b =- 6 >>> a is b False >>> a =- 5 >>> b =- 5 >>> a is b True >>> a = 256 >>> b = 256 >>> a is b True >>> a = 257 >>> b = 257 >>> a is b False >>> a = 'ab' * 10 >>> b = 'ab' * 10 >>> a is b True >>> a = 'a' * 1000 >>> b = 'a' * 1000 >>> a is b True >>> a = 'a' * 100000 >>> b = 'a' * 100000 >>> a is b False >>> a = 'a b' >>> b = 'a b' >>> a is b False \u4e8c\u8fdb\u5236\uff0c\u516b\u8fdb\u5236\uff0c\u5341\u516d\u8fdb\u5236 >>> 0b10 2 >>> 0 o10 8 >>> 0x10 16 0b , 0o , 0x \u5206\u522b\u4ee3\u8868\u4ee5\u4e0a\u4e09\u79cd\u8fdb\u5236\u3002 \u53d8\u91cf \u540d\u79f0\uff08 \u6807\u8bc6\u7b26\uff09 \u53ea\u80fd\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\uff08_\uff09\u6784\u6210\uff0c\u4e14\u4e0d\u80fd\u4ee5\u6570\u5b57\u6253\u5934\u3002 >>> $ a = 1 SyntaxError : invalid syntax >>> _a = 1 >>> 9 a = 1 SyntaxError : invalid syntax >>> a9 = 1 \u8bed\u53e5 \u8bed\u53e5\u548c\u8868\u8fbe\u5f0f\uff1a\u8868\u8fbe\u5f0f\u8868\u793a\u4e00\u79cd\u4e1c\u897f\uff0c\u800c\u8bed\u53e5\u8868\u793a\u505a\u4e00\u4ef6\u4e8b\u3002\u4f8b\u5982\uff1a >>> 2 * 2 #\u8868\u8fbe\u5f0f 4 >>> x = 2 * 2 #y\u8d4b\u503c\u8bed\u53e5\uff0c\u6267\u884c\u8d4b\u503c\u64cd\u4f5c \u6ce8\u610f\uff1aPython3\u4e2dprint\u4e3a\u51fd\u6570\uff0c\u800cPython2\u4e2d\u4e3a\u8bed\u53e5\uff0c\u56e0\u6b64\u524d\u8005\u9700\u8981\u62ec\u53f7\u4f20\u53c2\uff0c\u540e\u8005\u4e0d\u7528\u3002 \u51fd\u6570 \u5185\u7f6e\u51fd\u6570 Python\u63d0\u4f9b\u4e00\u4e9b\u6807\u51c6\u51fd\u6570\uff0c\u5982 abs,round,pow \u7b49\uff0c\u8fd9\u79cd\u51fd\u6570\u79f0\u4f5c \u5185\u7f6e\u51fd\u6570 \u3002 >>> pow ( 2 , 2 ) #\u7b49\u4ef7\u4e8e2**2 4 >>> 2 // 3 0 >>> round ( 2 // 3 ) #\u8be5\u51fd\u6570\u5c31\u8fd1\u53d6\u6574\uff0c\u5982\u679c\u4e24\u7aef\u4e00\u6837\u8fd1\uff08\u59820.5\uff09\uff0c\u90a3\u4e48\u5c31\u53d6\u5076\u6570 0 >>> round ( 7 / 2 ) 4 >>> round ( 5 / 2 ) 2 >>> round ( 5 /- 2 ) - 2 >>> abs ( - 3 ) #\u53d6\u7edd\u5bf9\u503c 3 \u5176\u4e2d\u7684 round \u51fd\u6570\u9700\u8981\u6ce8\u610f\u3002\u5982\u679c\u6211\u4eec\u9700\u8981\u5f3a\u5236\u5411\u4e0b\u53d6\u6574\uff0c\u53ef\u4ee5\u4f7f\u7528 floor \uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u51fd\u6570\u5728\u6a21\u5757\u4e2d\uff0c\u65e0\u6cd5\u76f4\u63a5\u8c03\u7528\u3002 >>> floor ( 3.5 ) NameError : name 'floor' is not defined \u66f4\u591a\u5185\u7f6e\u51fd\u6570\u53c2\u8003: Python3 Built-in Functions \u6a21\u5757 \u6a21\u5757\u662fPython\u7684\u6269\u5c55\uff0c\u4e5f\u5c31\u662f\u8bf4\u901a\u8fc7\u5bfc\u5165\u6a21\u5757\u53ef\u4ee5\u589e\u52a0\u6269\u5c55\u529f\u80fd\u3002\u6bd4\u5982\u524d\u9762\u7684 floor \u5b58\u5728\u4e8e math \u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 import \u5bfc\u5165\uff0c\u5e76\u901a\u8fc7 module.func \u6765\u6267\u884c\uff1a >>> import math >>> math . floor ( - 3.5 ) #\u5411\u4e0b\u53d6\u6574 - 4 >>> math . floor ( 3.5 ) 3 >>> math . ceil ( 3.2 ) #\u5411\u4e0a\u53d6\u6574 4 >>> math . ceil ( - 3.2 ) - 3 >>> int ( 3.5 ) #\u8fd9\u91cc\u4e0e\u4e0a\u9762\u6548\u679c\u76f8\u540c\uff0cint\u5f3a\u5236\u4e22\u6389\u5c0f\u6570 3 \u6ce8\u610f\uff1a\u8fd8\u6709\u4e00\u4e9b\u51fd\u6570\u5982str,float\u53ef\u4ee5\u8fdb\u884c\u7c7b\u4f3c\u8f6c\u6362\uff0c\u4f46\u662f\u5b83\u4eec\u5c5e\u4e8e\u7c7b\uff0c\u4e0d\u662f\u51fd\u6570\u3002 \u5982\u679c\u4e0d\u8003\u8651\u91cd\u540d\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u5f15\u7528\u51fd\u6570\u6765\u907f\u514d\u6bcf\u6b21\u8c03\u7528\u51fd\u6570\u90fd\u5e26\u4e0a\u6a21\u5757\u540d\u3002\u540c\u65f6\uff0c\u4e5f\u53ef\u4ee5\u5c06\u51fd\u6570\u540d\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u4ece\u800c\u4f7f\u53d8\u91cf\u4ee3\u66ff\u8be5\u51fd\u6570\u3002 >>> from math import sqrt >>> sqrt ( 4 ) 2.0 >>> ceil ( 4.3 ) NameError : name 'ceil' is not defined >>> foo = math . ceil >>> foo ( 4.3 ) 5 cmath\u548c\u590d\u6570 \u5f53\u9700\u8981\u4f7f\u7528\u590d\u6570\u65f6\uff0c\u53ef\u5f15\u5165 cmath \uff1a >>> sqrt ( - 1 ) ValueError : math domain error >>> import cmath >>> cmath . sqrt ( - 1 ) 1j >>> ( 1 + 2j ) * ( 1 - 2j ) ( 5 + 0j ) \u5176\u4e2d\uff0c\u53ef\u53d1\u73b0\u8fd9\u91cc\u4e0d\u9002\u5408\u518d\u6b21\u4f7f\u7528 from import \u8bed\u53e5\uff0c\u56e0\u4e3a\u51fa\u73b0\u4e86\u91cd\u540d\u51fd\u6570 sqrt \u3002\u540c\u65f6\uff0c\u865a\u6570\u4e0d\u662f\u5355\u72ec\u7c7b\u578b\uff0c\u800c\u662f\u5b9e\u90e8\u4e3a0\u7684\u590d\u6570\u3002 __future__ \u8fd9\u4e2a\u6a21\u5757\u7528\u4e8e\u5bfc\u5165\u672a\u6765\u7684\u529f\u80fd\uff08\u6bd4\u5982\u5728python2\u4e2d\u8c03\u7528python3\u7684print\uff09 \u5b57\u7b26\u4e32 Python\u5b57\u7b26\u4e32\u7528\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u90fd\u4e00\u6837\uff0c\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u5185\u5bb9\u5b58\u5728\u5176\u4e2d\u4e00\u79cd\u7b26\u53f7\u65f6\uff0c\u53ef\u7528\u53e6\u4e00\u79cd\u7b26\u53f7\u8fdb\u884c\u9650\u5b9a\uff0c\u4f46\u662f\u5982\u679c\u4e24\u79cd\u7b26\u53f7\u540c\u65f6\u51fa\u73b0\uff0c\u8fd8\u662f\u9700\u8981\u8f6c\u4e49\u3002 \u62fc\u63a5\u5b57\u7b26\u4e32 Python\u652f\u6301\u591a\u4e2a\u5b57\u7b26\u4e32\u5e76\u5217\u81ea\u52a8\u62fc\u63a5\uff08\u53ea\u9650\u5b57\u7b26\u4e32\uff0c\u8d4b\u503c\u4e4b\u540e\u53d8\u91cf\u65e0\u6cd5\u81ea\u52a8\u62fc\u63a5\uff09 >>> \"a\" \"b\" 'ab' >>> \"a\" \"b\" \"c\" 'abc' >>> x = \"a\" >>> y = 'b' >>> x y SyntaxError : invalid syntax \u66f4\u5e38\u89c1\u7684\u65b9\u5f0f\u662f\u4f7f\u7528 + \u53f7\uff1a >>> 'hello' + 'boy' 'helloboy' str\u4e0erepr \u5b57\u7b26\u4e32\u5305\u62ec\u4ee3\u7801\u5f62\u5f0f(repr)\u548c\u663e\u793a\u5f62\u5f0f\uff08str\uff09\uff0c\u53ef\u901a\u8fc7\u4e24\u79cd\u51fd\u6570\u5f3a\u5236\u8f6c\u6362\uff1a >>> print ( repr ( 'hello \\n boy' )) 'hello \\n boy' >>> print ( str ( 'hello \\n boy' )) hello boy \u539f\u59cb\u5b57\u7b26\u4e32\u548c\u957f\u5b57\u7b26\u4e32 Python\u652f\u6301\u957f\u5b57\u7b26\u4e32\u591a\u884c\u8f93\u5165\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e09\u5f15\u53f7\u6216\u5728\u672b\u5c3e\u52a0 \\ \u6765\u5b9e\u73b0\uff1a >>> print ( '''test ... fiz buz ... foo bar ... ''' ... ) test fiz buz foo bar >>> 1 + 2 \\ ... + 3 + 4 \\ ... + 5 + 6 \\ ... + 7 + 8 36 \u5f53\u6211\u4eec\u4e0d\u9700\u8981\u8f6c\u4e49\u65f6\uff0c\u53ef\u5728\u5b57\u7b26\u4e32\u524d\u52a0 r \u6765\u5904\u7406\uff1a >>> print ( r 'c:\\test\\num' ) c : \\ test \\ num >>> print ( r 'let \\' s go' ) #\u5185\u5bb9\u4e2d\u6709\u4e0e\u62ec\u8d77\u6765\u7684\u5f15\u53f7\u4e00\u6837\u7684\u5f15\u53f7\u65f6\uff0c\u9700\u8981\u8f6c\u4e49\uff0c\u6b64\u65f6\u659c\u6760\u4e5f\u4f1a\u5728\u6253\u5370\u5185\u5bb9\u4e2d\u51fa\u73b0\u3002 let \\ 's go >>> print ( r 'c:\\test\\num \\' ) #\u6839\u636e\u4e0a\u9762\u5185\u5bb9\u53ef\u77e5\uff0c\u672b\u5c3e\u4e0d\u80fd\u6709\u8f6c\u4e49\u7b26 SyntaxError : EOL while scanning string literal \u8981\u89e3\u51b3\u672b\u5c3e\u8f6c\u4e49\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b57\u7b26\u4e32\u62fc\u63a5\u65b9\u5f0f\uff1a >>> print ( r 'c:\\test\\num' ' \\\\ ' ) c : \\ test \\ num \\ \u5b57\u7b26\u4e32\u7f16\u7801 Python3\u9ed8\u8ba4\u5b57\u7b26\u4e32\u7f16\u7801\u4e3aUnicode,\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a code points \u5e8f\u5217\uff0c\u6bcf\u4e00\u4e2a\u5b57\u7b26\u90fd\u5bf9\u5e94\u4e00\u4e2a\u5341\u516d\u8fdb\u5236\u6570\uff080-0x10FFFF\uff09\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u60f3\u8981\u628a\u8fd9\u4e9b\u5185\u5bb9\u5b58\u50a8\u4e3a\u4ee5bytes\u4e3a\u5355\u4f4d\uff080-255\uff09\u7684\u503c\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c encoding \u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc732\u4f4d\u6574\u6570\u6765\u8fdb\u884c\u8868\u793a\uff0c\u4f46\u662f\u5176\u5b9e\u5927\u591a\u6570\u5b57\u7b26\uff08\u6bd4\u5982\u5b57\u6bcd\uff09\u90fd\u662f\u5728ASCII\u7801\u8303\u56f4\u5185\u7684\uff0c\u6240\u4ee5\u8fd9\u79cd\u7c97\u66b4\u7684\u65b9\u5f0f\u4f1a\u5bfc\u81f4\u5185\u5b58\u5360\u7528\u52a0\u5927\uff0c\u800c\u4e14\u53d7\u9650\u4e8e\u673a\u5668\u7684\u67b6\u6784\u3002\u66f4\u52a0\u901a\u7528\u7684\u4ee3\u66ff\u65b9\u5f0f\u662f UTF-8 ,\u4ee3\u8868\u4ee58bits\u4e3a\u5355\u4f4d\u7684 Unicode Tranformation Format \u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff1a\u5bf9\u4e8e\u5e38\u7528\u7684\u5b57\u7b26\uff08\u6807\u51c6ASCII\uff0c\u5c0f\u4e8e128\uff09\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u539f\u6570\u503c\u8fdb\u884c\u5b58\u50a8\u3002\u5927\u4e8e128\u65f6\uff0c\u901a\u8fc7\u591a\u4e2abytes\u8fdb\u884c\u53d8\u957f\u7f16\u7801\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u9ad8\u6548\u6027\u3002\u5177\u4f53\u6267\u884c\u5982\u4e0b\uff1a >>> 'foo bar' . encode ( 'ascii' ) b 'foo bar' >>> 'foo bar' . encode ( 'utf-8' ) b 'foo bar' >>> 'foo bar' . encode ( 'utf-32' ) b ' \\xff\\xfe\\x00\\x00 f \\x00\\x00\\x00 o \\x00\\x00\\x00 o \\x00\\x00\\x00 \\x00\\x00\\x00 b \\x00\\x00\\x00 a \\x00\\x00\\x00 r \\x00\\x00\\x00 ' \u4e0a\u6587\u53ef\u89c1\uff0c\u7f16\u7801\u540e\u5176\u5b9e\u90fd\u8f6c\u6362\u4e3a\u4e86bytes\u8fd9\u79cd\u4e0d\u53ef\u53d8\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u3002\u5f53\u67d0\u4e9b\u60c5\u51b5\u5fc5\u987b\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u65f6\uff0c\u53ef\u8fdb\u884c\u4e00\u4e9b\u8bbe\u7f6e\uff1a >>> \"H\u00e6ll\u00e5, w\u00f8rld!\" . encode ( \"ASCII\" ) #\u9ed8\u8ba4\u53c2\u6570\u4e3astrict UnicodeEncodeError : 'ascii' codec can 't encode character ' \\ xe6 ' in position 1: ordinal not in range(128) >>> \"H\u00e6ll\u00e5, w\u00f8rld!\" . encode ( \"ASCII\" , \"ignore\" ) b 'Hll, wrld!' >>> \"H\u00e6ll\u00e5, w\u00f8rld!\" . encode ( \"ASCII\" , \"replace\" ) b 'H?ll?, w?rld!' >>> \"H\u00e6ll\u00e5, w\u00f8rld!\" . encode ( \"ASCII\" , \"backslashreplace\" ) b 'H \\\\ xe6ll \\\\ xe5, w \\\\ xf8rld!' >>> \"H\u00e6ll\u00e5, w\u00f8rld!\" . encode ( \"ASCII\" , \"xmlcharrefreplace\" ) b 'H&#230;ll&#229;, w&#248;rld!' \u4ece\u800c\u5f3a\u5236\u8fdb\u884c\u76f8\u5e94\u8f6c\u6362\uff0c\u9ed8\u8ba4\u7f16\u7801\u662futf-8: >>> \"H\u00e6ll\u00e5, w\u00f8rld!\" . encode ( \"utf-8\" ) b 'H \\xc3\\xa6 ll \\xc3\\xa5 , w \\xc3\\xb8 rld!' >>> b 'H \\xc3\\xa6 ll \\xc3\\xa5 , w \\xc3\\xb8 rld!' . decode () 'H\u00e6ll\u00e5, w\u00f8rld!' \u4e5f\u53ef\u4ee5\u76f4\u63a5\u521b\u5efastr\u548cbytes(\u4e00\u5b9a\u8981\u6307\u5b9aencoding): >>> bytes ( \"H\u00e6ll\u00e5, w\u00f8rld!\" , encoding = \"utf-8\" ) b 'H \\xc3\\xa6 ll \\xc3\\xa5 , w \\xc3\\xb8 rld!' >>> str ( b 'H \\xc3\\xa6 ll \\xc3\\xa5 , w \\xc3\\xb8 rld!' , encoding = \"utf-8\" ) 'H\u00e6ll\u00e5, w\u00f8rld! \u540c\u65f6\uff0cPython\u8fd8\u63d0\u4f9b\u4e86\u4e00\u79cd\u53ef\u4fee\u6539\u5b57\u7b26\u4e32 bytearray \uff08bytes\u4e0d\u80fd\u6539\uff09\uff0c\u4f46\u662f\u6539\u7684\u65f6\u5019\u9700\u8981\u8bbe\u7f6e\u5bf9\u5e94\u4f4d\u7f6e\u7684\u503c\u57280-255\u4e4b\u95f4\uff0c\u5982\u4e0b\uff1a >>> x = bytearray ( b 'heheda' ) #\u4e0d\u8981\u5fd8\u8bb0\u524d\u9762\u7684b >>> x [ 1 ] = ord ( b 'u' ) >>> x bytearray ( b 'huheda' ) \u6307\u5b9a\u4ee3\u7801\u7f16\u7801\u683c\u5f0f \u5f00\u5934\u5199\u4e0a: # -*- coding: encoding name -*- \u5c31\u597d\u3002","title":"\u57fa\u7840\u603b\u7ed3(\u4e00)-\u57fa\u7840\u77e5\u8bc6"},{"location":"python/Basic_01/#basic-01","text":"","title":"Basic 01"},{"location":"python/Basic_01/#_1","text":"","title":"\u6570\u5b66\u8ba1\u7b97"},{"location":"python/Basic_01/#_2","text":"Python3\u4e2d\u7684\u6574\u9664\u7528\u7684\u662f // \u7b26\u53f7\uff0c\u91c7\u7528\u7684\u662f\u5411\u4e0b\u53d6\u6574\uff0c\u5982\uff1a >>> - 10 // 3 - 4 >>> 10 //- 3 - 4 >>> 10 // 3 3 >>> - 10 //- 3 3 \u8fd9\u91cc\u53ef\u4ee5\u770b\u51fa\uff0c\u6574\u9664\u53ef\u4ee5\u4f5c\u7528\u4e8e\u8d1f\u6570\uff0c\u800c a//b=c \u53d6\u7684\u662f: b c1<=a,b c2>=a\u91cc\uff0cc1\u4e0ec2\u4e2d\u8f83\u5c0f\u7684\u4e00\u4e2a(\u5e26\u7b26\u53f7),\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u5411\u4e0b\u53d6\u6574\u3002 \u4f9d\u636e a mod b = a- (a//b *b) \u7684\u516c\u5f0f\u53ef\u4ee5\u63a8\u51fa\u53d6\u4f59\u7684\u7ed3\u679c\uff1a >>> 10 % 3 1 >>> 10 %- 3 - 2 >>> - 10 % 3 2 >>> - 10 %- 3 - 1","title":"\u6574\u9664\u548c\u53d6\u4f59"},{"location":"python/Basic_01/#_3","text":"\u4e58\u65b9\u7684\u4f18\u5148\u7ea7\u6bd4\u8d1f\u53f7(\u5355\u76ee\u6c42\u8d1f)\u7684\u4f18\u5148\u7ea7\u9ad8\uff0c\u56e0\u6b64 -3**2 \u4f1a\u51fa\u73b0\uff1a >>> - 3 ** 2 - 9 >>> ( - 3 ) ** 2 9","title":"\u4e58\u65b9"},{"location":"python/Basic_01/#_4","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 ** \u6307\u6570 (\u6700\u9ad8\u4f18\u5148\u7ea7) ~ + - \u6309\u4f4d\u7ffb\u8f6c, \u4e00\u5143\u52a0\u53f7\u548c\u51cf\u53f7 (\u6700\u540e\u4e24\u4e2a\u7684\u65b9\u6cd5\u540d\u4e3a +@ \u548c -@) * / % // \u4e58\uff0c\u9664\uff0c\u53d6\u6a21\u548c\u53d6\u6574\u9664 + - \u52a0\u6cd5\u51cf\u6cd5 >> << \u53f3\u79fb\uff0c\u5de6\u79fb\u8fd0\u7b97\u7b26 & \u4f4d 'AND' ^ | \u4f4d\u8fd0\u7b97\u7b26 <= < > >= \u6bd4\u8f83\u8fd0\u7b97\u7b26 <> == != \u7b49\u4e8e\u8fd0\u7b97\u7b26 = %= /= //= -= += = *= \u8d4b\u503c\u8fd0\u7b97\u7b26 is is not \u8eab\u4efd\u8fd0\u7b97\u7b26 in not in \u6210\u5458\u8fd0\u7b97\u7b26 not or and \u903b\u8f91\u8fd0\u7b97\u7b26","title":"\u4f18\u5148\u7ea7"},{"location":"python/Basic_01/#is","text":"\u4e00\u4e2a\u5bf9\u8c61\u62e5\u6709\u4e09\u4e2a\u57fa\u672c\u5143\u7d20\uff1aid,\u7c7b\u578b\u548c\u503c\u3002\u800cis\u662f\u5bf9\u5bf9\u8c61id\u7684\u5224\u65ad\uff0c==\u662f\u5bf9\u5bf9\u8c61\u503c\u7684\u5224\u65ad\u3002 >>> a = 1 >>> b = 1 >>> a is b True >>> a = 1.23 >>> b = 1.23 >>> a is b False >>> a = 'test' >>> b = 'test' >>> a is b True >>> a = ( 1 , 2 , 3 ) >>> b = ( 1 , 2 , 3 ) >>> a is b False >>> a = [ 1 , 2 , 3 ] >>> b = [ 1 , 2 , 3 ] >>> a is b False >>> a = { 'a' : 1 , 'b' : 2 } >>> b = { 'a' : 1 , 'b' : 2 } >>> a is b False >>> id ( a ) 2343361272424 >>> id ( b ) 2343368258904 \u53ef\u4ee5\u770b\u51fa,\u5bf9\u4e8e\u6574\u6570,\u5b57\u7b26\u4e32\u7c7b\u578b,is\u4e3aTrue,\u5bf9\u4e8e\u6d6e\u70b9\u6570,\u5143\u7ec4,\u5217\u8868,\u5b57\u5178\u4e3aFalse. \u4f46\u662f\u5bf9\u4e8e\u6574\u6570\u548c\u5b57\u7b26\u4e32\u662f\u5b58\u5728\u7279\u4f8b\u7684\uff0cpython\u4e3a\u4e86\u4f18\u5316\u901f\u5ea6,\u4f7f\u7528\u4e86\u4e00\u4e2a\u5c0f\u6574\u6570\u5bf9\u8c61\u6c60,\u53ea\u8981\u5728[-5,256]\u4e4b\u95f4\u7684\u6574\u6570\u90fd\u662f\u63d0\u524d\u5efa\u7acb\u597d\u7684,\u4e0d\u4f1a\u88ab\u5783\u573e\u56de\u6536,\u56e0\u6b64\u76f8\u5e94\u5bf9\u8c61\u7684id\u4e5f\u76f8\u540c. \u5bf9\u4e8e\u5b57\u7b26\u4e32,python\u4e5f\u6709\u7740\u7c7b\u4f3c\u7684\u7b56\u7565,\u4e00\u4e9b\u8f83\u77ed\u7684\u5b57\u7b26\u4e32(\u4e0d\u5305\u542b\u7a7a\u683c)\u4e5f\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61. >>> a =- 6 >>> b =- 6 >>> a is b False >>> a =- 5 >>> b =- 5 >>> a is b True >>> a = 256 >>> b = 256 >>> a is b True >>> a = 257 >>> b = 257 >>> a is b False >>> a = 'ab' * 10 >>> b = 'ab' * 10 >>> a is b True >>> a = 'a' * 1000 >>> b = 'a' * 1000 >>> a is b True >>> a = 'a' * 100000 >>> b = 'a' * 100000 >>> a is b False >>> a = 'a b' >>> b = 'a b' >>> a is b False","title":"is\u548c=="},{"location":"python/Basic_01/#_5","text":">>> 0b10 2 >>> 0 o10 8 >>> 0x10 16 0b , 0o , 0x \u5206\u522b\u4ee3\u8868\u4ee5\u4e0a\u4e09\u79cd\u8fdb\u5236\u3002","title":"\u4e8c\u8fdb\u5236\uff0c\u516b\u8fdb\u5236\uff0c\u5341\u516d\u8fdb\u5236"},{"location":"python/Basic_01/#_6","text":"\u540d\u79f0\uff08 \u6807\u8bc6\u7b26\uff09 \u53ea\u80fd\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\uff08_\uff09\u6784\u6210\uff0c\u4e14\u4e0d\u80fd\u4ee5\u6570\u5b57\u6253\u5934\u3002 >>> $ a = 1 SyntaxError : invalid syntax >>> _a = 1 >>> 9 a = 1 SyntaxError : invalid syntax >>> a9 = 1","title":"\u53d8\u91cf"},{"location":"python/Basic_01/#_7","text":"\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f\uff1a\u8868\u8fbe\u5f0f\u8868\u793a\u4e00\u79cd\u4e1c\u897f\uff0c\u800c\u8bed\u53e5\u8868\u793a\u505a\u4e00\u4ef6\u4e8b\u3002\u4f8b\u5982\uff1a >>> 2 * 2 #\u8868\u8fbe\u5f0f 4 >>> x = 2 * 2 #y\u8d4b\u503c\u8bed\u53e5\uff0c\u6267\u884c\u8d4b\u503c\u64cd\u4f5c \u6ce8\u610f\uff1aPython3\u4e2dprint\u4e3a\u51fd\u6570\uff0c\u800cPython2\u4e2d\u4e3a\u8bed\u53e5\uff0c\u56e0\u6b64\u524d\u8005\u9700\u8981\u62ec\u53f7\u4f20\u53c2\uff0c\u540e\u8005\u4e0d\u7528\u3002","title":"\u8bed\u53e5"},{"location":"python/Basic_01/#_8","text":"","title":"\u51fd\u6570"},{"location":"python/Basic_01/#_9","text":"Python\u63d0\u4f9b\u4e00\u4e9b\u6807\u51c6\u51fd\u6570\uff0c\u5982 abs,round,pow \u7b49\uff0c\u8fd9\u79cd\u51fd\u6570\u79f0\u4f5c \u5185\u7f6e\u51fd\u6570 \u3002 >>> pow ( 2 , 2 ) #\u7b49\u4ef7\u4e8e2**2 4 >>> 2 // 3 0 >>> round ( 2 // 3 ) #\u8be5\u51fd\u6570\u5c31\u8fd1\u53d6\u6574\uff0c\u5982\u679c\u4e24\u7aef\u4e00\u6837\u8fd1\uff08\u59820.5\uff09\uff0c\u90a3\u4e48\u5c31\u53d6\u5076\u6570 0 >>> round ( 7 / 2 ) 4 >>> round ( 5 / 2 ) 2 >>> round ( 5 /- 2 ) - 2 >>> abs ( - 3 ) #\u53d6\u7edd\u5bf9\u503c 3 \u5176\u4e2d\u7684 round \u51fd\u6570\u9700\u8981\u6ce8\u610f\u3002\u5982\u679c\u6211\u4eec\u9700\u8981\u5f3a\u5236\u5411\u4e0b\u53d6\u6574\uff0c\u53ef\u4ee5\u4f7f\u7528 floor \uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u51fd\u6570\u5728\u6a21\u5757\u4e2d\uff0c\u65e0\u6cd5\u76f4\u63a5\u8c03\u7528\u3002 >>> floor ( 3.5 ) NameError : name 'floor' is not defined \u66f4\u591a\u5185\u7f6e\u51fd\u6570\u53c2\u8003: Python3 Built-in Functions","title":"\u5185\u7f6e\u51fd\u6570"},{"location":"python/Basic_01/#_10","text":"\u6a21\u5757\u662fPython\u7684\u6269\u5c55\uff0c\u4e5f\u5c31\u662f\u8bf4\u901a\u8fc7\u5bfc\u5165\u6a21\u5757\u53ef\u4ee5\u589e\u52a0\u6269\u5c55\u529f\u80fd\u3002\u6bd4\u5982\u524d\u9762\u7684 floor \u5b58\u5728\u4e8e math \u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 import \u5bfc\u5165\uff0c\u5e76\u901a\u8fc7 module.func \u6765\u6267\u884c\uff1a >>> import math >>> math . floor ( - 3.5 ) #\u5411\u4e0b\u53d6\u6574 - 4 >>> math . floor ( 3.5 ) 3 >>> math . ceil ( 3.2 ) #\u5411\u4e0a\u53d6\u6574 4 >>> math . ceil ( - 3.2 ) - 3 >>> int ( 3.5 ) #\u8fd9\u91cc\u4e0e\u4e0a\u9762\u6548\u679c\u76f8\u540c\uff0cint\u5f3a\u5236\u4e22\u6389\u5c0f\u6570 3 \u6ce8\u610f\uff1a\u8fd8\u6709\u4e00\u4e9b\u51fd\u6570\u5982str,float\u53ef\u4ee5\u8fdb\u884c\u7c7b\u4f3c\u8f6c\u6362\uff0c\u4f46\u662f\u5b83\u4eec\u5c5e\u4e8e\u7c7b\uff0c\u4e0d\u662f\u51fd\u6570\u3002 \u5982\u679c\u4e0d\u8003\u8651\u91cd\u540d\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u5f15\u7528\u51fd\u6570\u6765\u907f\u514d\u6bcf\u6b21\u8c03\u7528\u51fd\u6570\u90fd\u5e26\u4e0a\u6a21\u5757\u540d\u3002\u540c\u65f6\uff0c\u4e5f\u53ef\u4ee5\u5c06\u51fd\u6570\u540d\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u4ece\u800c\u4f7f\u53d8\u91cf\u4ee3\u66ff\u8be5\u51fd\u6570\u3002 >>> from math import sqrt >>> sqrt ( 4 ) 2.0 >>> ceil ( 4.3 ) NameError : name 'ceil' is not defined >>> foo = math . ceil >>> foo ( 4.3 ) 5","title":"\u6a21\u5757"},{"location":"python/Basic_01/#cmath","text":"\u5f53\u9700\u8981\u4f7f\u7528\u590d\u6570\u65f6\uff0c\u53ef\u5f15\u5165 cmath \uff1a >>> sqrt ( - 1 ) ValueError : math domain error >>> import cmath >>> cmath . sqrt ( - 1 ) 1j >>> ( 1 + 2j ) * ( 1 - 2j ) ( 5 + 0j ) \u5176\u4e2d\uff0c\u53ef\u53d1\u73b0\u8fd9\u91cc\u4e0d\u9002\u5408\u518d\u6b21\u4f7f\u7528 from import \u8bed\u53e5\uff0c\u56e0\u4e3a\u51fa\u73b0\u4e86\u91cd\u540d\u51fd\u6570 sqrt \u3002\u540c\u65f6\uff0c\u865a\u6570\u4e0d\u662f\u5355\u72ec\u7c7b\u578b\uff0c\u800c\u662f\u5b9e\u90e8\u4e3a0\u7684\u590d\u6570\u3002","title":"cmath\u548c\u590d\u6570"},{"location":"python/Basic_01/#9595future9595","text":"\u8fd9\u4e2a\u6a21\u5757\u7528\u4e8e\u5bfc\u5165\u672a\u6765\u7684\u529f\u80fd\uff08\u6bd4\u5982\u5728python2\u4e2d\u8c03\u7528python3\u7684print\uff09","title":"__future__"},{"location":"python/Basic_01/#_11","text":"Python\u5b57\u7b26\u4e32\u7528\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u90fd\u4e00\u6837\uff0c\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u5185\u5bb9\u5b58\u5728\u5176\u4e2d\u4e00\u79cd\u7b26\u53f7\u65f6\uff0c\u53ef\u7528\u53e6\u4e00\u79cd\u7b26\u53f7\u8fdb\u884c\u9650\u5b9a\uff0c\u4f46\u662f\u5982\u679c\u4e24\u79cd\u7b26\u53f7\u540c\u65f6\u51fa\u73b0\uff0c\u8fd8\u662f\u9700\u8981\u8f6c\u4e49\u3002","title":"\u5b57\u7b26\u4e32"},{"location":"python/Basic_01/#_12","text":"Python\u652f\u6301\u591a\u4e2a\u5b57\u7b26\u4e32\u5e76\u5217\u81ea\u52a8\u62fc\u63a5\uff08\u53ea\u9650\u5b57\u7b26\u4e32\uff0c\u8d4b\u503c\u4e4b\u540e\u53d8\u91cf\u65e0\u6cd5\u81ea\u52a8\u62fc\u63a5\uff09 >>> \"a\" \"b\" 'ab' >>> \"a\" \"b\" \"c\" 'abc' >>> x = \"a\" >>> y = 'b' >>> x y SyntaxError : invalid syntax \u66f4\u5e38\u89c1\u7684\u65b9\u5f0f\u662f\u4f7f\u7528 + \u53f7\uff1a >>> 'hello' + 'boy' 'helloboy'","title":"\u62fc\u63a5\u5b57\u7b26\u4e32"},{"location":"python/Basic_01/#strrepr","text":"\u5b57\u7b26\u4e32\u5305\u62ec\u4ee3\u7801\u5f62\u5f0f(repr)\u548c\u663e\u793a\u5f62\u5f0f\uff08str\uff09\uff0c\u53ef\u901a\u8fc7\u4e24\u79cd\u51fd\u6570\u5f3a\u5236\u8f6c\u6362\uff1a >>> print ( repr ( 'hello \\n boy' )) 'hello \\n boy' >>> print ( str ( 'hello \\n boy' )) hello boy","title":"str\u4e0erepr"},{"location":"python/Basic_01/#_13","text":"Python\u652f\u6301\u957f\u5b57\u7b26\u4e32\u591a\u884c\u8f93\u5165\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e09\u5f15\u53f7\u6216\u5728\u672b\u5c3e\u52a0 \\ \u6765\u5b9e\u73b0\uff1a >>> print ( '''test ... fiz buz ... foo bar ... ''' ... ) test fiz buz foo bar >>> 1 + 2 \\ ... + 3 + 4 \\ ... + 5 + 6 \\ ... + 7 + 8 36 \u5f53\u6211\u4eec\u4e0d\u9700\u8981\u8f6c\u4e49\u65f6\uff0c\u53ef\u5728\u5b57\u7b26\u4e32\u524d\u52a0 r \u6765\u5904\u7406\uff1a >>> print ( r 'c:\\test\\num' ) c : \\ test \\ num >>> print ( r 'let \\' s go' ) #\u5185\u5bb9\u4e2d\u6709\u4e0e\u62ec\u8d77\u6765\u7684\u5f15\u53f7\u4e00\u6837\u7684\u5f15\u53f7\u65f6\uff0c\u9700\u8981\u8f6c\u4e49\uff0c\u6b64\u65f6\u659c\u6760\u4e5f\u4f1a\u5728\u6253\u5370\u5185\u5bb9\u4e2d\u51fa\u73b0\u3002 let \\ 's go >>> print ( r 'c:\\test\\num \\' ) #\u6839\u636e\u4e0a\u9762\u5185\u5bb9\u53ef\u77e5\uff0c\u672b\u5c3e\u4e0d\u80fd\u6709\u8f6c\u4e49\u7b26 SyntaxError : EOL while scanning string literal \u8981\u89e3\u51b3\u672b\u5c3e\u8f6c\u4e49\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b57\u7b26\u4e32\u62fc\u63a5\u65b9\u5f0f\uff1a >>> print ( r 'c:\\test\\num' ' \\\\ ' ) c : \\ test \\ num \\","title":"\u539f\u59cb\u5b57\u7b26\u4e32\u548c\u957f\u5b57\u7b26\u4e32"},{"location":"python/Basic_01/#_14","text":"Python3\u9ed8\u8ba4\u5b57\u7b26\u4e32\u7f16\u7801\u4e3aUnicode,\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a code points \u5e8f\u5217\uff0c\u6bcf\u4e00\u4e2a\u5b57\u7b26\u90fd\u5bf9\u5e94\u4e00\u4e2a\u5341\u516d\u8fdb\u5236\u6570\uff080-0x10FFFF\uff09\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u60f3\u8981\u628a\u8fd9\u4e9b\u5185\u5bb9\u5b58\u50a8\u4e3a\u4ee5bytes\u4e3a\u5355\u4f4d\uff080-255\uff09\u7684\u503c\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c encoding \u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc732\u4f4d\u6574\u6570\u6765\u8fdb\u884c\u8868\u793a\uff0c\u4f46\u662f\u5176\u5b9e\u5927\u591a\u6570\u5b57\u7b26\uff08\u6bd4\u5982\u5b57\u6bcd\uff09\u90fd\u662f\u5728ASCII\u7801\u8303\u56f4\u5185\u7684\uff0c\u6240\u4ee5\u8fd9\u79cd\u7c97\u66b4\u7684\u65b9\u5f0f\u4f1a\u5bfc\u81f4\u5185\u5b58\u5360\u7528\u52a0\u5927\uff0c\u800c\u4e14\u53d7\u9650\u4e8e\u673a\u5668\u7684\u67b6\u6784\u3002\u66f4\u52a0\u901a\u7528\u7684\u4ee3\u66ff\u65b9\u5f0f\u662f UTF-8 ,\u4ee3\u8868\u4ee58bits\u4e3a\u5355\u4f4d\u7684 Unicode Tranformation Format \u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff1a\u5bf9\u4e8e\u5e38\u7528\u7684\u5b57\u7b26\uff08\u6807\u51c6ASCII\uff0c\u5c0f\u4e8e128\uff09\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u539f\u6570\u503c\u8fdb\u884c\u5b58\u50a8\u3002\u5927\u4e8e128\u65f6\uff0c\u901a\u8fc7\u591a\u4e2abytes\u8fdb\u884c\u53d8\u957f\u7f16\u7801\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u9ad8\u6548\u6027\u3002\u5177\u4f53\u6267\u884c\u5982\u4e0b\uff1a >>> 'foo bar' . encode ( 'ascii' ) b 'foo bar' >>> 'foo bar' . encode ( 'utf-8' ) b 'foo bar' >>> 'foo bar' . encode ( 'utf-32' ) b ' \\xff\\xfe\\x00\\x00 f \\x00\\x00\\x00 o \\x00\\x00\\x00 o \\x00\\x00\\x00 \\x00\\x00\\x00 b \\x00\\x00\\x00 a \\x00\\x00\\x00 r \\x00\\x00\\x00 ' \u4e0a\u6587\u53ef\u89c1\uff0c\u7f16\u7801\u540e\u5176\u5b9e\u90fd\u8f6c\u6362\u4e3a\u4e86bytes\u8fd9\u79cd\u4e0d\u53ef\u53d8\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u3002\u5f53\u67d0\u4e9b\u60c5\u51b5\u5fc5\u987b\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u65f6\uff0c\u53ef\u8fdb\u884c\u4e00\u4e9b\u8bbe\u7f6e\uff1a >>> \"H\u00e6ll\u00e5, w\u00f8rld!\" . encode ( \"ASCII\" ) #\u9ed8\u8ba4\u53c2\u6570\u4e3astrict UnicodeEncodeError : 'ascii' codec can 't encode character ' \\ xe6 ' in position 1: ordinal not in range(128) >>> \"H\u00e6ll\u00e5, w\u00f8rld!\" . encode ( \"ASCII\" , \"ignore\" ) b 'Hll, wrld!' >>> \"H\u00e6ll\u00e5, w\u00f8rld!\" . encode ( \"ASCII\" , \"replace\" ) b 'H?ll?, w?rld!' >>> \"H\u00e6ll\u00e5, w\u00f8rld!\" . encode ( \"ASCII\" , \"backslashreplace\" ) b 'H \\\\ xe6ll \\\\ xe5, w \\\\ xf8rld!' >>> \"H\u00e6ll\u00e5, w\u00f8rld!\" . encode ( \"ASCII\" , \"xmlcharrefreplace\" ) b 'H&#230;ll&#229;, w&#248;rld!' \u4ece\u800c\u5f3a\u5236\u8fdb\u884c\u76f8\u5e94\u8f6c\u6362\uff0c\u9ed8\u8ba4\u7f16\u7801\u662futf-8: >>> \"H\u00e6ll\u00e5, w\u00f8rld!\" . encode ( \"utf-8\" ) b 'H \\xc3\\xa6 ll \\xc3\\xa5 , w \\xc3\\xb8 rld!' >>> b 'H \\xc3\\xa6 ll \\xc3\\xa5 , w \\xc3\\xb8 rld!' . decode () 'H\u00e6ll\u00e5, w\u00f8rld!' \u4e5f\u53ef\u4ee5\u76f4\u63a5\u521b\u5efastr\u548cbytes(\u4e00\u5b9a\u8981\u6307\u5b9aencoding): >>> bytes ( \"H\u00e6ll\u00e5, w\u00f8rld!\" , encoding = \"utf-8\" ) b 'H \\xc3\\xa6 ll \\xc3\\xa5 , w \\xc3\\xb8 rld!' >>> str ( b 'H \\xc3\\xa6 ll \\xc3\\xa5 , w \\xc3\\xb8 rld!' , encoding = \"utf-8\" ) 'H\u00e6ll\u00e5, w\u00f8rld! \u540c\u65f6\uff0cPython\u8fd8\u63d0\u4f9b\u4e86\u4e00\u79cd\u53ef\u4fee\u6539\u5b57\u7b26\u4e32 bytearray \uff08bytes\u4e0d\u80fd\u6539\uff09\uff0c\u4f46\u662f\u6539\u7684\u65f6\u5019\u9700\u8981\u8bbe\u7f6e\u5bf9\u5e94\u4f4d\u7f6e\u7684\u503c\u57280-255\u4e4b\u95f4\uff0c\u5982\u4e0b\uff1a >>> x = bytearray ( b 'heheda' ) #\u4e0d\u8981\u5fd8\u8bb0\u524d\u9762\u7684b >>> x [ 1 ] = ord ( b 'u' ) >>> x bytearray ( b 'huheda' )","title":"\u5b57\u7b26\u4e32\u7f16\u7801"},{"location":"python/Basic_01/#_15","text":"\u5f00\u5934\u5199\u4e0a: # -*- coding: encoding name -*- \u5c31\u597d\u3002","title":"\u6307\u5b9a\u4ee3\u7801\u7f16\u7801\u683c\u5f0f"},{"location":"python/Basic_02/","text":"\u5e8f\u5217 Python\u4e2d\u7684\u5bb9\u5668\u4ee3\u8868\u53ef\u4ee5\u5305\u542b\u5176\u4ed6\u5bf9\u8c61\u7684\u5bf9\u8c61\u3002\u800c\u5bb9\u5668\u4e2d\u6bd4\u8f83\u7ecf\u5178\u7684\uff0c\u4e00\u79cd\u662f\u5e8f\u5217\uff08\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u7d22\u5f15\uff09\uff0c\u4e00\u79cd\u662f\u5b57\u5178\uff08\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u540d\u79f0/\u952e\u503c\uff09\u3002 \u4e24\u79cd\u91cd\u8981\u7684\u5e8f\u5217 \u5217\u8868 \u53ef\u4fee\u6539 \u5143\u7ec4 \u4e0d\u53ef\u4fee\u6539 \u901a\u8fc7\u4e24\u79cd\u5e8f\u5217\u7684\u7279\u6027\u53ef\u4ee5\u770b\u51fa\uff0c\u5217\u8868\u9002\u7528\u4e8e\u4e2d\u9014\u9700\u8981\u4fee\u6539\u7684\u60c5\u51b5\uff0c\u800c\u5143\u7ec4\u9002\u7528\u4e8e\u9650\u5236\u4fee\u6539\u7684\u60c5\u51b5\u3002(\u6bd4\u5982\u5b57\u5178\u4e2d\u5143\u7ec4\u4f5c\u4e3a\u952e\u53ef\u4ee5\uff0c\u800c\u5217\u8868\u4e0d\u884c) \u5e8f\u5217\u64cd\u4f5c \u7d22\u5f15 \u5e8f\u5217\u7684\u7d22\u5f15\u662f\u4ece0\u5f00\u59cb\uff0c\u800c\u4e14\u53ef\u4ee5\u4ece\u540e\u5f80\u524d\u7d22\u5f15\uff08\u4e5f\u5c31\u662f\u8d1f\u7d22\u5f15\uff09\u3002\u540c\u65f6\uff0cPython\u4e2d\u5b57\u7b26\u4e32\u5176\u5b9e\u662f\u4ee5\u5b57\u7b26\u4e3a\u5143\u7d20\u7684\u5e8f\u5217\uff08\u6ca1\u6709\u5b57\u7b26\u5bf9\u5e94\u7684\u7c7b\u578b\uff0c\u5355\u5b57\u7b26\u5176\u5b9e\u662f\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u5b57\u7b26\u5e8f\u5217\uff09\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u6267\u884c\u76f8\u5e94\u7684\u5e8f\u5217\u64cd\u4f5c\uff1a >>> t = 'hello' >>> t [ 1 ] 'e' >>> 'hello' [ - 1 ] 'o' >>> f = input ( 'Year: ' )[ 3 ] #\u5f53\u51fd\u6570\u8fd4\u56de\u503c\u4e3a\u5e8f\u5217\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u7d22\u5f15 Year : 2018 >>> f '8' \u5207\u7247 \u5982\u679c\u9700\u8981\u53d6\u4e00\u5b9a\u8303\u56f4\u7684\u5185\u5bb9\uff0c\u5c31\u9700\u8981\u4f7f\u7528\u5207\u7247\u529f\u80fd\u4e86\u3002\u5207\u7247\u529f\u80fd\u5c55\u793a\u5982\u4e0b\uff1a >>> numbers = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> numbers [ 0 : 4 ] #\u5de6\u8fb9\u7d22\u5f15\u5305\u542b\u5728\u7ed3\u679c\u91cc\uff0c\u53f3\u8fb9\u4e0d\u5305\u542b [ 0 , 1 , 2 , 3 ] >>> numbers [ 0 : 10 ] [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> numbers [ 0 : 11 ] #\u8d85\u51fa\u8303\u56f4\u4ecd\u80fd\u81ea\u52a8\u8c03\u6574 [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> numbers [ 0 :] #\u4ee5\u4e0a\u4e24\u6761\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u4ee3\u66ff [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> numbers [ 4 :] [ 4 , 5 , 6 , 7 , 8 , 9 ] >>> numbers [: 4 ] #\u5de6\u8fb9\u7701\u7565\u9ed8\u8ba4\u4ece\u5de6\u8fb9\u9996\u4f4d\uff08\u7d22\u5f15\u4e3a0\uff09\u5f00\u59cb [ 0 , 1 , 2 , 3 ] >>> numbers [:] [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> numbers [ 0 : 10 : 2 ] #\u7b2c\u4e09\u4f4d\u53c2\u6570\u4e3a\u6b65\u957f [ 0 , 2 , 4 , 6 , 8 ] >>> numbers [ 10 : 0 : - 2 ] [ 9 , 7 , 5 , 3 , 1 ] >>> numbers [:: 2 ] [ 0 , 2 , 4 , 6 , 8 ] >>> numbers [: 5 : - 2 ] [ 9 , 7 ] \u5e8f\u5217\u76f8\u52a0 >>> [ 1 , 2 , 3 ] + [ 4 , 5 , 6 ] [ 1 , 2 , 3 , 4 , 5 , 6 ] >>> 'hello' + 'nerd' 'hellonerd' >>> [ 1 , 2 , 3 ] + 'nerd' TypeError : can only concatenate list ( not \"str\" ) to list \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e24\u4e2a\u76f8\u540c\u7c7b\u578b\u5e8f\u5217\u624d\u80fd\u6267\u884c\u62fc\u63a5\u3002 \u4e58\u6cd5 \u5e8f\u5217\u901a\u8fc7\u4e58\u6cd5\u53ef\u4ee5\u591a\u6b21\u91cd\u590d\u4e00\u4e2a\u5e8f\u5217\u6765\u62fc\u63a5\u6210\u65b0\u5e8f\u5217\uff1a >>> 'python' * 4 'pythonpythonpythonpython' >>> s = [ None ] * 10 >>> s [ None , None , None , None , None , None , None , None , None , None ] \u6210\u5458\u8d44\u683c \u901a\u8fc7 in \u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u5224\u65ad\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u5728\u4e00\u4e2a\u5e8f\u5217\u4e2d\uff0c\u5982\uff1a >>> users = [ 'hh' , 'hah' , 'dada' ] >>> input ( 'input a name: ' ) in users input a name : hh True >>> permissions = 'rw' #\u5e38\u7528\u4e8e\u6743\u9650\u68c0\u6d4b >>> 'w' in permissions True >>> s = 'https://www.ffo.com' #\u5224\u65ad\u662f\u5426\u4e3a\u7f51\u5740 >>> 'https://' in s True \u5176\u4e2d\uff0c\u6700\u540e\u4e00\u4e2a\u6bd4\u8f83\u7279\u6b8a\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5143\u7d20\u65f6\u5176\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\u6240\u4ee5\u4e00\u5f00\u59cb\u7684 in \u53ea\u80fd\u68c0\u6d4b\u5b57\u7b26\u662f\u5426\u5728\u5b57\u7b26\u4e32\u4e2d\uff0c\u4f46\u662f\u73b0\u5728\u4e5f\u80fd\u68c0\u6d4b\u5b50\u4e32\u662f\u5426\u5728\u5b57\u7b26\u4e32\u4e2d\u3002 len, min, max,sum \u8fd9\u4e09\u4e2a\u5185\u7f6e\u51fd\u6570\u4e2d\uff0clen\u8fd4\u56de\u5e8f\u5217\u5143\u7d20\u4e2a\u6570\uff0cmin\u8fd4\u56de\u6700\u5c0f\u5143\u7d20\uff0cmax\u8fd4\u56de\u6700\u5927\u5143\u7d20,sum\u5bf9\u5e8f\u5217\u6c42\u548c >>> a = [ 1 , 4 , 2 , 6 ] >>> len ( a ) 4 >>> max ( a ) 6 >>> min ( a ) 1 >> sum ( a , 5 ) #\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8868\u793a\u4ece5\u5f00\u59cb\u52a0(\u9ed8\u8ba4\u4ece0\u5f00\u59cb) 18 >>> max ( 1 , 3 , 9 , 2 ) 9 >>> min ( 1 , 3 , 9 , 2 ) 1 >>> len ( 1 , 3 , 9 , 2 ) TypeError : len () takes exactly one argument ( 4 given ) >>> sum ( 1 , 3 , 9 , 2 ) TypeError : sum expected at most 2 arguments , got 4 \u5176\u4e2d\uff0cmin\u548cmax\u53ef\u4ee5\u76f4\u63a5\u7528\u6570\u5b57\u5f53\u53c2\u6570\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f46\u662flen,sum\u7684\u53c2\u6570\u5fc5\u987b\u4e3a\u5e8f\u5217\u3002 \u5217\u8868 \u51fd\u6570list \u5217\u8868\u6700\u5927\u7684\u7279\u6027\u5c31\u662f\u53ef\u4fee\u6539\u3002\u6bd4\u5982\u5f53\u6211\u4eec\u60f3\u4fee\u6539\u5b57\u7b26\u4e32\u65f6\uff0c\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u6210list: >>> test = 'hello nerd' >>> test [ 1 ] = 'f' TypeError : 'str' object does not support item assignment >>> list ( test ) [ 'h' , 'e' , 'l' , 'l' , 'o' , ' ' , 'n' , 'e' , 'r' , 'd' ] >>> t = list ( test ) >>> t [ 1 ] = 'f' >>> new_str = '' . join ( t ) >>> new_str 'hfllo nerd' \u53ef\u89c1\uff0c\u901a\u8fc7list\u51fd\u6570\u8f6c\u6362\u6210\u5217\u8868\u540e\u3002\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u8fdb\u884c\u4fee\u6539\uff0c\u6539\u5b8c\u4e4b\u540e\u62fc\u63a5\u8d77\u6765\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u5b57\u7b26\u4e32\u4e86\u3002 \u57fa\u672c\u64cd\u4f5c \u4fee\u6539\uff0c\u5220\u9664\u5143\u7d20\u503c >>> alist = [ 'red' , 'black' , 'yellow' , 'white' , 'brown' ] >>> alist [ 1 ] = 'green' >>> alist [ 'red' , 'green' , 'yellow' , 'white' , 'brown' ] >>> del alist [ 2 ] \u6ce8:\u6309\u7d22\u5f15\u5220\u9664\u5143\u7d20\u7528 del , pop ,\u6309\u503c\u5220\u9664\u7528 remove ,\u6e05\u7a7a\u7528 clear . \u5bf9\u5207\u7247\u6279\u91cf\u4fee\u6539\u503c >>> alist [ 1 :] = list ( 'gwb' ) >>> alist [ 'red' , 'g' , 'w' , 'b' ] >>> alist [ 1 : 1 ] = list ( 'rksdl' ) >>> alist [ 'red' , 'r' , 'k' , 's' , 'd' , 'l' , 'g' , 'w' , 'b' ] >>> alist [ 0 : 1 ] = [] #\u6b64\u5904\u4e0edel\u76f8\u540c >>> alist [ 'r' , 'k' , 's' , 'd' , 'l' , 'g' , 'w' , 'b' ] >>> alist [ 3 : - 2 ] = [] >>> alist [ 'r' , 'k' , 's' , 'w' , 'b' ] \u5217\u8868\u65b9\u6cd5 append \u7528\u4e8e\u5728\u672b\u5c3e\u6dfb\u52a0\u5143\u7d20\u3002 >>> alist [ 'r' , 'k' , 's' , 'w' , 'b' ] >>> alist . append ( 'test' ) >>> alist [ 'r' , 'k' , 's' , 'w' , 'b' , 'test' ] clear \u5c31\u5730\u6e05\u7a7a >>> alist . clear () >>> alist [] copy \u521b\u5efa\u5217\u8868\u526f\u672c >>> a = [ 1 , 2 , 3 , 4 ] >>> b = a # \u53ea\u662f\u5173\u8054\u4e86\u53e6\u4e00\u4e2a\u540d\u5b57\uff0c\u6ca1\u6709\u521b\u5efa\u526f\u672c\uff0c\u4fee\u6539b\u7b49\u4e8e\u4fee\u6539a >>> b [ 1 ] = 4 >>> a [ 1 , 4 , 3 , 4 ] >>> a is b True >>> a = [ 7 , 8 , 9 ] #\u628aa\u6307\u5411\u53e6\u4e00\u5757\u7a7a\u95f4 >>> a is b # \u6b64\u65f6a,b\u5206\u522b\u4e3a\u4e0d\u540c\u5bf9\u8c61 False >>> b [ 1 ] = 2 >>> a # \u4fee\u6539b\u4e0d\u5f71\u54cda [ 7 , 8 , 9 ] >>> a = [ 1 , 2 , 3 , 4 ] >>> b = a . copy () # \u521b\u5efa\u526f\u672c\uff0c\u5bf9b\u64cd\u4f5c\u4e0d\u5f71\u54cda >>> b [ 1 ] = 4 >>> a [ 1 , 2 , 3 , 4 ] >>> b = a [:] # \u540ccopy >>> b [ 1 , 2 , 3 , 4 ] >>> b [ 1 ] = 4 >>> a [ 1 , 2 , 3 , 4 ] >>> b = list ( a ) # \u540ccopy >>> b [ 1 ] = 4 >>> a [ 1 , 2 , 3 , 4 ] >>> a = [ 1 ,[ 2 , 3 ], 4 ] >>> b = a . copy () # \u6d45\u590d\u5236 >>> b [ 1 ] . append ( 4 ) >>> a [ 1 , [ 2 , 3 , 4 ], 4 ] >>> b [ 1 , [ 2 , 3 , 4 ], 4 ] >>> id ( a [ 1 ]) 1305999784008 >>> id ( b [ 1 ]) #\u6d45\u590d\u5236\u5e76\u6ca1\u6709\u6539\u53d8\u5d4c\u5957list\u7684id,a[1]\u548cb[1]\u6307\u5411\u540c\u4e00\u4f4d\u7f6e 1305999784008 >>> from copy import deepcopy >>> c = deepcopy ( a ) >>> id ( c [ 1 ]) # \u6df1\u5ea6copy\u4e4b\u540e\u6539\u53d8\u4e86\u5bf9\u8c61 1305999850952 \u53ef\u4ee5\u770b\u51fa,python\u7684\u8d4b\u503c\u66f4\u50cf\u662f\u7ed9\u6570\u636e\u8d34\u6807\u7b7e, a=[x,x,x],b=a \u4f7f\u5f97a,b\u90fd\u8d34\u5728\u4e86\u540c\u4e00\u5757\u533a\u57df,\u6240\u4ee5\u4fee\u6539a\u7b49\u540c\u4e8e\u4fee\u6539b.\u5982\u679c\u6211\u4eec\u5bf9a\u91cd\u65b0\u8d4b\u503c,\u90a3\u4e48a\u5c31\u8d34\u5230\u4e86\u5176\u4ed6\u5730\u65b9,a\u548cb\u5c31\u4e92\u4e0d\u5e72\u6270\u4e86. \u4e3a\u4e86\u89e3\u51b3\u8d4b\u503c\u5e26\u6765\u7684\u540c\u6b65\u4fee\u6539\u95ee\u9898,\u53ef\u4ee5\u91c7\u7528 a.copy() \u64cd\u4f5c,\u8fd9\u79cd\u64cd\u4f5c\u4f7f\u5f97\u4e24\u4e2a\u6807\u7b7e\u6307\u5411\u4e86\u4e0d\u540c\u526f\u672c,\u4f46\u8fd9\u79cd\u6d45\u590d\u5236\u5bf9\u4e8e\u590d\u6742\u5e8f\u5217(\u5982\u5d4c\u5957list)\u8fd8\u662f\u6ca1\u6cd5\u5904\u7406,\u53ef\u4ee5\u770b\u5230\u5d4c\u5957\u90e8\u5206\u7684list\u8fd8\u662f\u540c\u6837\u7684id,\u6307\u5411\u540c\u4e00\u4f4d\u7f6e.\u5f7b\u5e95\u89e3\u51b3\u8be5\u95ee\u9898\u53ef\u4ee5\u4f7f\u7528\u6df1\u5ea6\u590d\u5236. count \u7edf\u8ba1\u5217\u8868\u4e2d\u5143\u7d20\u7684\u4e2a\u6570 >>> test = [ 'ab' , 'bc' , 'ab' , 'to' , 'de' ] >>> test . count ( 'to' ) 1 >>> test . count ( 'ab' ) 2 >>> test = [ 'ab' , 'bc' ,[ 'ab' ], 'to' , 'de' ] # ['ab']\u662f\u5217\u8868\uff0c\u4e0e'ab'\u4e0d\u540c >>> test . count ( 'ab' ) 1 extend \u5c06\u591a\u4e2a\u5143\u7d20\u62fc\u63a5\u5728\u672b\u5c3e >>> a = [ 1 , 2 , 3 ] >>> b = [ 4 , 5 , 6 ] >>> a . extend ( b ) >>> a [ 1 , 2 , 3 , 4 , 5 , 6 ] >>> a = [ 1 , 2 , 3 ] >>> b = [ 4 , 5 , 6 ] >>> a + b # \u4e0d\u4f1a\u5bf9a\u6709\u4efb\u4f55\u6539\u53d8 [ 1 , 2 , 3 , 4 , 5 , 6 ] >>> a [ 1 , 2 , 3 ] >>> a [ len ( a ):] = b # \u540cextend >>> a [ 1 , 2 , 3 , 4 , 5 , 6 ] index \u8fd4\u56de\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u5143\u7d20\u7684\u7d22\u5f15 >>> test = [ 'ab' , 'bc' , 'ab' , 'to' , 'de' ] >>> test . index ( 'ab' ) # \u7b2c\u4e00\u4e2a\u57280 0 >>> test . index ( 'too' ) # \u4e0d\u80fd\u7d22\u5f15\u4e0d\u5b58\u5728\u7684\u5143\u7d20 ValueError : 'too' is not in list >>> test . index ( 'to' ) 3 insert \u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20 >>> num = [ 1 , 2 , 3 , 4 , 6 , 7 ] >>> num . insert ( 4 , 'five' ) >>> num [ 1 , 2 , 3 , 4 , 'five' , 6 , 7 ] >>> num = [ 1 , 2 , 3 , 4 , 6 , 7 ] >>> num [ 3 : 3 ] = 'five' # \u8fd9\u91cc\u89c6\u4e3a\u591a\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5e8f\u5217 >>> num [ 1 , 2 , 3 , 'f' , 'i' , 'v' , 'e' , 4 , 6 , 7 ] >>> num [ 3 : 3 ] = [ 'five' ] # \u540cinsert >>> num [ 1 , 2 , 3 , 'five' , 'f' , 'i' , 'v' , 'e' , 4 , 6 , 7 ] >>> num [ 4 : - 3 ] = [] >>> num [ 1 , 2 , 3 , 'five' , 4 , 6 , 7 ] pop \u5f39\u51fa\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\uff0c\u9ed8\u8ba4\u4e3a\u672b\u5c3e,\u5e76\u8fd4\u56de\u8be5\u5143\u7d20\u7684\u503c\uff0c\u8fd9\u662f\u552f\u4e00\u4e00\u4e2a\u65e2\u4fee\u6539\u5e8f\u5217\u53c8\u8fd4\u56de\u503c\u7684 >>> x = [ 1 , 2 , 3 ] >>> x . pop () 3 >>> x . pop ( 0 ) 1 >>> x [ 2 ] remove \u53bb\u9664\u6307\u5b9a\u5143\u7d20(\u7b2c\u4e00\u4e2a)\uff0c\u8fd4\u56deNone. >>> x = [ 'to' , 'be' , 'or' , 'not' , 'to' , 'be' ] >>> x . remove ( 'to' ) # \u53ea\u53bb\u9664\u4e86\u7b2c\u4e00\u4e2ato >>> x [ 'be' , 'or' , 'not' , 'to' , 'be' ] >>> x . remove ( 'too' ) ValueError : list . remove ( x ): x not in list reverse/reversed \u6309\u76f8\u53cd\u7684\u987a\u5e8f\u6392\u5217 >>> x = [ 1 , 2 , 3 ] >>> x . reverse () # \u76f4\u63a5\u4fee\u6539x >>> x [ 3 , 2 , 1 ] >>> reversed ( x ) # \u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668 < list_reverseiterator object at 0x000001F9E8161748 > >>> list ( reversed ( x )) # \u5c06\u8fed\u4ee3\u5668\u8f6c\u4e3a\u5217\u8868 [ 1 , 2 , 3 ] sort/sorted \u5bf9\u5217\u8868\u8fdb\u884c\u6392\u5e8f >>> x = [ 2 , 8 , 3 , 6 , 4 , 1 , 7 ] >>> x . sort () # \u76f4\u63a5\u4f5c\u7528\u4e8ex >>> x [ 1 , 2 , 3 , 4 , 6 , 7 , 8 ] >>> x = [ 2 , 8 , 3 , 6 , 4 , 1 , 7 ] >>> y = sorted ( x ) # \u4f5c\u7528\u4e8e\u526f\u672c >>> y [ 1 , 2 , 3 , 4 , 6 , 7 , 8 ] >>> t = list ( reversed ( sorted ( x ))) #\u9006\u6392\u5e8f >>> t [ 8 , 7 , 6 , 4 , 3 , 2 , 1 ] sort\u6709\u4e24\u4e2a\u53ef\u9009\u53c2\u6570\uff1akey\u548creverse. \u524d\u8005\u662f\u9700\u8981\u6307\u5b9a\u4e00\u4e2a\u51fd\u6570\uff0c\u901a\u8fc7\u8d4b\u4e88\u6bcf\u4e2a\u5143\u7d20\u4e00\u4e2a\u952e\uff0c\u7136\u540e\u901a\u8fc7\u952e\u8fdb\u884c\u6392\u5e8f\u3002\u540e\u8005\u53ea\u6709True\u548cFalse\u4e24\u4e2a\u503c\uff0c\u4ee3\u8868\u9006\u5e8f\u548c\u6b63\u5e8f\u3002 >>> x = [ 'Python' , 'Java' , 'Go' , 'C#' , 'C++' , 'C' , 'Ruby' , 'Javascript' ] >>> x . sort ( key = len ) # \u6309\u957f\u5ea6\u6392\u5e8f >>> x [ 'C' , 'Go' , 'C#' , 'C++' , 'Java' , 'Ruby' , 'Python' , 'Javascript' ] >>> x . sort ( key = lambda a : 1 / len ( a )) >>> x [ 'Javascript' , 'Python' , 'Java' , 'Ruby' , 'C++' , 'C#' , 'Go' , 'C' ] >>> x = [ 4 , 6 , 2 , 1 , 7 , 9 ] >>> x . sort ( reverse = True ) >>> x [ 9 , 7 , 6 , 4 , 2 , 1 ] >>> x = [ 'Python' , 'Java' , 'Go' , 'C#' , 'C++' , 'C' , 'Ruby' , 'Javascript' ] >>> x . sort () >>> x [ 'C' , 'C#' , 'C++' , 'Go' , 'Java' , 'Javascript' , 'Python' , 'Ruby' ] \u5143\u7ec4 \u5143\u7ec4\u65e0\u6cd5\u4fee\u6539\uff0c\u53ef\u4ee5\u8fdb\u884c\u7684\u64cd\u4f5c\u4e0d\u591a\uff0c\u6700\u91cd\u8981\u7684\u521b\u5efa\u548c\u7d22\u5f15\u64cd\u4f5c\u5982\u4e0b\uff1a >>> 1 , 2 , 3 ( 1 , 2 , 3 ) >>> ( 1 ) # \u6ca1\u6709\u9017\u53f7\u5c31\u53ea\u662f\u6570\u5b57 1 >>> ( 1 ,) # \u6b64\u65f6\u662f\u5143\u7ec4 ( 1 ,) >>> 2 * ( 42 ,) ( 42 , 42 ) >>> 2 * ( 42 ) 84 >>> tuple ( 'abc' ) ( 'a' , 'b' , 'c' ) >>> tuple ([ 'a' , 'b' , 'c' ]) ( 'a' , 'b' , 'c' ) >>> tuple (( 'a' , 'b' , 'c' )) ( 'a' , 'b' , 'c' ) >>> tuple ( 'a' , 'b' , 'c' ) # \u5fc5\u987b\u4f20\u5165\u5e8f\u5217 TypeError : tuple () takes at most 1 argument ( 3 given ) >>> x = 1 , 2 , 3 >>> x [ 1 ] 2 >>> x [ 0 : 2 ] ( 1 , 2 )","title":"\u57fa\u7840\u603b\u7ed3(\u4e8c)-\u5e8f\u5217"},{"location":"python/Basic_02/#_1","text":"Python\u4e2d\u7684\u5bb9\u5668\u4ee3\u8868\u53ef\u4ee5\u5305\u542b\u5176\u4ed6\u5bf9\u8c61\u7684\u5bf9\u8c61\u3002\u800c\u5bb9\u5668\u4e2d\u6bd4\u8f83\u7ecf\u5178\u7684\uff0c\u4e00\u79cd\u662f\u5e8f\u5217\uff08\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u7d22\u5f15\uff09\uff0c\u4e00\u79cd\u662f\u5b57\u5178\uff08\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u540d\u79f0/\u952e\u503c\uff09\u3002","title":"\u5e8f\u5217"},{"location":"python/Basic_02/#_2","text":"\u5217\u8868 \u53ef\u4fee\u6539 \u5143\u7ec4 \u4e0d\u53ef\u4fee\u6539 \u901a\u8fc7\u4e24\u79cd\u5e8f\u5217\u7684\u7279\u6027\u53ef\u4ee5\u770b\u51fa\uff0c\u5217\u8868\u9002\u7528\u4e8e\u4e2d\u9014\u9700\u8981\u4fee\u6539\u7684\u60c5\u51b5\uff0c\u800c\u5143\u7ec4\u9002\u7528\u4e8e\u9650\u5236\u4fee\u6539\u7684\u60c5\u51b5\u3002(\u6bd4\u5982\u5b57\u5178\u4e2d\u5143\u7ec4\u4f5c\u4e3a\u952e\u53ef\u4ee5\uff0c\u800c\u5217\u8868\u4e0d\u884c)","title":"\u4e24\u79cd\u91cd\u8981\u7684\u5e8f\u5217"},{"location":"python/Basic_02/#_3","text":"","title":"\u5e8f\u5217\u64cd\u4f5c"},{"location":"python/Basic_02/#_4","text":"\u5e8f\u5217\u7684\u7d22\u5f15\u662f\u4ece0\u5f00\u59cb\uff0c\u800c\u4e14\u53ef\u4ee5\u4ece\u540e\u5f80\u524d\u7d22\u5f15\uff08\u4e5f\u5c31\u662f\u8d1f\u7d22\u5f15\uff09\u3002\u540c\u65f6\uff0cPython\u4e2d\u5b57\u7b26\u4e32\u5176\u5b9e\u662f\u4ee5\u5b57\u7b26\u4e3a\u5143\u7d20\u7684\u5e8f\u5217\uff08\u6ca1\u6709\u5b57\u7b26\u5bf9\u5e94\u7684\u7c7b\u578b\uff0c\u5355\u5b57\u7b26\u5176\u5b9e\u662f\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u5b57\u7b26\u5e8f\u5217\uff09\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u6267\u884c\u76f8\u5e94\u7684\u5e8f\u5217\u64cd\u4f5c\uff1a >>> t = 'hello' >>> t [ 1 ] 'e' >>> 'hello' [ - 1 ] 'o' >>> f = input ( 'Year: ' )[ 3 ] #\u5f53\u51fd\u6570\u8fd4\u56de\u503c\u4e3a\u5e8f\u5217\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u7d22\u5f15 Year : 2018 >>> f '8'","title":"\u7d22\u5f15"},{"location":"python/Basic_02/#_5","text":"\u5982\u679c\u9700\u8981\u53d6\u4e00\u5b9a\u8303\u56f4\u7684\u5185\u5bb9\uff0c\u5c31\u9700\u8981\u4f7f\u7528\u5207\u7247\u529f\u80fd\u4e86\u3002\u5207\u7247\u529f\u80fd\u5c55\u793a\u5982\u4e0b\uff1a >>> numbers = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> numbers [ 0 : 4 ] #\u5de6\u8fb9\u7d22\u5f15\u5305\u542b\u5728\u7ed3\u679c\u91cc\uff0c\u53f3\u8fb9\u4e0d\u5305\u542b [ 0 , 1 , 2 , 3 ] >>> numbers [ 0 : 10 ] [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> numbers [ 0 : 11 ] #\u8d85\u51fa\u8303\u56f4\u4ecd\u80fd\u81ea\u52a8\u8c03\u6574 [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> numbers [ 0 :] #\u4ee5\u4e0a\u4e24\u6761\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u4ee3\u66ff [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> numbers [ 4 :] [ 4 , 5 , 6 , 7 , 8 , 9 ] >>> numbers [: 4 ] #\u5de6\u8fb9\u7701\u7565\u9ed8\u8ba4\u4ece\u5de6\u8fb9\u9996\u4f4d\uff08\u7d22\u5f15\u4e3a0\uff09\u5f00\u59cb [ 0 , 1 , 2 , 3 ] >>> numbers [:] [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] >>> numbers [ 0 : 10 : 2 ] #\u7b2c\u4e09\u4f4d\u53c2\u6570\u4e3a\u6b65\u957f [ 0 , 2 , 4 , 6 , 8 ] >>> numbers [ 10 : 0 : - 2 ] [ 9 , 7 , 5 , 3 , 1 ] >>> numbers [:: 2 ] [ 0 , 2 , 4 , 6 , 8 ] >>> numbers [: 5 : - 2 ] [ 9 , 7 ]","title":"\u5207\u7247"},{"location":"python/Basic_02/#_6","text":">>> [ 1 , 2 , 3 ] + [ 4 , 5 , 6 ] [ 1 , 2 , 3 , 4 , 5 , 6 ] >>> 'hello' + 'nerd' 'hellonerd' >>> [ 1 , 2 , 3 ] + 'nerd' TypeError : can only concatenate list ( not \"str\" ) to list \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e24\u4e2a\u76f8\u540c\u7c7b\u578b\u5e8f\u5217\u624d\u80fd\u6267\u884c\u62fc\u63a5\u3002","title":"\u5e8f\u5217\u76f8\u52a0"},{"location":"python/Basic_02/#_7","text":"\u5e8f\u5217\u901a\u8fc7\u4e58\u6cd5\u53ef\u4ee5\u591a\u6b21\u91cd\u590d\u4e00\u4e2a\u5e8f\u5217\u6765\u62fc\u63a5\u6210\u65b0\u5e8f\u5217\uff1a >>> 'python' * 4 'pythonpythonpythonpython' >>> s = [ None ] * 10 >>> s [ None , None , None , None , None , None , None , None , None , None ]","title":"\u4e58\u6cd5"},{"location":"python/Basic_02/#_8","text":"\u901a\u8fc7 in \u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u5224\u65ad\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u5728\u4e00\u4e2a\u5e8f\u5217\u4e2d\uff0c\u5982\uff1a >>> users = [ 'hh' , 'hah' , 'dada' ] >>> input ( 'input a name: ' ) in users input a name : hh True >>> permissions = 'rw' #\u5e38\u7528\u4e8e\u6743\u9650\u68c0\u6d4b >>> 'w' in permissions True >>> s = 'https://www.ffo.com' #\u5224\u65ad\u662f\u5426\u4e3a\u7f51\u5740 >>> 'https://' in s True \u5176\u4e2d\uff0c\u6700\u540e\u4e00\u4e2a\u6bd4\u8f83\u7279\u6b8a\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5143\u7d20\u65f6\u5176\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\u6240\u4ee5\u4e00\u5f00\u59cb\u7684 in \u53ea\u80fd\u68c0\u6d4b\u5b57\u7b26\u662f\u5426\u5728\u5b57\u7b26\u4e32\u4e2d\uff0c\u4f46\u662f\u73b0\u5728\u4e5f\u80fd\u68c0\u6d4b\u5b50\u4e32\u662f\u5426\u5728\u5b57\u7b26\u4e32\u4e2d\u3002","title":"\u6210\u5458\u8d44\u683c"},{"location":"python/Basic_02/#len-min-maxsum","text":"\u8fd9\u4e09\u4e2a\u5185\u7f6e\u51fd\u6570\u4e2d\uff0clen\u8fd4\u56de\u5e8f\u5217\u5143\u7d20\u4e2a\u6570\uff0cmin\u8fd4\u56de\u6700\u5c0f\u5143\u7d20\uff0cmax\u8fd4\u56de\u6700\u5927\u5143\u7d20,sum\u5bf9\u5e8f\u5217\u6c42\u548c >>> a = [ 1 , 4 , 2 , 6 ] >>> len ( a ) 4 >>> max ( a ) 6 >>> min ( a ) 1 >> sum ( a , 5 ) #\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8868\u793a\u4ece5\u5f00\u59cb\u52a0(\u9ed8\u8ba4\u4ece0\u5f00\u59cb) 18 >>> max ( 1 , 3 , 9 , 2 ) 9 >>> min ( 1 , 3 , 9 , 2 ) 1 >>> len ( 1 , 3 , 9 , 2 ) TypeError : len () takes exactly one argument ( 4 given ) >>> sum ( 1 , 3 , 9 , 2 ) TypeError : sum expected at most 2 arguments , got 4 \u5176\u4e2d\uff0cmin\u548cmax\u53ef\u4ee5\u76f4\u63a5\u7528\u6570\u5b57\u5f53\u53c2\u6570\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f46\u662flen,sum\u7684\u53c2\u6570\u5fc5\u987b\u4e3a\u5e8f\u5217\u3002","title":"len, min, max,sum"},{"location":"python/Basic_02/#_9","text":"","title":"\u5217\u8868"},{"location":"python/Basic_02/#list","text":"\u5217\u8868\u6700\u5927\u7684\u7279\u6027\u5c31\u662f\u53ef\u4fee\u6539\u3002\u6bd4\u5982\u5f53\u6211\u4eec\u60f3\u4fee\u6539\u5b57\u7b26\u4e32\u65f6\uff0c\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u6210list: >>> test = 'hello nerd' >>> test [ 1 ] = 'f' TypeError : 'str' object does not support item assignment >>> list ( test ) [ 'h' , 'e' , 'l' , 'l' , 'o' , ' ' , 'n' , 'e' , 'r' , 'd' ] >>> t = list ( test ) >>> t [ 1 ] = 'f' >>> new_str = '' . join ( t ) >>> new_str 'hfllo nerd' \u53ef\u89c1\uff0c\u901a\u8fc7list\u51fd\u6570\u8f6c\u6362\u6210\u5217\u8868\u540e\u3002\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u8fdb\u884c\u4fee\u6539\uff0c\u6539\u5b8c\u4e4b\u540e\u62fc\u63a5\u8d77\u6765\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u5b57\u7b26\u4e32\u4e86\u3002","title":"\u51fd\u6570list"},{"location":"python/Basic_02/#_10","text":"\u4fee\u6539\uff0c\u5220\u9664\u5143\u7d20\u503c >>> alist = [ 'red' , 'black' , 'yellow' , 'white' , 'brown' ] >>> alist [ 1 ] = 'green' >>> alist [ 'red' , 'green' , 'yellow' , 'white' , 'brown' ] >>> del alist [ 2 ] \u6ce8:\u6309\u7d22\u5f15\u5220\u9664\u5143\u7d20\u7528 del , pop ,\u6309\u503c\u5220\u9664\u7528 remove ,\u6e05\u7a7a\u7528 clear . \u5bf9\u5207\u7247\u6279\u91cf\u4fee\u6539\u503c >>> alist [ 1 :] = list ( 'gwb' ) >>> alist [ 'red' , 'g' , 'w' , 'b' ] >>> alist [ 1 : 1 ] = list ( 'rksdl' ) >>> alist [ 'red' , 'r' , 'k' , 's' , 'd' , 'l' , 'g' , 'w' , 'b' ] >>> alist [ 0 : 1 ] = [] #\u6b64\u5904\u4e0edel\u76f8\u540c >>> alist [ 'r' , 'k' , 's' , 'd' , 'l' , 'g' , 'w' , 'b' ] >>> alist [ 3 : - 2 ] = [] >>> alist [ 'r' , 'k' , 's' , 'w' , 'b' ]","title":"\u57fa\u672c\u64cd\u4f5c"},{"location":"python/Basic_02/#_11","text":"append \u7528\u4e8e\u5728\u672b\u5c3e\u6dfb\u52a0\u5143\u7d20\u3002 >>> alist [ 'r' , 'k' , 's' , 'w' , 'b' ] >>> alist . append ( 'test' ) >>> alist [ 'r' , 'k' , 's' , 'w' , 'b' , 'test' ] clear \u5c31\u5730\u6e05\u7a7a >>> alist . clear () >>> alist [] copy \u521b\u5efa\u5217\u8868\u526f\u672c >>> a = [ 1 , 2 , 3 , 4 ] >>> b = a # \u53ea\u662f\u5173\u8054\u4e86\u53e6\u4e00\u4e2a\u540d\u5b57\uff0c\u6ca1\u6709\u521b\u5efa\u526f\u672c\uff0c\u4fee\u6539b\u7b49\u4e8e\u4fee\u6539a >>> b [ 1 ] = 4 >>> a [ 1 , 4 , 3 , 4 ] >>> a is b True >>> a = [ 7 , 8 , 9 ] #\u628aa\u6307\u5411\u53e6\u4e00\u5757\u7a7a\u95f4 >>> a is b # \u6b64\u65f6a,b\u5206\u522b\u4e3a\u4e0d\u540c\u5bf9\u8c61 False >>> b [ 1 ] = 2 >>> a # \u4fee\u6539b\u4e0d\u5f71\u54cda [ 7 , 8 , 9 ] >>> a = [ 1 , 2 , 3 , 4 ] >>> b = a . copy () # \u521b\u5efa\u526f\u672c\uff0c\u5bf9b\u64cd\u4f5c\u4e0d\u5f71\u54cda >>> b [ 1 ] = 4 >>> a [ 1 , 2 , 3 , 4 ] >>> b = a [:] # \u540ccopy >>> b [ 1 , 2 , 3 , 4 ] >>> b [ 1 ] = 4 >>> a [ 1 , 2 , 3 , 4 ] >>> b = list ( a ) # \u540ccopy >>> b [ 1 ] = 4 >>> a [ 1 , 2 , 3 , 4 ] >>> a = [ 1 ,[ 2 , 3 ], 4 ] >>> b = a . copy () # \u6d45\u590d\u5236 >>> b [ 1 ] . append ( 4 ) >>> a [ 1 , [ 2 , 3 , 4 ], 4 ] >>> b [ 1 , [ 2 , 3 , 4 ], 4 ] >>> id ( a [ 1 ]) 1305999784008 >>> id ( b [ 1 ]) #\u6d45\u590d\u5236\u5e76\u6ca1\u6709\u6539\u53d8\u5d4c\u5957list\u7684id,a[1]\u548cb[1]\u6307\u5411\u540c\u4e00\u4f4d\u7f6e 1305999784008 >>> from copy import deepcopy >>> c = deepcopy ( a ) >>> id ( c [ 1 ]) # \u6df1\u5ea6copy\u4e4b\u540e\u6539\u53d8\u4e86\u5bf9\u8c61 1305999850952 \u53ef\u4ee5\u770b\u51fa,python\u7684\u8d4b\u503c\u66f4\u50cf\u662f\u7ed9\u6570\u636e\u8d34\u6807\u7b7e, a=[x,x,x],b=a \u4f7f\u5f97a,b\u90fd\u8d34\u5728\u4e86\u540c\u4e00\u5757\u533a\u57df,\u6240\u4ee5\u4fee\u6539a\u7b49\u540c\u4e8e\u4fee\u6539b.\u5982\u679c\u6211\u4eec\u5bf9a\u91cd\u65b0\u8d4b\u503c,\u90a3\u4e48a\u5c31\u8d34\u5230\u4e86\u5176\u4ed6\u5730\u65b9,a\u548cb\u5c31\u4e92\u4e0d\u5e72\u6270\u4e86. \u4e3a\u4e86\u89e3\u51b3\u8d4b\u503c\u5e26\u6765\u7684\u540c\u6b65\u4fee\u6539\u95ee\u9898,\u53ef\u4ee5\u91c7\u7528 a.copy() \u64cd\u4f5c,\u8fd9\u79cd\u64cd\u4f5c\u4f7f\u5f97\u4e24\u4e2a\u6807\u7b7e\u6307\u5411\u4e86\u4e0d\u540c\u526f\u672c,\u4f46\u8fd9\u79cd\u6d45\u590d\u5236\u5bf9\u4e8e\u590d\u6742\u5e8f\u5217(\u5982\u5d4c\u5957list)\u8fd8\u662f\u6ca1\u6cd5\u5904\u7406,\u53ef\u4ee5\u770b\u5230\u5d4c\u5957\u90e8\u5206\u7684list\u8fd8\u662f\u540c\u6837\u7684id,\u6307\u5411\u540c\u4e00\u4f4d\u7f6e.\u5f7b\u5e95\u89e3\u51b3\u8be5\u95ee\u9898\u53ef\u4ee5\u4f7f\u7528\u6df1\u5ea6\u590d\u5236. count \u7edf\u8ba1\u5217\u8868\u4e2d\u5143\u7d20\u7684\u4e2a\u6570 >>> test = [ 'ab' , 'bc' , 'ab' , 'to' , 'de' ] >>> test . count ( 'to' ) 1 >>> test . count ( 'ab' ) 2 >>> test = [ 'ab' , 'bc' ,[ 'ab' ], 'to' , 'de' ] # ['ab']\u662f\u5217\u8868\uff0c\u4e0e'ab'\u4e0d\u540c >>> test . count ( 'ab' ) 1 extend \u5c06\u591a\u4e2a\u5143\u7d20\u62fc\u63a5\u5728\u672b\u5c3e >>> a = [ 1 , 2 , 3 ] >>> b = [ 4 , 5 , 6 ] >>> a . extend ( b ) >>> a [ 1 , 2 , 3 , 4 , 5 , 6 ] >>> a = [ 1 , 2 , 3 ] >>> b = [ 4 , 5 , 6 ] >>> a + b # \u4e0d\u4f1a\u5bf9a\u6709\u4efb\u4f55\u6539\u53d8 [ 1 , 2 , 3 , 4 , 5 , 6 ] >>> a [ 1 , 2 , 3 ] >>> a [ len ( a ):] = b # \u540cextend >>> a [ 1 , 2 , 3 , 4 , 5 , 6 ] index \u8fd4\u56de\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u5143\u7d20\u7684\u7d22\u5f15 >>> test = [ 'ab' , 'bc' , 'ab' , 'to' , 'de' ] >>> test . index ( 'ab' ) # \u7b2c\u4e00\u4e2a\u57280 0 >>> test . index ( 'too' ) # \u4e0d\u80fd\u7d22\u5f15\u4e0d\u5b58\u5728\u7684\u5143\u7d20 ValueError : 'too' is not in list >>> test . index ( 'to' ) 3 insert \u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20 >>> num = [ 1 , 2 , 3 , 4 , 6 , 7 ] >>> num . insert ( 4 , 'five' ) >>> num [ 1 , 2 , 3 , 4 , 'five' , 6 , 7 ] >>> num = [ 1 , 2 , 3 , 4 , 6 , 7 ] >>> num [ 3 : 3 ] = 'five' # \u8fd9\u91cc\u89c6\u4e3a\u591a\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5e8f\u5217 >>> num [ 1 , 2 , 3 , 'f' , 'i' , 'v' , 'e' , 4 , 6 , 7 ] >>> num [ 3 : 3 ] = [ 'five' ] # \u540cinsert >>> num [ 1 , 2 , 3 , 'five' , 'f' , 'i' , 'v' , 'e' , 4 , 6 , 7 ] >>> num [ 4 : - 3 ] = [] >>> num [ 1 , 2 , 3 , 'five' , 4 , 6 , 7 ] pop \u5f39\u51fa\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\uff0c\u9ed8\u8ba4\u4e3a\u672b\u5c3e,\u5e76\u8fd4\u56de\u8be5\u5143\u7d20\u7684\u503c\uff0c\u8fd9\u662f\u552f\u4e00\u4e00\u4e2a\u65e2\u4fee\u6539\u5e8f\u5217\u53c8\u8fd4\u56de\u503c\u7684 >>> x = [ 1 , 2 , 3 ] >>> x . pop () 3 >>> x . pop ( 0 ) 1 >>> x [ 2 ] remove \u53bb\u9664\u6307\u5b9a\u5143\u7d20(\u7b2c\u4e00\u4e2a)\uff0c\u8fd4\u56deNone. >>> x = [ 'to' , 'be' , 'or' , 'not' , 'to' , 'be' ] >>> x . remove ( 'to' ) # \u53ea\u53bb\u9664\u4e86\u7b2c\u4e00\u4e2ato >>> x [ 'be' , 'or' , 'not' , 'to' , 'be' ] >>> x . remove ( 'too' ) ValueError : list . remove ( x ): x not in list reverse/reversed \u6309\u76f8\u53cd\u7684\u987a\u5e8f\u6392\u5217 >>> x = [ 1 , 2 , 3 ] >>> x . reverse () # \u76f4\u63a5\u4fee\u6539x >>> x [ 3 , 2 , 1 ] >>> reversed ( x ) # \u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668 < list_reverseiterator object at 0x000001F9E8161748 > >>> list ( reversed ( x )) # \u5c06\u8fed\u4ee3\u5668\u8f6c\u4e3a\u5217\u8868 [ 1 , 2 , 3 ] sort/sorted \u5bf9\u5217\u8868\u8fdb\u884c\u6392\u5e8f >>> x = [ 2 , 8 , 3 , 6 , 4 , 1 , 7 ] >>> x . sort () # \u76f4\u63a5\u4f5c\u7528\u4e8ex >>> x [ 1 , 2 , 3 , 4 , 6 , 7 , 8 ] >>> x = [ 2 , 8 , 3 , 6 , 4 , 1 , 7 ] >>> y = sorted ( x ) # \u4f5c\u7528\u4e8e\u526f\u672c >>> y [ 1 , 2 , 3 , 4 , 6 , 7 , 8 ] >>> t = list ( reversed ( sorted ( x ))) #\u9006\u6392\u5e8f >>> t [ 8 , 7 , 6 , 4 , 3 , 2 , 1 ] sort\u6709\u4e24\u4e2a\u53ef\u9009\u53c2\u6570\uff1akey\u548creverse. \u524d\u8005\u662f\u9700\u8981\u6307\u5b9a\u4e00\u4e2a\u51fd\u6570\uff0c\u901a\u8fc7\u8d4b\u4e88\u6bcf\u4e2a\u5143\u7d20\u4e00\u4e2a\u952e\uff0c\u7136\u540e\u901a\u8fc7\u952e\u8fdb\u884c\u6392\u5e8f\u3002\u540e\u8005\u53ea\u6709True\u548cFalse\u4e24\u4e2a\u503c\uff0c\u4ee3\u8868\u9006\u5e8f\u548c\u6b63\u5e8f\u3002 >>> x = [ 'Python' , 'Java' , 'Go' , 'C#' , 'C++' , 'C' , 'Ruby' , 'Javascript' ] >>> x . sort ( key = len ) # \u6309\u957f\u5ea6\u6392\u5e8f >>> x [ 'C' , 'Go' , 'C#' , 'C++' , 'Java' , 'Ruby' , 'Python' , 'Javascript' ] >>> x . sort ( key = lambda a : 1 / len ( a )) >>> x [ 'Javascript' , 'Python' , 'Java' , 'Ruby' , 'C++' , 'C#' , 'Go' , 'C' ] >>> x = [ 4 , 6 , 2 , 1 , 7 , 9 ] >>> x . sort ( reverse = True ) >>> x [ 9 , 7 , 6 , 4 , 2 , 1 ] >>> x = [ 'Python' , 'Java' , 'Go' , 'C#' , 'C++' , 'C' , 'Ruby' , 'Javascript' ] >>> x . sort () >>> x [ 'C' , 'C#' , 'C++' , 'Go' , 'Java' , 'Javascript' , 'Python' , 'Ruby' ]","title":"\u5217\u8868\u65b9\u6cd5"},{"location":"python/Basic_02/#_12","text":"\u5143\u7ec4\u65e0\u6cd5\u4fee\u6539\uff0c\u53ef\u4ee5\u8fdb\u884c\u7684\u64cd\u4f5c\u4e0d\u591a\uff0c\u6700\u91cd\u8981\u7684\u521b\u5efa\u548c\u7d22\u5f15\u64cd\u4f5c\u5982\u4e0b\uff1a >>> 1 , 2 , 3 ( 1 , 2 , 3 ) >>> ( 1 ) # \u6ca1\u6709\u9017\u53f7\u5c31\u53ea\u662f\u6570\u5b57 1 >>> ( 1 ,) # \u6b64\u65f6\u662f\u5143\u7ec4 ( 1 ,) >>> 2 * ( 42 ,) ( 42 , 42 ) >>> 2 * ( 42 ) 84 >>> tuple ( 'abc' ) ( 'a' , 'b' , 'c' ) >>> tuple ([ 'a' , 'b' , 'c' ]) ( 'a' , 'b' , 'c' ) >>> tuple (( 'a' , 'b' , 'c' )) ( 'a' , 'b' , 'c' ) >>> tuple ( 'a' , 'b' , 'c' ) # \u5fc5\u987b\u4f20\u5165\u5e8f\u5217 TypeError : tuple () takes at most 1 argument ( 3 given ) >>> x = 1 , 2 , 3 >>> x [ 1 ] 2 >>> x [ 0 : 2 ] ( 1 , 2 )","title":"\u5143\u7ec4"},{"location":"python/Basic_03/","text":"\u5b57\u7b26\u4e32 \u8bbe\u7f6e\u5b57\u7b26\u4e32\u683c\u5f0f %\u65b9\u6cd5 \u8fd9\u79cd\u65b9\u6cd5\u6bd4\u8f83\u7ecf\u5178,\u4e0eC\u91cc\u9762\u7684\u5dee\u4e0d\u591a,\u901a\u8fc7\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6765\u8fdb\u884c\u64cd\u4f5c: >>> format = \"test %s format in %s \" >>> values = ( \"hello\" , 'the world' ) >>> format % values 'test hello format in the world ' Template \u8fd9\u662f\u4e00\u79cd\u7c7bUNIX Shell\u7684\u5f62\u5f0f.\u8868\u793a\u5982\u4e0b: >>> from string import Template >>> tmp = Template ( \"hello,$who! $what is good?\" ) >>> tmp . substitute ( who = \"Guo\" , what = \"the weather\" ) 'hello,Guo! the weather is good?' format \u8fd9\u79cd\u65b9\u5f0f\u662f\u96c6\u6210\u4e86\u4ee5\u4e0a\u4e24\u79cd,\u4e14\u5341\u5206\u6613\u64cd\u4f5c: >>> \"{} is {}\" . format ( 'Tom' , 'good' ) 'Tom is good' >>> '{1} {0} {3} {2} {1} {0}' . format ( 'be' , 'to' , 'not' , 'or' ) # \u53c2\u6570\u9ed8\u8ba4\u4e0b\u8868\u4ece0\u5f00\u59cb\u9012\u589e,\u56e0\u6b64\u62ec\u53f7\u91cc\u7684\u7d22\u5f15\u4ee3\u8868\u7684\u5c31\u662f\u5bf9\u5e94\u7684\u5355\u8bcd 'to be or not to be' >>> from math import pi >>> \"{name} is approximately {value:.2f}.\" . format ( value = pi , name = '\u03c0' ) # \u8bbe\u7f6e\u540d\u79f0,\u4ee5\u53ca\u683c\u5f0f '\u03c0 is approximately 3.14.' >>> \"{name} is approximately {value}.\" . format ( value = pi , name = '\u03c0' ) # \u4e0d\u8bbe\u7f6e\u683c\u5f0f\u7684\u60c5\u51b5\u4e0b '\u03c0 is approximately 3.141592653589793.' \u9ad8\u7ea7\u64cd\u4f5c \u66ff\u6362\u5b57\u6bb5\u540d \u4f60\u53ef\u4ee5\u7528\u4e0a\u6587\u4e2d\u7684\u5360\u4f4d\u7b26\u6765\u6307\u4ee3\u53d8\u91cf,\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u5904\u7406, >>> \"{foo} {} {bar} {}\" . format ( foo = 1 , bar = 2 , 'is' , 'false' ) # \u5173\u952e\u5b57\u53c2\u6570\u5e94\u8be5\u5728\u540e\u9762 SyntaxError : positional argument follows keyword argument >>> \"{foo} {} {bar} {}\" . format ( 'is' , 'false' , foo = 1 , bar = 2 ) '1 is 2 false' >>> \"{foo} {1} {bar} {0}\" . format ( 'is' , 'false' , foo = 1 , bar = 2 ) # \u7528\u7d22\u5f15\u6307\u5b9a\u987a\u5e8f '1 false 2 is' >>> fn = [ 'guo' , 'hu' ] >>> 'Mr {name[1]}' . format ( name = fn ) 'Mr hu' >>> import math >>> tmp = \"the {mod.__name__} module defines the value {mod.pi} for \u03c0\" # \u901a\u8fc7\u6a21\u5757\u7684\u5c5e\u6027,\u70b9\u8fd0\u7b97\u7b26\u6307\u5b9a >>> tmp . format ( mod = math ) 'the math module defines the value 3.141592653589793 for \u03c0' \u683c\u5f0f\u8bbe\u7f6e \u8fd9\u4e00\u90e8\u5206\u548c\u5176\u4ed6\u8bed\u8a00\u4e00\u6837,\u4e3b\u8981\u5305\u62ec:\u5bf9\u9f50,\u5bbd\u5ea6,\u7cbe\u5ea6,\u5343\u4f4d\u5206\u9694\u7b26 >>> \"the name is {num:n}\" . format ( num = 0.2222 ) 'the name is 0.2222' >>> \"the name is {num:%}\" . format ( num = 0.2222 ) 'the name is 22.220000%' >>> \"the name is {num:.2%}\" . format ( num = 0.2222 ) # \u767e\u5206\u6bd4\u8868\u793a,\u5c0f\u6570\u70b9\u4fdd\u7559\u4e24\u4f4d 'the name is 22.22%' >>> \"the name is {num:,}\" . format ( num = 222200000000 ) # \u4f7f\u7528\u5343\u4f4d\u5206\u9694\u7b26 'the name is 222,200,000,000' >>> \"the name is {num:10,.2g}\" . format ( num = 2222299999999999.2222 ) # \u987a\u5e8f\u4e3a\u5bbd\u5ea6,\u5343\u4f4d\u5206\u9694\u7b26,\u5c0f\u6570\u4f4d\u6570,\u683c\u5f0f 'the name is 2.2e+15' >>> \"the name is {num:10,.2f}\" . format ( num = 2222299999999999.2222 ) 'the name is 2,222,299,999,999,999.25' >>> \"the name is {num:010,.2f}\" . format ( num = 3.14 ) 'the name is 000,003.14' >>> \"{0:<10.2f} \\n {0:^10.2f} \\n {0:>10.2f}\" . format ( pi ) '3.14 \\n 3.14 \\n 3.14' >>> print ( \"{0:<10.2f} \\n {0:^10.2f} \\n {0:>10.2f}\" . format ( pi )) #\u4e09\u79cd\u5bf9\u9f50\u65b9\u5f0f 3.14 3.14 3.14 >>> \"{:$^15}\" . format ( \"WIN BIG\" ) # \u8bbe\u7f6e\u586b\u5145\u7b26\u53f7 '$$$$WIN BIG$$$$' >>> '{:010.2f}' . format ( pi ) '0000003.14' >>> print ( '{0:10.2f} \\n {1:=10.2f}' . format ( pi , - pi )) # =\u8bbe\u7f6e\u7a7a\u683c\u653e\u5728\u7b26\u53f7\u548c\u6570\u5b57\u4e4b\u95f4 3.14 - 3.14 >>> print ( '{0:+10.2f} \\n {1:+10.2f}' . format ( pi , - pi )) # \u9ed8\u8ba4\u4e3a-,\u8bbe\u7f6e+\u8868\u793a\u6b63\u6570\u524d\u52a0\u6b63\u53f7 + 3.14 - 3.14 >>> \"{:b}\" . format ( 42 ) '101010' >>> \"{:#b}\" . format ( 42 ) # \u4e95\u53f7\u7528\u4e8e\u8fdb\u5236\u8f6c\u6362 '0b101010' >>> \"{:g}\" . format ( 42 ) '42' >>> \"{:#g}\" . format ( 42 ) #\u4e95\u53f7\u7528\u4e8e\u5f3a\u5236\u6b63\u6570\u5e26\u5c0f\u6570 '42.0000' \u5b57\u7b26\u4e32\u65b9\u6cd5 string\u6a21\u5757 \u867d\u8bf4Python\u5df2\u7ecf\u5c06\u5f88\u591astring\u6a21\u5757\u7684\u529f\u80fd\u76f4\u63a5\u96c6\u6210\u5230\u5b57\u7b26\u4e32\u4e0a\u4e86\uff0c\u4f46\u662f\u4ecd\u7136\u6709\u4e00\u4e9b\u6bd4\u8f83\u6709\u7528\u7684\u65b9\u6cd5\uff1a >>> import string >>> string . digits # \u5305\u542b\u6570\u5b570-9\u7684\u5b57\u7b26\u4e32 '0123456789' >>> string . ascii_letters # \u6240\u6709ascii\u7801\u5b57\u6bcd\uff0c\u5927\u5c0f\u5199\u90fd\u6709 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ' >>> string . ascii_lowercase # \u5c0f\u5199\u5b57\u6bcd 'abcdefghijklmnopqrstuvwxyz' >>> string . ascii_uppercase # \u5927\u5199\u5b57\u6bcd 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' >>> string . printable # \u53ef\u6253\u5370\u7684\u6240\u6709ascii\u5b57\u7b26 '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\"#$%& \\' ()*+,-./:;<=>?@[ \\\\ ]^_`{|}~ \\t\\n\\r\\x0b\\x0c ' >>> string . punctuation # \u6240\u6709ascii\u7b26\u53f7 '!\"#$%& \\' ()*+,-./:;<=>?@[ \\\\ ]^_`{|}~' center >>> \"to be or not to be\" . center ( 40 ) # \u7528\u4e8e\u5728\u5b57\u7b26\u4e32\u5de6\u53f3\u586b\u5145\u5b57\u7b26\uff08\u9ed8\u8ba4\u7a7a\u683c\uff09\uff0c\u4f7f\u5b57\u7b26\u4e32\u5c45\u4e2d ' to be or not to be ' >>> \"to be or not to be\" . center ( 40 , '*' ) '***********to be or not to be***********' >>> a = \"to be or not to be\" . center ( 40 , '*' ) >>> len ( a ) 40 find >>> quote = \"to be or not to be\" >>> quote . find ( 'be' ) # \u627e\u5b50\u4e32\u662f\u5426\u5728\u5b57\u7b26\u4e32\u4e2d\uff0c\u5728\u5219\u8fd4\u56de\u5b50\u4e32\u7684\u7b2c\u4e00\u4e2a\u7d22\u5f15 3 >>> quote . find ( 'not' ) 9 >>> quote . find ( 'no' ) 9 >>> quote . find ( 'nooo' ) # \u4e0d\u5b58\u5728\u5219\u8fd4\u56de-1 - 1 >>> quote . find ( 'be' , 5 ) # find\u53ef\u4ee5\u6307\u5b9a\u67e5\u627e\u8303\u56f4\uff0c\u8fd9\u91cc\u6307\u5b9a\u7d22\u5f15\u4e0b\u9650 16 >>> len ( quote ) 18 >>> quote . find ( 'to' , 3 , 17 ) # \u540c\u65f6\u6307\u5b9a\u4e0a\u9650\u548c\u4e0b\u9650\uff08\u4e0d\u5305\u542b\uff09 13 join >>> seq = [ 2 , 3 , 4 , 5 , 6 ] >>> sep = '+' >>> sep . join ( seq ) # \u7528\u4e8e\u5408\u5e76\u5e8f\u5217\u5143\u7d20\uff0c\u4ec5\u9650\u4e8e\u5b57\u7b26\u4e32\u5143\u7d20 TypeError : sequence item 0 : expected str instance , int found >>> seq = [ '1' , '2' , '3' , '4' ] >>> sep . join ( seq ) '1+2+3+4' >>> dirs = '' , 'usr' , 'bin' , 'env' >>> '/' . join ( dirs ) '/usr/bin/env' lower,title,capwords >>> \"Harry Potter\" . lower () # \u5168\u90e8\u6539\u4e3a\u5c0f\u5199\u5b57\u6bcd 'harry potter' >>> \"haRry potter\" . title () # \u9996\u5b57\u6bcd\u5927\u5199\uff0c\u5176\u4ed6\u5c0f\u5199 'Harry Potter' >>> from string import capwords >>> capwords ( \"that's good\" ) # \u9996\u5b57\u6bcd\u5927\u5199 \"That's Good\" >>> \"that's good\" . title () # \u9996\u5b57\u6bcd\u5927\u5199\uff0c\u4f46\u662f\u53ef\u80fd\u8fb9\u754c\u5355\u8bcd\u4f1a\u51fa\u9519\uff08\u6bd4\u5982\u8fd9\u91cc\u7684that's\uff09 \"That'S Good\" replace,translate >>> \"harry potter\" . replace ( \"harry\" , 'james' ) # \u7528\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u4ee3\u66ff\u7b2c\u4e00\u4e2a 'james potter' >>> table = str . maketrans ( 'ar' , 'bq' ) # \u6784\u5efa\u8f6c\u6362\u8868\uff0ca->b,b->q >>> table { 97 : 98 , 114 : 113 } >>> \"harry potter\" . translate ( table ) # translate\u7528\u4e8e\u6267\u884c\u5bf9\u5e94\u7684\u8f6c\u6362 'hbqqy potteq' >>> table = str . maketrans ( 'ar' , 'bq' , 't' ) # \u7b2c\u4e09\u4e2a\u53c2\u6570\u53ef\u7701\u7565\uff0c\u8868\u793a\u53bb\u9664\u67d0\u4e9b\u5b57\u6bcd >>> \"harry potter\" . translate ( table ) 'hbqqy poeq' >>> table = str . maketrans ( 'ar' , 'bq' , 'tq' ) # \u8fd9\u91ccq\u662f\u8f6c\u6362\u540e\u624d\u6709\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u53bb\u9664 >>> \"harry potter\" . translate ( table ) 'hbqqy poeq' >>> table = str . maketrans ( 'ar' , 'bq' , 'th' ) # h\u662f\u8f6c\u6362\u524d\u5c31\u6709\u7684\uff0c\u6240\u4ee5\u8f6c\u6362\u65f6\u4f1a\u53bb\u9664 >>> \"harry potter\" . translate ( table ) 'bqqy poeq' strip >>> ' harry potter ' . strip () # \u53bb\u9664\u9996\u5c3e\u90e8\u5206\u7684\u7a7a\u683c 'harry potter' >>> ' !*# harry * potter ##! ' . strip ( ' !*#' ) # \u53bb\u9664\u9996\u5c3e\u90e8\u5206\u7684\u6307\u5b9a\u5b57\u7b26\uff08\u4e0d\u5305\u542b\u4e2d\u95f4\u90e8\u5206\uff09 'harry * potter' is*** >>> '23' . isalnum () True >>> '23a' . isalnum () True >>> '23a#' . isalnum () False >>> 'a' . isalpha () True >>> '3' . isdecimal () True >>> '0100' . isdecimal () True >>> '0.222' . isdecimal () False >>> 'else' . isidentifier () True >>> 'else if' . isidentifier () False >>> 'else if' . islower () True >>> 'else if' . isnumeric () False >>> 'else if' . isprintable () True >>> ' ' . isspace () True >>> 'A Dog' . istitle () True >>> 'A Dog' . isupper () False \u6ce8: \u533a\u5206isdigit,isdecimal,isnumeric num = \"1\" #unicode num . isdigit () # True num . isdecimal () # True num . isnumeric () # True num = \"1\" # \u5168\u89d2 num . isdigit () # True num . isdecimal () # True num . isnumeric () # True num = b \"1\" # byte num . isdigit () # True num . isdecimal () # AttributeError 'bytes' object has no attribute 'isdecimal' num . isnumeric () # AttributeError 'bytes' object has no attribute 'isnumeric' num = \"IV\" # \u7f57\u9a6c\u6570\u5b57 num . isdigit () # True num . isdecimal () # False num . isnumeric () # True num = \"\u56db\" # \u6c49\u5b57 num . isdigit () # False num . isdecimal () # False num . isnumeric () # True isdigit () True : Unicode\u6570\u5b57 \uff0c byte\u6570\u5b57 \uff08\u5355\u5b57\u8282\uff09\uff0c\u5168\u89d2\u6570\u5b57\uff08\u53cc\u5b57\u8282\uff09\uff0c\u7f57\u9a6c\u6570\u5b57 False : \u6c49\u5b57\u6570\u5b57 Error : \u65e0 isdecimal () True : Unicode\u6570\u5b57 \uff0c\uff0c\u5168\u89d2\u6570\u5b57\uff08\u53cc\u5b57\u8282\uff09 False : \u7f57\u9a6c\u6570\u5b57\uff0c\u6c49\u5b57\u6570\u5b57 Error : byte\u6570\u5b57 \uff08\u5355\u5b57\u8282\uff09 isnumeric () True : Unicode\u6570\u5b57 \uff0c\u5168\u89d2\u6570\u5b57\uff08\u53cc\u5b57\u8282\uff09\uff0c\u7f57\u9a6c\u6570\u5b57\uff0c\u6c49\u5b57\u6570\u5b57 False : \u65e0 Error : byte\u6570\u5b57 \uff08\u5355\u5b57\u8282\uff09","title":"\u57fa\u7840\u603b\u7ed3(\u4e09)-\u5b57\u7b26\u4e32"},{"location":"python/Basic_03/#_1","text":"","title":"\u5b57\u7b26\u4e32"},{"location":"python/Basic_03/#_2","text":"","title":"\u8bbe\u7f6e\u5b57\u7b26\u4e32\u683c\u5f0f"},{"location":"python/Basic_03/#_3","text":"\u8fd9\u79cd\u65b9\u6cd5\u6bd4\u8f83\u7ecf\u5178,\u4e0eC\u91cc\u9762\u7684\u5dee\u4e0d\u591a,\u901a\u8fc7\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6765\u8fdb\u884c\u64cd\u4f5c: >>> format = \"test %s format in %s \" >>> values = ( \"hello\" , 'the world' ) >>> format % values 'test hello format in the world '","title":"%\u65b9\u6cd5"},{"location":"python/Basic_03/#template","text":"\u8fd9\u662f\u4e00\u79cd\u7c7bUNIX Shell\u7684\u5f62\u5f0f.\u8868\u793a\u5982\u4e0b: >>> from string import Template >>> tmp = Template ( \"hello,$who! $what is good?\" ) >>> tmp . substitute ( who = \"Guo\" , what = \"the weather\" ) 'hello,Guo! the weather is good?'","title":"Template"},{"location":"python/Basic_03/#format","text":"\u8fd9\u79cd\u65b9\u5f0f\u662f\u96c6\u6210\u4e86\u4ee5\u4e0a\u4e24\u79cd,\u4e14\u5341\u5206\u6613\u64cd\u4f5c: >>> \"{} is {}\" . format ( 'Tom' , 'good' ) 'Tom is good' >>> '{1} {0} {3} {2} {1} {0}' . format ( 'be' , 'to' , 'not' , 'or' ) # \u53c2\u6570\u9ed8\u8ba4\u4e0b\u8868\u4ece0\u5f00\u59cb\u9012\u589e,\u56e0\u6b64\u62ec\u53f7\u91cc\u7684\u7d22\u5f15\u4ee3\u8868\u7684\u5c31\u662f\u5bf9\u5e94\u7684\u5355\u8bcd 'to be or not to be' >>> from math import pi >>> \"{name} is approximately {value:.2f}.\" . format ( value = pi , name = '\u03c0' ) # \u8bbe\u7f6e\u540d\u79f0,\u4ee5\u53ca\u683c\u5f0f '\u03c0 is approximately 3.14.' >>> \"{name} is approximately {value}.\" . format ( value = pi , name = '\u03c0' ) # \u4e0d\u8bbe\u7f6e\u683c\u5f0f\u7684\u60c5\u51b5\u4e0b '\u03c0 is approximately 3.141592653589793.'","title":"format"},{"location":"python/Basic_03/#_4","text":"","title":"\u9ad8\u7ea7\u64cd\u4f5c"},{"location":"python/Basic_03/#_5","text":"\u4f60\u53ef\u4ee5\u7528\u4e0a\u6587\u4e2d\u7684\u5360\u4f4d\u7b26\u6765\u6307\u4ee3\u53d8\u91cf,\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u5904\u7406, >>> \"{foo} {} {bar} {}\" . format ( foo = 1 , bar = 2 , 'is' , 'false' ) # \u5173\u952e\u5b57\u53c2\u6570\u5e94\u8be5\u5728\u540e\u9762 SyntaxError : positional argument follows keyword argument >>> \"{foo} {} {bar} {}\" . format ( 'is' , 'false' , foo = 1 , bar = 2 ) '1 is 2 false' >>> \"{foo} {1} {bar} {0}\" . format ( 'is' , 'false' , foo = 1 , bar = 2 ) # \u7528\u7d22\u5f15\u6307\u5b9a\u987a\u5e8f '1 false 2 is' >>> fn = [ 'guo' , 'hu' ] >>> 'Mr {name[1]}' . format ( name = fn ) 'Mr hu' >>> import math >>> tmp = \"the {mod.__name__} module defines the value {mod.pi} for \u03c0\" # \u901a\u8fc7\u6a21\u5757\u7684\u5c5e\u6027,\u70b9\u8fd0\u7b97\u7b26\u6307\u5b9a >>> tmp . format ( mod = math ) 'the math module defines the value 3.141592653589793 for \u03c0'","title":"\u66ff\u6362\u5b57\u6bb5\u540d"},{"location":"python/Basic_03/#_6","text":"\u8fd9\u4e00\u90e8\u5206\u548c\u5176\u4ed6\u8bed\u8a00\u4e00\u6837,\u4e3b\u8981\u5305\u62ec:\u5bf9\u9f50,\u5bbd\u5ea6,\u7cbe\u5ea6,\u5343\u4f4d\u5206\u9694\u7b26 >>> \"the name is {num:n}\" . format ( num = 0.2222 ) 'the name is 0.2222' >>> \"the name is {num:%}\" . format ( num = 0.2222 ) 'the name is 22.220000%' >>> \"the name is {num:.2%}\" . format ( num = 0.2222 ) # \u767e\u5206\u6bd4\u8868\u793a,\u5c0f\u6570\u70b9\u4fdd\u7559\u4e24\u4f4d 'the name is 22.22%' >>> \"the name is {num:,}\" . format ( num = 222200000000 ) # \u4f7f\u7528\u5343\u4f4d\u5206\u9694\u7b26 'the name is 222,200,000,000' >>> \"the name is {num:10,.2g}\" . format ( num = 2222299999999999.2222 ) # \u987a\u5e8f\u4e3a\u5bbd\u5ea6,\u5343\u4f4d\u5206\u9694\u7b26,\u5c0f\u6570\u4f4d\u6570,\u683c\u5f0f 'the name is 2.2e+15' >>> \"the name is {num:10,.2f}\" . format ( num = 2222299999999999.2222 ) 'the name is 2,222,299,999,999,999.25' >>> \"the name is {num:010,.2f}\" . format ( num = 3.14 ) 'the name is 000,003.14' >>> \"{0:<10.2f} \\n {0:^10.2f} \\n {0:>10.2f}\" . format ( pi ) '3.14 \\n 3.14 \\n 3.14' >>> print ( \"{0:<10.2f} \\n {0:^10.2f} \\n {0:>10.2f}\" . format ( pi )) #\u4e09\u79cd\u5bf9\u9f50\u65b9\u5f0f 3.14 3.14 3.14 >>> \"{:$^15}\" . format ( \"WIN BIG\" ) # \u8bbe\u7f6e\u586b\u5145\u7b26\u53f7 '$$$$WIN BIG$$$$' >>> '{:010.2f}' . format ( pi ) '0000003.14' >>> print ( '{0:10.2f} \\n {1:=10.2f}' . format ( pi , - pi )) # =\u8bbe\u7f6e\u7a7a\u683c\u653e\u5728\u7b26\u53f7\u548c\u6570\u5b57\u4e4b\u95f4 3.14 - 3.14 >>> print ( '{0:+10.2f} \\n {1:+10.2f}' . format ( pi , - pi )) # \u9ed8\u8ba4\u4e3a-,\u8bbe\u7f6e+\u8868\u793a\u6b63\u6570\u524d\u52a0\u6b63\u53f7 + 3.14 - 3.14 >>> \"{:b}\" . format ( 42 ) '101010' >>> \"{:#b}\" . format ( 42 ) # \u4e95\u53f7\u7528\u4e8e\u8fdb\u5236\u8f6c\u6362 '0b101010' >>> \"{:g}\" . format ( 42 ) '42' >>> \"{:#g}\" . format ( 42 ) #\u4e95\u53f7\u7528\u4e8e\u5f3a\u5236\u6b63\u6570\u5e26\u5c0f\u6570 '42.0000'","title":"\u683c\u5f0f\u8bbe\u7f6e"},{"location":"python/Basic_03/#_7","text":"","title":"\u5b57\u7b26\u4e32\u65b9\u6cd5"},{"location":"python/Basic_03/#string","text":"\u867d\u8bf4Python\u5df2\u7ecf\u5c06\u5f88\u591astring\u6a21\u5757\u7684\u529f\u80fd\u76f4\u63a5\u96c6\u6210\u5230\u5b57\u7b26\u4e32\u4e0a\u4e86\uff0c\u4f46\u662f\u4ecd\u7136\u6709\u4e00\u4e9b\u6bd4\u8f83\u6709\u7528\u7684\u65b9\u6cd5\uff1a >>> import string >>> string . digits # \u5305\u542b\u6570\u5b570-9\u7684\u5b57\u7b26\u4e32 '0123456789' >>> string . ascii_letters # \u6240\u6709ascii\u7801\u5b57\u6bcd\uff0c\u5927\u5c0f\u5199\u90fd\u6709 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ' >>> string . ascii_lowercase # \u5c0f\u5199\u5b57\u6bcd 'abcdefghijklmnopqrstuvwxyz' >>> string . ascii_uppercase # \u5927\u5199\u5b57\u6bcd 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' >>> string . printable # \u53ef\u6253\u5370\u7684\u6240\u6709ascii\u5b57\u7b26 '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\"#$%& \\' ()*+,-./:;<=>?@[ \\\\ ]^_`{|}~ \\t\\n\\r\\x0b\\x0c ' >>> string . punctuation # \u6240\u6709ascii\u7b26\u53f7 '!\"#$%& \\' ()*+,-./:;<=>?@[ \\\\ ]^_`{|}~'","title":"string\u6a21\u5757"},{"location":"python/Basic_03/#center","text":">>> \"to be or not to be\" . center ( 40 ) # \u7528\u4e8e\u5728\u5b57\u7b26\u4e32\u5de6\u53f3\u586b\u5145\u5b57\u7b26\uff08\u9ed8\u8ba4\u7a7a\u683c\uff09\uff0c\u4f7f\u5b57\u7b26\u4e32\u5c45\u4e2d ' to be or not to be ' >>> \"to be or not to be\" . center ( 40 , '*' ) '***********to be or not to be***********' >>> a = \"to be or not to be\" . center ( 40 , '*' ) >>> len ( a ) 40","title":"center"},{"location":"python/Basic_03/#find","text":">>> quote = \"to be or not to be\" >>> quote . find ( 'be' ) # \u627e\u5b50\u4e32\u662f\u5426\u5728\u5b57\u7b26\u4e32\u4e2d\uff0c\u5728\u5219\u8fd4\u56de\u5b50\u4e32\u7684\u7b2c\u4e00\u4e2a\u7d22\u5f15 3 >>> quote . find ( 'not' ) 9 >>> quote . find ( 'no' ) 9 >>> quote . find ( 'nooo' ) # \u4e0d\u5b58\u5728\u5219\u8fd4\u56de-1 - 1 >>> quote . find ( 'be' , 5 ) # find\u53ef\u4ee5\u6307\u5b9a\u67e5\u627e\u8303\u56f4\uff0c\u8fd9\u91cc\u6307\u5b9a\u7d22\u5f15\u4e0b\u9650 16 >>> len ( quote ) 18 >>> quote . find ( 'to' , 3 , 17 ) # \u540c\u65f6\u6307\u5b9a\u4e0a\u9650\u548c\u4e0b\u9650\uff08\u4e0d\u5305\u542b\uff09 13","title":"find"},{"location":"python/Basic_03/#join","text":">>> seq = [ 2 , 3 , 4 , 5 , 6 ] >>> sep = '+' >>> sep . join ( seq ) # \u7528\u4e8e\u5408\u5e76\u5e8f\u5217\u5143\u7d20\uff0c\u4ec5\u9650\u4e8e\u5b57\u7b26\u4e32\u5143\u7d20 TypeError : sequence item 0 : expected str instance , int found >>> seq = [ '1' , '2' , '3' , '4' ] >>> sep . join ( seq ) '1+2+3+4' >>> dirs = '' , 'usr' , 'bin' , 'env' >>> '/' . join ( dirs ) '/usr/bin/env'","title":"join"},{"location":"python/Basic_03/#lowertitlecapwords","text":">>> \"Harry Potter\" . lower () # \u5168\u90e8\u6539\u4e3a\u5c0f\u5199\u5b57\u6bcd 'harry potter' >>> \"haRry potter\" . title () # \u9996\u5b57\u6bcd\u5927\u5199\uff0c\u5176\u4ed6\u5c0f\u5199 'Harry Potter' >>> from string import capwords >>> capwords ( \"that's good\" ) # \u9996\u5b57\u6bcd\u5927\u5199 \"That's Good\" >>> \"that's good\" . title () # \u9996\u5b57\u6bcd\u5927\u5199\uff0c\u4f46\u662f\u53ef\u80fd\u8fb9\u754c\u5355\u8bcd\u4f1a\u51fa\u9519\uff08\u6bd4\u5982\u8fd9\u91cc\u7684that's\uff09 \"That'S Good\"","title":"lower,title,capwords"},{"location":"python/Basic_03/#replacetranslate","text":">>> \"harry potter\" . replace ( \"harry\" , 'james' ) # \u7528\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u4ee3\u66ff\u7b2c\u4e00\u4e2a 'james potter' >>> table = str . maketrans ( 'ar' , 'bq' ) # \u6784\u5efa\u8f6c\u6362\u8868\uff0ca->b,b->q >>> table { 97 : 98 , 114 : 113 } >>> \"harry potter\" . translate ( table ) # translate\u7528\u4e8e\u6267\u884c\u5bf9\u5e94\u7684\u8f6c\u6362 'hbqqy potteq' >>> table = str . maketrans ( 'ar' , 'bq' , 't' ) # \u7b2c\u4e09\u4e2a\u53c2\u6570\u53ef\u7701\u7565\uff0c\u8868\u793a\u53bb\u9664\u67d0\u4e9b\u5b57\u6bcd >>> \"harry potter\" . translate ( table ) 'hbqqy poeq' >>> table = str . maketrans ( 'ar' , 'bq' , 'tq' ) # \u8fd9\u91ccq\u662f\u8f6c\u6362\u540e\u624d\u6709\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u53bb\u9664 >>> \"harry potter\" . translate ( table ) 'hbqqy poeq' >>> table = str . maketrans ( 'ar' , 'bq' , 'th' ) # h\u662f\u8f6c\u6362\u524d\u5c31\u6709\u7684\uff0c\u6240\u4ee5\u8f6c\u6362\u65f6\u4f1a\u53bb\u9664 >>> \"harry potter\" . translate ( table ) 'bqqy poeq'","title":"replace,translate"},{"location":"python/Basic_03/#strip","text":">>> ' harry potter ' . strip () # \u53bb\u9664\u9996\u5c3e\u90e8\u5206\u7684\u7a7a\u683c 'harry potter' >>> ' !*# harry * potter ##! ' . strip ( ' !*#' ) # \u53bb\u9664\u9996\u5c3e\u90e8\u5206\u7684\u6307\u5b9a\u5b57\u7b26\uff08\u4e0d\u5305\u542b\u4e2d\u95f4\u90e8\u5206\uff09 'harry * potter'","title":"strip"},{"location":"python/Basic_03/#is","text":">>> '23' . isalnum () True >>> '23a' . isalnum () True >>> '23a#' . isalnum () False >>> 'a' . isalpha () True >>> '3' . isdecimal () True >>> '0100' . isdecimal () True >>> '0.222' . isdecimal () False >>> 'else' . isidentifier () True >>> 'else if' . isidentifier () False >>> 'else if' . islower () True >>> 'else if' . isnumeric () False >>> 'else if' . isprintable () True >>> ' ' . isspace () True >>> 'A Dog' . istitle () True >>> 'A Dog' . isupper () False \u6ce8: \u533a\u5206isdigit,isdecimal,isnumeric num = \"1\" #unicode num . isdigit () # True num . isdecimal () # True num . isnumeric () # True num = \"1\" # \u5168\u89d2 num . isdigit () # True num . isdecimal () # True num . isnumeric () # True num = b \"1\" # byte num . isdigit () # True num . isdecimal () # AttributeError 'bytes' object has no attribute 'isdecimal' num . isnumeric () # AttributeError 'bytes' object has no attribute 'isnumeric' num = \"IV\" # \u7f57\u9a6c\u6570\u5b57 num . isdigit () # True num . isdecimal () # False num . isnumeric () # True num = \"\u56db\" # \u6c49\u5b57 num . isdigit () # False num . isdecimal () # False num . isnumeric () # True isdigit () True : Unicode\u6570\u5b57 \uff0c byte\u6570\u5b57 \uff08\u5355\u5b57\u8282\uff09\uff0c\u5168\u89d2\u6570\u5b57\uff08\u53cc\u5b57\u8282\uff09\uff0c\u7f57\u9a6c\u6570\u5b57 False : \u6c49\u5b57\u6570\u5b57 Error : \u65e0 isdecimal () True : Unicode\u6570\u5b57 \uff0c\uff0c\u5168\u89d2\u6570\u5b57\uff08\u53cc\u5b57\u8282\uff09 False : \u7f57\u9a6c\u6570\u5b57\uff0c\u6c49\u5b57\u6570\u5b57 Error : byte\u6570\u5b57 \uff08\u5355\u5b57\u8282\uff09 isnumeric () True : Unicode\u6570\u5b57 \uff0c\u5168\u89d2\u6570\u5b57\uff08\u53cc\u5b57\u8282\uff09\uff0c\u7f57\u9a6c\u6570\u5b57\uff0c\u6c49\u5b57\u6570\u5b57 False : \u65e0 Error : byte\u6570\u5b57 \uff08\u5355\u5b57\u8282\uff09","title":"is***"},{"location":"python/Basic_04/","text":"\u5b57\u5178 dict \u8be5\u51fd\u6570\u7528\u4e8e\u4ece\u5176\u4ed6\u952e\u503c\u5bf9\u5e8f\u5217\u6216\u6620\u5c04\u521b\u5efa\u5b57\u5178\uff0c\u5982\uff1a >>> items = [( 'name' , 'bob' ),( 'age' , 42 )] >>> d = dict ( items ) >>> d { 'name' : 'bob' , 'age' : 42 } \u4e5f\u53ef\u4ee5\u901a\u8fc7\u5173\u952e\u5b57\u53c2\u6570\u8fdb\u884c\u8bbe\u7f6e\uff1a >>> d = dict ( name = 'bob' , age = 12 ) >>> d { 'name' : 'bob' , 'age' : 12 } \u51e0\u4e2a\u8981\u7d20 \u952e\uff1a \u5fc5\u987b\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\uff0c\u5982\u6574\u6570\uff0c\u6d6e\u70b9\u6570\uff0c\u5143\u7ec4\u7b49\u3002 \u81ea\u52a8\u6dfb\u52a0\uff1a \u5bf9\u4e0d\u5b58\u5728\u4e8e\u5b57\u5178\u4e2d\u7684\u952e\u8d4b\u503c\uff0c\u5c31\u662f\u6dfb\u52a0\u8be5\u952e\u503c\u5bf9\u3002 \u6210\u5458\u8d44\u683c\uff1a k in d\u627e\u7684\u662f\u6307\u5b9a\u952e\u503c\u662f\u5426\u5728\u5b57\u5178\u7684\u952e\u4e2d\uff08\u5e76\u975e\u503c\uff09 format_map \u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u5c06\u5b57\u5178\u7528\u4e8e\u5b57\u7b26\u4e32\u683c\u5f0f\u8bbe\u7f6e\uff1a >>> template = '''<html> ... <head><title>{title}</title></head> ... <body> ... <h1>{title}</h1> ... <p>{text}</p> ... </body>''' >>> data = { \"title\" : \"My Home Page\" , \"text\" : \"Welcone to my Homepage\" } >>> print ( template . format_map ( data )) < html > < head >< title > My Home Page </ title ></ head > < body > < h1 > My Home Page </ h1 > < p > Welcone to my Homepage </ p > </ body > \u5b57\u5178\u65b9\u6cd5 clear() >>> x = {} >>> y = x >>> x [ 'k' ] = 'v' >>> y { 'k' : 'v' } >>> x = {} >>> y # \u6b64\u5904y\u6ca1\u6709\u53d8\u5316\uff0c\u53ea\u6539\u53d8x { 'k' : 'v' } >>> x = {} >>> y = x >>> x [ 'k' ] = 'v' >>> y { 'k' : 'v' } >>> x . clear () # \u6b64\u5904\u5c06\u5c31\u5730\u6e05\u7a7a\u6240\u6709\u5b57\u5178\u9879,\u6307\u5411\u540c\u4e00\u4f4d\u7f6e\u7684\u53d8\u91cf\u90fd\u4f1a\u6e05\u7a7a >>> y {} copy() \u8be5\u51fd\u6570\u7528\u4e8e\u8fdb\u884c\u6d45\u590d\u5236\uff08\u526f\u672c\u53ea\u590d\u5236\u4e86\u952e\uff0c\u4f46\u662f\u503c\u4ecd\u6307\u5411\u539f\u4ef6\uff0c\u4fee\u6539\u526f\u672c\u503c\u7b49\u4ef7\u4e8e\u4fee\u6539\u539f\u4ef6\u503c\uff09\uff1a >>> x = { 'username' : 'admin' , 'machines' : [ 'foo' , 'bar' , 'baz' ]} >>> y = x . copy () >>> y [ 'username' ] = 'haha' >>> y [ 'machines' ] . remove ( 'bar' ) >>> y { 'username' : 'haha' , 'machines' : [ 'foo' , 'baz' ]} >>> x # \u540c\u65f6\u88ab\u4fee\u6539 { 'username' : 'admin' , 'machines' : [ 'foo' , 'baz' ]} # deepcpoy\u53ef\u4ee5\u5c06\u503c\u4ee5\u53ca\u5176\u6240\u5305\u542b\u7684\u503c\u4e5f\u590d\u5236\u5230\u526f\u672c\u4e2d\uff1a >>> from copy import deepcopy >>> d = {} >>> d [ 'names' ] = [ 'Alfred' , 'Bertrand' ] >>> c = d . copy () >>> dc = deepcopy ( d ) >>> d [ 'names' ] . append ( 'Clive' ) >>> c { 'names' : [ 'Alfred' , 'Bertrand' , 'Clive' ]} >>> dc { 'names' : [ 'Alfred' , 'Bertrand' ]} fromkeys() \u8be5\u51fd\u6570\u6307\u5b9a\u952e\uff0c\u5e76\u521b\u5efa\u65b0\u5b57\u5178\uff1a >>> {} . fromkeys ([ 'name' , 'age' ]) # \u76f4\u63a5\u901a\u8fc7\u7a7a\u5b57\u5178\u521b\u5efa { 'name' : None , 'age' : None } >>> dict . fromkeys ([ 'name' , 'age' ]) # \u901a\u8fc7dict { 'name' : None , 'age' : None } >>> dict . fromkeys ([ 'name' , 'age' ], 'unk' ) # \u6307\u5b9a\u9ed8\u8ba4\u503c { 'name' : 'unk' , 'age' : 'unk' } get() \u8be5\u51fd\u6570\u7528\u4e8e\u66f4\u53cb\u597d\u5730\u83b7\u53d6\u503c\uff1a >>> d = {} >>> d [ 'name' ] # \u4e0d\u5b58\u5728\u65f6\u76f4\u63a5\u62a5\u9519 KeyError : 'name' >>> print ( d . get ( 'name' )) # \u8fd4\u56deNone None >>> d . get ( 'name' , 'nan' ) # \u81ea\u5b9a\u4e49\u8fd4\u56de\u503c 'nan' >>> d [ 'name' ] = 'bob' >>> d . get ( 'name' , 'nan' ) # \u5b58\u5728\u65f6\u8fd4\u56de\u503c 'bob' items() >>> d = { 'title' : 'Python Web Site' , 'url' : 'http://www.python.org' , 'spam' : 0 } >>> d . items () # \u7528\u5143\u7ec4\u53cd\u5e94\u952e\u503c\u5bf9 dict_items ([( 'title' , 'Python Web Site' ), ( 'url' , 'http://www.python.org' ), ( 'spam' , 0 )]) >>> it = d . items () # \u59cb\u7ec8\u4e0e\u539f\u5b57\u5178\u4fdd\u6301\u4e00\u81f4\uff0c\u539f\u5b57\u5178\u4fee\u6539\u540e\u8fd9\u91cc\u4e5f\u4f1a\u4fee\u6539 >>> ( 'spam' , 0 ) in it True >>> d [ 'spam' ] = 1 >>> ( 'spam' , 0 ) in it False >>> d [ 'spam' ] = 0 >>> ( 'spam' , 0 ) in it True >>> list ( d . items ()) # \u8f6c\u5316\u4e3a\u5217\u8868 [( 'title' , 'Python Web Site' ), ( 'url' , 'http://www.python.org' ), ( 'spam' , 0 )] pop() >>> d { 'title' : 'Python Web Site' , 'url' : 'http://www.python.org' , 'spam' : 0 } >>> d . pop ( 'title' ) # \u83b7\u53d6\u952e\u5bf9\u5e94\u7684\u503c\u5e76\u5220\u9664\u8be5\u952e 'Python Web Site' >>> d { 'url' : 'http://www.python.org' , 'spam' : 0 } popitem() >>> d = { 'title' : 'Python Web Site' , 'url' : 'http://www.python.org' , 'spam' : 0 } >>> d . popitem () # \u968f\u673a\u5f39\u51fa\u4e00\u4e2a\u503c ( 'spam' , 0 ) >>> d { 'title' : 'Python Web Site' , 'url' : 'http://www.python.org' } setdefault() >>> d = {} >>> d . setdefault ( 'name' , 'N/A' ) #\u7c7b\u4f3cget,\u4f46\u662f\u589e\u52a0\u4e86\u5982\u679c\u952e\u4e0d\u5b58\u5728\u5219\u6dfb\u52a0\u9ed8\u8ba4\u503c\u7684\u529f\u80fd 'N/A' >>> d { 'name' : 'N/A' } >>> d [ 'name' ] = 'bob' >>> d . setdefault ( 'name' , 'N/A' ) # \u5f53\u952e\u5b58\u5728\u65f6\uff0c\u8fd4\u56de\u6b63\u5e38\u503c 'bob' >>> d { 'name' : 'bob' } >>> d = {} >>> print ( d . setdefault ( 'name' )) # \u9ed8\u8ba4\u8bbe\u7f6e\u4e3aNone None >>> d { 'name' : None } update() >>> d = { 'title' : 'Python Web Site' , 'url' : 'http://www.python.org' , 'spam' : 0 } >>> x = { 'title' : 'Python Language Website' } >>> d . update ( x ) # \u7528\u4e00\u4e2a\u5b57\u5178(x)\u66f4\u65b0\u53e6\u4e00\u4e2a\u5b57\u5178(d) >>> d { 'title' : 'Python Language Website' , 'url' : 'http://www.python.org' , 'spam' : 0 } values() >>> d { 'title' : 'Python Language Website' , 'url' : 'http://www.python.org' , 'spam' : 0 , 'name' : 'Python Language Website' } >>> d . values () # \u8fd4\u56de\u7531\u503c\u4e3a\u5143\u7d20\u7684\u5b57\u5178\u89c6\u56fe\u3002\u5141\u8bb8\u5305\u542b\u91cd\u590d\u5e8f\u5217\uff0c\u5982\u4e0b\uff1a dict_values ([ 'Python Language Website' , 'http://www.python.org' , 0 , 'Python Language Website' ])","title":"\u57fa\u7840\u603b\u7ed3(\u56db)-\u5b57\u5178"},{"location":"python/Basic_04/#_1","text":"","title":"\u5b57\u5178"},{"location":"python/Basic_04/#dict","text":"\u8be5\u51fd\u6570\u7528\u4e8e\u4ece\u5176\u4ed6\u952e\u503c\u5bf9\u5e8f\u5217\u6216\u6620\u5c04\u521b\u5efa\u5b57\u5178\uff0c\u5982\uff1a >>> items = [( 'name' , 'bob' ),( 'age' , 42 )] >>> d = dict ( items ) >>> d { 'name' : 'bob' , 'age' : 42 } \u4e5f\u53ef\u4ee5\u901a\u8fc7\u5173\u952e\u5b57\u53c2\u6570\u8fdb\u884c\u8bbe\u7f6e\uff1a >>> d = dict ( name = 'bob' , age = 12 ) >>> d { 'name' : 'bob' , 'age' : 12 }","title":"dict"},{"location":"python/Basic_04/#_2","text":"\u952e\uff1a \u5fc5\u987b\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\uff0c\u5982\u6574\u6570\uff0c\u6d6e\u70b9\u6570\uff0c\u5143\u7ec4\u7b49\u3002 \u81ea\u52a8\u6dfb\u52a0\uff1a \u5bf9\u4e0d\u5b58\u5728\u4e8e\u5b57\u5178\u4e2d\u7684\u952e\u8d4b\u503c\uff0c\u5c31\u662f\u6dfb\u52a0\u8be5\u952e\u503c\u5bf9\u3002 \u6210\u5458\u8d44\u683c\uff1a k in d\u627e\u7684\u662f\u6307\u5b9a\u952e\u503c\u662f\u5426\u5728\u5b57\u5178\u7684\u952e\u4e2d\uff08\u5e76\u975e\u503c\uff09","title":"\u51e0\u4e2a\u8981\u7d20"},{"location":"python/Basic_04/#format_map","text":"\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u5c06\u5b57\u5178\u7528\u4e8e\u5b57\u7b26\u4e32\u683c\u5f0f\u8bbe\u7f6e\uff1a >>> template = '''<html> ... <head><title>{title}</title></head> ... <body> ... <h1>{title}</h1> ... <p>{text}</p> ... </body>''' >>> data = { \"title\" : \"My Home Page\" , \"text\" : \"Welcone to my Homepage\" } >>> print ( template . format_map ( data )) < html > < head >< title > My Home Page </ title ></ head > < body > < h1 > My Home Page </ h1 > < p > Welcone to my Homepage </ p > </ body >","title":"format_map"},{"location":"python/Basic_04/#_3","text":"","title":"\u5b57\u5178\u65b9\u6cd5"},{"location":"python/Basic_04/#clear","text":">>> x = {} >>> y = x >>> x [ 'k' ] = 'v' >>> y { 'k' : 'v' } >>> x = {} >>> y # \u6b64\u5904y\u6ca1\u6709\u53d8\u5316\uff0c\u53ea\u6539\u53d8x { 'k' : 'v' } >>> x = {} >>> y = x >>> x [ 'k' ] = 'v' >>> y { 'k' : 'v' } >>> x . clear () # \u6b64\u5904\u5c06\u5c31\u5730\u6e05\u7a7a\u6240\u6709\u5b57\u5178\u9879,\u6307\u5411\u540c\u4e00\u4f4d\u7f6e\u7684\u53d8\u91cf\u90fd\u4f1a\u6e05\u7a7a >>> y {}","title":"clear()"},{"location":"python/Basic_04/#copy","text":"\u8be5\u51fd\u6570\u7528\u4e8e\u8fdb\u884c\u6d45\u590d\u5236\uff08\u526f\u672c\u53ea\u590d\u5236\u4e86\u952e\uff0c\u4f46\u662f\u503c\u4ecd\u6307\u5411\u539f\u4ef6\uff0c\u4fee\u6539\u526f\u672c\u503c\u7b49\u4ef7\u4e8e\u4fee\u6539\u539f\u4ef6\u503c\uff09\uff1a >>> x = { 'username' : 'admin' , 'machines' : [ 'foo' , 'bar' , 'baz' ]} >>> y = x . copy () >>> y [ 'username' ] = 'haha' >>> y [ 'machines' ] . remove ( 'bar' ) >>> y { 'username' : 'haha' , 'machines' : [ 'foo' , 'baz' ]} >>> x # \u540c\u65f6\u88ab\u4fee\u6539 { 'username' : 'admin' , 'machines' : [ 'foo' , 'baz' ]} # deepcpoy\u53ef\u4ee5\u5c06\u503c\u4ee5\u53ca\u5176\u6240\u5305\u542b\u7684\u503c\u4e5f\u590d\u5236\u5230\u526f\u672c\u4e2d\uff1a >>> from copy import deepcopy >>> d = {} >>> d [ 'names' ] = [ 'Alfred' , 'Bertrand' ] >>> c = d . copy () >>> dc = deepcopy ( d ) >>> d [ 'names' ] . append ( 'Clive' ) >>> c { 'names' : [ 'Alfred' , 'Bertrand' , 'Clive' ]} >>> dc { 'names' : [ 'Alfred' , 'Bertrand' ]}","title":"copy()"},{"location":"python/Basic_04/#fromkeys","text":"\u8be5\u51fd\u6570\u6307\u5b9a\u952e\uff0c\u5e76\u521b\u5efa\u65b0\u5b57\u5178\uff1a >>> {} . fromkeys ([ 'name' , 'age' ]) # \u76f4\u63a5\u901a\u8fc7\u7a7a\u5b57\u5178\u521b\u5efa { 'name' : None , 'age' : None } >>> dict . fromkeys ([ 'name' , 'age' ]) # \u901a\u8fc7dict { 'name' : None , 'age' : None } >>> dict . fromkeys ([ 'name' , 'age' ], 'unk' ) # \u6307\u5b9a\u9ed8\u8ba4\u503c { 'name' : 'unk' , 'age' : 'unk' }","title":"fromkeys()"},{"location":"python/Basic_04/#get","text":"\u8be5\u51fd\u6570\u7528\u4e8e\u66f4\u53cb\u597d\u5730\u83b7\u53d6\u503c\uff1a >>> d = {} >>> d [ 'name' ] # \u4e0d\u5b58\u5728\u65f6\u76f4\u63a5\u62a5\u9519 KeyError : 'name' >>> print ( d . get ( 'name' )) # \u8fd4\u56deNone None >>> d . get ( 'name' , 'nan' ) # \u81ea\u5b9a\u4e49\u8fd4\u56de\u503c 'nan' >>> d [ 'name' ] = 'bob' >>> d . get ( 'name' , 'nan' ) # \u5b58\u5728\u65f6\u8fd4\u56de\u503c 'bob'","title":"get()"},{"location":"python/Basic_04/#items","text":">>> d = { 'title' : 'Python Web Site' , 'url' : 'http://www.python.org' , 'spam' : 0 } >>> d . items () # \u7528\u5143\u7ec4\u53cd\u5e94\u952e\u503c\u5bf9 dict_items ([( 'title' , 'Python Web Site' ), ( 'url' , 'http://www.python.org' ), ( 'spam' , 0 )]) >>> it = d . items () # \u59cb\u7ec8\u4e0e\u539f\u5b57\u5178\u4fdd\u6301\u4e00\u81f4\uff0c\u539f\u5b57\u5178\u4fee\u6539\u540e\u8fd9\u91cc\u4e5f\u4f1a\u4fee\u6539 >>> ( 'spam' , 0 ) in it True >>> d [ 'spam' ] = 1 >>> ( 'spam' , 0 ) in it False >>> d [ 'spam' ] = 0 >>> ( 'spam' , 0 ) in it True >>> list ( d . items ()) # \u8f6c\u5316\u4e3a\u5217\u8868 [( 'title' , 'Python Web Site' ), ( 'url' , 'http://www.python.org' ), ( 'spam' , 0 )]","title":"items()"},{"location":"python/Basic_04/#pop","text":">>> d { 'title' : 'Python Web Site' , 'url' : 'http://www.python.org' , 'spam' : 0 } >>> d . pop ( 'title' ) # \u83b7\u53d6\u952e\u5bf9\u5e94\u7684\u503c\u5e76\u5220\u9664\u8be5\u952e 'Python Web Site' >>> d { 'url' : 'http://www.python.org' , 'spam' : 0 }","title":"pop()"},{"location":"python/Basic_04/#popitem","text":">>> d = { 'title' : 'Python Web Site' , 'url' : 'http://www.python.org' , 'spam' : 0 } >>> d . popitem () # \u968f\u673a\u5f39\u51fa\u4e00\u4e2a\u503c ( 'spam' , 0 ) >>> d { 'title' : 'Python Web Site' , 'url' : 'http://www.python.org' }","title":"popitem()"},{"location":"python/Basic_04/#setdefault","text":">>> d = {} >>> d . setdefault ( 'name' , 'N/A' ) #\u7c7b\u4f3cget,\u4f46\u662f\u589e\u52a0\u4e86\u5982\u679c\u952e\u4e0d\u5b58\u5728\u5219\u6dfb\u52a0\u9ed8\u8ba4\u503c\u7684\u529f\u80fd 'N/A' >>> d { 'name' : 'N/A' } >>> d [ 'name' ] = 'bob' >>> d . setdefault ( 'name' , 'N/A' ) # \u5f53\u952e\u5b58\u5728\u65f6\uff0c\u8fd4\u56de\u6b63\u5e38\u503c 'bob' >>> d { 'name' : 'bob' } >>> d = {} >>> print ( d . setdefault ( 'name' )) # \u9ed8\u8ba4\u8bbe\u7f6e\u4e3aNone None >>> d { 'name' : None }","title":"setdefault()"},{"location":"python/Basic_04/#update","text":">>> d = { 'title' : 'Python Web Site' , 'url' : 'http://www.python.org' , 'spam' : 0 } >>> x = { 'title' : 'Python Language Website' } >>> d . update ( x ) # \u7528\u4e00\u4e2a\u5b57\u5178(x)\u66f4\u65b0\u53e6\u4e00\u4e2a\u5b57\u5178(d) >>> d { 'title' : 'Python Language Website' , 'url' : 'http://www.python.org' , 'spam' : 0 }","title":"update()"},{"location":"python/Basic_04/#values","text":">>> d { 'title' : 'Python Language Website' , 'url' : 'http://www.python.org' , 'spam' : 0 , 'name' : 'Python Language Website' } >>> d . values () # \u8fd4\u56de\u7531\u503c\u4e3a\u5143\u7d20\u7684\u5b57\u5178\u89c6\u56fe\u3002\u5141\u8bb8\u5305\u542b\u91cd\u590d\u5e8f\u5217\uff0c\u5982\u4e0b\uff1a dict_values ([ 'Python Language Website' , 'http://www.python.org' , 0 , 'Python Language Website' ])","title":"values()"},{"location":"python/Basic_05/","text":"\u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u53e5 print \u8fd9\u4e2a\u8bed\u53e5\u5728python3\u4e2d\u5df2\u7ecf\u53d8\u6210\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u4f7f\u7528\u5982\u4e0b\uff1a >>> print ( 'a' , 'ha' ) # \u4ee5\u7a7a\u683c\u5206\u9694\uff0c\u62fc\u63a5\u591a\u4e2a\u5b57\u7b26\u4e32\u8f93\u51fa a ha >>> print ( 'a' , 'ha' , 32 ) a ha 32 >>> a = 'hello,' ; b = 'mr.' ; c = 'bob' >>> print ( a , b , c ) hello , mr . bob >>> print ( a , b , c , sep = \"_\" ) # sep\u8bbe\u7f6e\u95f4\u9694\u7b26 hello , _mr . _bob >>> print ( a , end = \" \" ); print ( b ) # end\u8bbe\u7f6e\u7ed3\u5c3e\u7b26\u53f7 hello , mr . >>> print ( a , end = \" \\n \" ); print ( b ) hello , mr . >>> print ( a , end = \" \\t \" ); print ( b ) hello , mr . >>> print ( a , end = \"ttttt\" ); print ( b ) hello , tttttmr . \u8d4b\u503c\u9b54\u6cd5 \u5e8f\u5217\u89e3\u5305 >>> x , y , z = 1 , 2 , 3 # \u5e8f\u5217\u89e3\u5305\uff0c\u5206\u522b\u8d4b\u503c\u7ed9x,y,z >>> x , y = y , x # \u6267\u884c\u4ea4\u6362\uff0c\u8fd9\u91cc\u4e5f\u662f\u5148\u5c06y,x\u6253\u5305\u6210\u5143\u7ec4\uff0c\u7136\u540e\u89e3\u5305\u5230x,y >>> print ( x , y , z ) 2 1 3 >>> x , y = 1 , 2 , 3 # \u5de6\u53f3\u6570\u76ee\u8981\u4e00\u81f4 ValueError : too many values to unpack ( expected 2 ) >>> x , y , * rest = 1 , 2 , 3 , 4 # \u53ef\u901a\u8fc7*\u53f7\u6536\u96c6\u5269\u4f59\u7684\u5143\u7d20 >>> rest [ 3 , 4 ] >>> first , * mid , last = \"Albus Percival Wulfric Brian Dumbledore\" . split () # \u53ea\u53d6\u524d\u540e\u4e24\u4e2a >>> mid [ 'Percival' , 'Wulfric' , 'Brian' ] >>> a , * b , c = 1 , 2 , 3 # \u5373\u4f7f\u6570\u76ee\u4e00\u81f4\uff0c*\u53f7\u4ee3\u8868\u7684\u90fd\u662f\u5217\u8868 >>> b [ 2 ] \u6761\u4ef6\u8bed\u53e5 \u5e03\u5c14\u8868\u8fbe\u5f0f \u5e03\u5c14\u8868\u8fbe\u5f0f\u4e2d\u7684\u5047\uff1a False None 0 \"\" () [] {} \uff0c\u4e5f\u5c31\u662fFalse,None,0\u548c\u6240\u6709\u7a7a\u5e8f\u5217\u548c\u6620\u5c04\u3002\u5176\u4ed6\u503c\u90fd\u89c6\u4e3a\u771f\u3002\u4e8b\u5b9e\u4e0abool\u7c7b\u578b\u7684True\u662f\u6570\u5b571\u7684\u522b\u540d\uff0cFalse\u662f0\u7684\u522b\u540d\uff1a >>> True == 1 True >>> False == 0 True if\u8bed\u53e5 >>> name = input ( 'What is your name? ' ) What is your name ? test >>> if name . endswith ( 'Gumby' ): ... print ( \"hello grumby\" ) ... else\u8bed\u53e5 >>> if name . endswith ( 'Gumby' ): ... print ( \"hello grumby\" ) ... else : ... print ( 'not you' ) ... not you \u6761\u4ef6\u8868\u8fbe\u5f0f >>> status = \"friend\" if name . endswith ( \"Gumby\" ) else \"stranger\" # if\u5224\u65ad\u4e3a\u771f\u5219\u8fd4\u56deif\u524d\u9762\u7684\u503c\uff0c\u5426\u5219\u8fd4\u56deelse\u540e\u9762\u7684\u503c >>> print ( status ) stranger elif \u8bed\u53e5 >>> if num > 0 : ... print ( 'The number is positive' ) ... elif num < 0 : # if\u4e3afalse\u65f6\u8fdb\u884c\u5224\u65ad ... print ( 'The number is negative' ) ... else : ... print ( 'The number is zero' ) \u5176\u4ed6\u5224\u65ad is \u548c == is\u5224\u65ad\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u76f8\u540c\uff0c==\u5224\u65ad\u4e24\u4e2a\u5bf9\u8c61\u7684\u503c\u662f\u5426\u76f8\u7b49\u3002 >>> x = y = [ 1 , 2 ] >>> z = [ 1 , 2 ] >>> x is y True >>> x is z False >>> x == y True >>> y == z True and,or,not if number <= 10 and number >= 1 : # and\u5fc5\u987b\u540c\u65f6\u6210\u7acb\u624d\u4e3a\u771f\uff0cor\u53ea\u9700\u8981\u5176\u4e2d\u4e00\u4e2a\u4e3a\u771f\uff0cnot\u8868\u793a\u8bed\u53e5\u4e3a\u5047\u65f6\u503c\u4e3a\u771f print ( 'Great!' ) else : print ( 'Wrong!' ) assert \u8fd9\u662f\u7528\u4e8e\u51fa\u73b0\u5bf9\u5e94\u9519\u8bef\u65f6\u63d0\u524d\u7ed3\u675f\u7a0b\u5e8f\u7684\uff0c\u8fd9\u6837\u6709\u5229\u4e8e\u6211\u4eec\u80fd\u51c6\u786e\u5b9a\u4f4d\u5230\u51fa\u9519\u4ee3\u7801\u3002 >>> age = - 1 >>> assert 0 < age < 100 , \"not leagal age {}\" . format ( age ) Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > AssertionError : not leagal age - 1 \u5faa\u73af\u8bed\u53e5 while >>> name = '' >>> while not name : # \u6761\u4ef6\u4e3a\u771f\u65f6\u624d\u80fd\u8df3\u51fa\u5faa\u73af\uff08name\u6709\u503c\uff09 ... name = input ( 'Please enter your name: ' ) ... Please enter your name : Please enter your name : for for\u7528\u4e8e\u5bf9\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u5982\u5e8f\u5217\uff09\u8fdb\u884c\u5faa\u73af\u64cd\u4f5c >>> words = [ 'this' , 'is' , 'an' , 'ex' , 'parrot' ] >>> for word in words : ... print ( word ) ... this is an ex parrot \u4e00\u4e9b\u8fed\u4ee3\u5de5\u5177 \u5e76\u884c\u8fed\u4ee3 >>> names = [ 'anne' , 'beth' , 'george' , 'damon' ] >>> ages = [ 12 , 45 , 32 , 102 ] >>> zip ( names , ages ) # zip\u53ef\u4ee5\u7f1d\u5408\u4e24\u4e2a\u5e8f\u5217 < zip object at 0x0000012E74C2D788 > >>> list ( zip ( names , ages )) [( 'anne' , 12 ), ( 'beth' , 45 ), ( 'george' , 32 ), ( 'damon' , 102 )] >>> for n , a in zip ( names , ages ): ... print ( n , a ) ... anne 12 beth 45 george 32 damon 102 >>> list ( zip ( range ( 5 ), range ( 1000000000 ))) # zip\u5982\u679c\u9047\u5230\u4e24\u4e2a\u957f\u5ea6\u4e0d\u7b49\u7684\u5e8f\u5217\uff0c\u5219\u4ee5\u957f\u5ea6\u8f83\u77ed\u7684\u4e3a\u4e3b\u3002 [( 0 , 0 ), ( 1 , 1 ), ( 2 , 2 ), ( 3 , 3 ), ( 4 , 4 )] \u8fed\u4ee3\u65f6\u83b7\u53d6\u7d22\u5f15 >>> for index , s in enumerate ( name ): #enumerate\u7528\u4e8e\u540c\u65f6\u83b7\u53d6\u7d22\u5f15\u548c\u503c ... print ( index , s ) ... 0 w 1 o 2 r ...... \u8df3\u51fa\u5faa\u73af break continue \u5faa\u73af\u4e2d\u7684else \u5f53\u9700\u8981\u5224\u65ad\u5faa\u73af\u662f\u6b63\u5e38\u7ec8\u6b62\u8fd8\u662fbreak\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u7528 else : >>> for n in range ( 10 ): ... if n > 10 : ... break ... else : # \u5728for\u5faa\u73af\u6b63\u5e38\u6267\u884c\u5b8c\u6bd5\u540e\u6267\u884c ... print ( 'hah' ) ... hah \u7b80\u5355\u63a8\u5bfc >>> girls = [ 'alice' , 'bernice' , 'clarice' ] >>> boys = [ 'chris' , 'arnold' , 'bob' ] >>> [ b + '+' + g for b in boys for g in girls if b [ 0 ] == g [ 0 ]] # \u4f7f\u7528\u8bed\u53e5\u6765\u751f\u6210\u5217\u8868\uff0c\u8fdb\u884c\u5217\u8868\u63a8\u5bfc [ 'chris+clarice' , 'arnold+alice' , 'bob+bernice' ] >>> test = { i : i ** 2 for i in range ( 10 )} # \u5b57\u5178\u63a8\u5bfc >>> test { 0 : 0 , 1 : 1 , 2 : 4 , 3 : 9 , 4 : 16 , 5 : 25 , 6 : 36 , 7 : 49 , 8 : 64 , 9 : 81 } \u4e00\u4e9b\u5b9e\u7528\u51fd\u6570 del >>> x = 1 >>> del x #\u5220\u9664\u540d\u79f0x,\u6b64\u65f61\u8fd9\u4e2a\u6570\u503c\u6ca1\u6709\u4efb\u4f55\u5f15\u7528\uff0cpython\u89e3\u91ca\u5668\u4f1a\u76f4\u63a5\u5c06\u5176\u5220\u9664\uff0c\u8fd9\u79f0\u4e3a\u5783\u573e\u6536\u96c6 >>> x NameError : name 'x' is not defined >>> x = [ \"hha\" ] >>> y = x >>> del x # \u5220\u9664x,\u4f46\u662fy\u4ecd\u7136\u6307\u5411\u8be5\u5217\u8868\uff0c\u6240\u4ee5\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7y\u627e\u5230\u5217\u8868\uff0c\u4e8b\u5b9e\u4e0a\uff0cPython\u6839\u672c\u6ca1\u6cd5\u5220\u9664\u4efb\u4f55\u503c\uff0c\u53ea\u6709\u5728\u6ca1\u6709\u4efb\u4f55\u6307\u5411\u5b83\u7684\u5f15\u7528\u65f6\uff0c\u4f1a\u88ab\u81ea\u52a8\u5220\u9664\u3002 >>> y [ 'hha' ] exec >>> from math import sqrt >>> exec ( \"sqrt=1\" ) # \u5c06\u5b57\u7b26\u4e32\u4f5c\u4e3a\u8bed\u53e5\u6267\u884c >>> sqrt ( 2 ) # sqrt\u88ab\u8986\u76d6\u4e86 TypeError : 'int' object is not callable >>> sqrt 1 >>> scope = {} >>> from math import sqrt >>> sqrt < built - in function sqrt > >>> exec ( \"sqrt=1\" , scope ) # \u53ef\u4ee5\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u88ab\u8986\u76d6\u4e86 >>> sqrt ( 2 ) 1.4142135623730951 >>> scope [ 'sqrt' ] 1 >>> scope . keys () # \u8bed\u53e5\u4f1a\u5728scope\u4e2d\u6dfb\u52a0\u5185\u5bb9\u51fd\u6570\u7684\u5b57\u5178 [ 'sqrt' , '__builtins__' ] eval >>> eval ( input ( \"Enter an arithmetic expression: \" )) # \u7528\u4e8e\u8ba1\u7b97\u5b57\u7b26\u4e32\u8868\u8fbe\u5f0f\u7684\u503c Enter an arithmetic expression : 2 ** 3 + 4 * ( 1 + 2 ) 20 >>> a = eval ( \"2+2\" ) # eval\u662f\u51fd\u6570\uff0c\u4f1a\u8fd4\u56de\u503c\uff0c\u800cexec\u662f\u8bed\u53e5\uff0c\u4e0d\u8fd4\u56de\u503c >>> a 4","title":"\u57fa\u7840\u603b\u7ed3(\u4e94)-\u57fa\u672c\u8bed\u53e5"},{"location":"python/Basic_05/#_1","text":"","title":"\u6761\u4ef6\u3001\u5faa\u73af\u53ca\u5176\u4ed6\u8bed\u53e5"},{"location":"python/Basic_05/#print","text":"\u8fd9\u4e2a\u8bed\u53e5\u5728python3\u4e2d\u5df2\u7ecf\u53d8\u6210\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u4f7f\u7528\u5982\u4e0b\uff1a >>> print ( 'a' , 'ha' ) # \u4ee5\u7a7a\u683c\u5206\u9694\uff0c\u62fc\u63a5\u591a\u4e2a\u5b57\u7b26\u4e32\u8f93\u51fa a ha >>> print ( 'a' , 'ha' , 32 ) a ha 32 >>> a = 'hello,' ; b = 'mr.' ; c = 'bob' >>> print ( a , b , c ) hello , mr . bob >>> print ( a , b , c , sep = \"_\" ) # sep\u8bbe\u7f6e\u95f4\u9694\u7b26 hello , _mr . _bob >>> print ( a , end = \" \" ); print ( b ) # end\u8bbe\u7f6e\u7ed3\u5c3e\u7b26\u53f7 hello , mr . >>> print ( a , end = \" \\n \" ); print ( b ) hello , mr . >>> print ( a , end = \" \\t \" ); print ( b ) hello , mr . >>> print ( a , end = \"ttttt\" ); print ( b ) hello , tttttmr .","title":"print"},{"location":"python/Basic_05/#_2","text":"","title":"\u8d4b\u503c\u9b54\u6cd5"},{"location":"python/Basic_05/#_3","text":">>> x , y , z = 1 , 2 , 3 # \u5e8f\u5217\u89e3\u5305\uff0c\u5206\u522b\u8d4b\u503c\u7ed9x,y,z >>> x , y = y , x # \u6267\u884c\u4ea4\u6362\uff0c\u8fd9\u91cc\u4e5f\u662f\u5148\u5c06y,x\u6253\u5305\u6210\u5143\u7ec4\uff0c\u7136\u540e\u89e3\u5305\u5230x,y >>> print ( x , y , z ) 2 1 3 >>> x , y = 1 , 2 , 3 # \u5de6\u53f3\u6570\u76ee\u8981\u4e00\u81f4 ValueError : too many values to unpack ( expected 2 ) >>> x , y , * rest = 1 , 2 , 3 , 4 # \u53ef\u901a\u8fc7*\u53f7\u6536\u96c6\u5269\u4f59\u7684\u5143\u7d20 >>> rest [ 3 , 4 ] >>> first , * mid , last = \"Albus Percival Wulfric Brian Dumbledore\" . split () # \u53ea\u53d6\u524d\u540e\u4e24\u4e2a >>> mid [ 'Percival' , 'Wulfric' , 'Brian' ] >>> a , * b , c = 1 , 2 , 3 # \u5373\u4f7f\u6570\u76ee\u4e00\u81f4\uff0c*\u53f7\u4ee3\u8868\u7684\u90fd\u662f\u5217\u8868 >>> b [ 2 ]","title":"\u5e8f\u5217\u89e3\u5305"},{"location":"python/Basic_05/#_4","text":"","title":"\u6761\u4ef6\u8bed\u53e5"},{"location":"python/Basic_05/#_5","text":"\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e2d\u7684\u5047\uff1a False None 0 \"\" () [] {} \uff0c\u4e5f\u5c31\u662fFalse,None,0\u548c\u6240\u6709\u7a7a\u5e8f\u5217\u548c\u6620\u5c04\u3002\u5176\u4ed6\u503c\u90fd\u89c6\u4e3a\u771f\u3002\u4e8b\u5b9e\u4e0abool\u7c7b\u578b\u7684True\u662f\u6570\u5b571\u7684\u522b\u540d\uff0cFalse\u662f0\u7684\u522b\u540d\uff1a >>> True == 1 True >>> False == 0 True","title":"\u5e03\u5c14\u8868\u8fbe\u5f0f"},{"location":"python/Basic_05/#if","text":">>> name = input ( 'What is your name? ' ) What is your name ? test >>> if name . endswith ( 'Gumby' ): ... print ( \"hello grumby\" ) ...","title":"if\u8bed\u53e5"},{"location":"python/Basic_05/#else","text":">>> if name . endswith ( 'Gumby' ): ... print ( \"hello grumby\" ) ... else : ... print ( 'not you' ) ... not you","title":"else\u8bed\u53e5"},{"location":"python/Basic_05/#_6","text":">>> status = \"friend\" if name . endswith ( \"Gumby\" ) else \"stranger\" # if\u5224\u65ad\u4e3a\u771f\u5219\u8fd4\u56deif\u524d\u9762\u7684\u503c\uff0c\u5426\u5219\u8fd4\u56deelse\u540e\u9762\u7684\u503c >>> print ( status ) stranger","title":"\u6761\u4ef6\u8868\u8fbe\u5f0f"},{"location":"python/Basic_05/#elif","text":">>> if num > 0 : ... print ( 'The number is positive' ) ... elif num < 0 : # if\u4e3afalse\u65f6\u8fdb\u884c\u5224\u65ad ... print ( 'The number is negative' ) ... else : ... print ( 'The number is zero' )","title":"elif \u8bed\u53e5"},{"location":"python/Basic_05/#_7","text":"","title":"\u5176\u4ed6\u5224\u65ad"},{"location":"python/Basic_05/#is","text":"is\u5224\u65ad\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u76f8\u540c\uff0c==\u5224\u65ad\u4e24\u4e2a\u5bf9\u8c61\u7684\u503c\u662f\u5426\u76f8\u7b49\u3002 >>> x = y = [ 1 , 2 ] >>> z = [ 1 , 2 ] >>> x is y True >>> x is z False >>> x == y True >>> y == z True","title":"is \u548c =="},{"location":"python/Basic_05/#andornot","text":"if number <= 10 and number >= 1 : # and\u5fc5\u987b\u540c\u65f6\u6210\u7acb\u624d\u4e3a\u771f\uff0cor\u53ea\u9700\u8981\u5176\u4e2d\u4e00\u4e2a\u4e3a\u771f\uff0cnot\u8868\u793a\u8bed\u53e5\u4e3a\u5047\u65f6\u503c\u4e3a\u771f print ( 'Great!' ) else : print ( 'Wrong!' )","title":"and,or,not"},{"location":"python/Basic_05/#assert","text":"\u8fd9\u662f\u7528\u4e8e\u51fa\u73b0\u5bf9\u5e94\u9519\u8bef\u65f6\u63d0\u524d\u7ed3\u675f\u7a0b\u5e8f\u7684\uff0c\u8fd9\u6837\u6709\u5229\u4e8e\u6211\u4eec\u80fd\u51c6\u786e\u5b9a\u4f4d\u5230\u51fa\u9519\u4ee3\u7801\u3002 >>> age = - 1 >>> assert 0 < age < 100 , \"not leagal age {}\" . format ( age ) Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > AssertionError : not leagal age - 1","title":"assert"},{"location":"python/Basic_05/#_8","text":"","title":"\u5faa\u73af\u8bed\u53e5"},{"location":"python/Basic_05/#while","text":">>> name = '' >>> while not name : # \u6761\u4ef6\u4e3a\u771f\u65f6\u624d\u80fd\u8df3\u51fa\u5faa\u73af\uff08name\u6709\u503c\uff09 ... name = input ( 'Please enter your name: ' ) ... Please enter your name : Please enter your name :","title":"while"},{"location":"python/Basic_05/#for","text":"for\u7528\u4e8e\u5bf9\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u5982\u5e8f\u5217\uff09\u8fdb\u884c\u5faa\u73af\u64cd\u4f5c >>> words = [ 'this' , 'is' , 'an' , 'ex' , 'parrot' ] >>> for word in words : ... print ( word ) ... this is an ex parrot","title":"for"},{"location":"python/Basic_05/#_9","text":"","title":"\u4e00\u4e9b\u8fed\u4ee3\u5de5\u5177"},{"location":"python/Basic_05/#_10","text":">>> names = [ 'anne' , 'beth' , 'george' , 'damon' ] >>> ages = [ 12 , 45 , 32 , 102 ] >>> zip ( names , ages ) # zip\u53ef\u4ee5\u7f1d\u5408\u4e24\u4e2a\u5e8f\u5217 < zip object at 0x0000012E74C2D788 > >>> list ( zip ( names , ages )) [( 'anne' , 12 ), ( 'beth' , 45 ), ( 'george' , 32 ), ( 'damon' , 102 )] >>> for n , a in zip ( names , ages ): ... print ( n , a ) ... anne 12 beth 45 george 32 damon 102 >>> list ( zip ( range ( 5 ), range ( 1000000000 ))) # zip\u5982\u679c\u9047\u5230\u4e24\u4e2a\u957f\u5ea6\u4e0d\u7b49\u7684\u5e8f\u5217\uff0c\u5219\u4ee5\u957f\u5ea6\u8f83\u77ed\u7684\u4e3a\u4e3b\u3002 [( 0 , 0 ), ( 1 , 1 ), ( 2 , 2 ), ( 3 , 3 ), ( 4 , 4 )]","title":"\u5e76\u884c\u8fed\u4ee3"},{"location":"python/Basic_05/#_11","text":">>> for index , s in enumerate ( name ): #enumerate\u7528\u4e8e\u540c\u65f6\u83b7\u53d6\u7d22\u5f15\u548c\u503c ... print ( index , s ) ... 0 w 1 o 2 r ......","title":"\u8fed\u4ee3\u65f6\u83b7\u53d6\u7d22\u5f15"},{"location":"python/Basic_05/#_12","text":"break continue","title":"\u8df3\u51fa\u5faa\u73af"},{"location":"python/Basic_05/#else_1","text":"\u5f53\u9700\u8981\u5224\u65ad\u5faa\u73af\u662f\u6b63\u5e38\u7ec8\u6b62\u8fd8\u662fbreak\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u7528 else : >>> for n in range ( 10 ): ... if n > 10 : ... break ... else : # \u5728for\u5faa\u73af\u6b63\u5e38\u6267\u884c\u5b8c\u6bd5\u540e\u6267\u884c ... print ( 'hah' ) ... hah","title":"\u5faa\u73af\u4e2d\u7684else"},{"location":"python/Basic_05/#_13","text":">>> girls = [ 'alice' , 'bernice' , 'clarice' ] >>> boys = [ 'chris' , 'arnold' , 'bob' ] >>> [ b + '+' + g for b in boys for g in girls if b [ 0 ] == g [ 0 ]] # \u4f7f\u7528\u8bed\u53e5\u6765\u751f\u6210\u5217\u8868\uff0c\u8fdb\u884c\u5217\u8868\u63a8\u5bfc [ 'chris+clarice' , 'arnold+alice' , 'bob+bernice' ] >>> test = { i : i ** 2 for i in range ( 10 )} # \u5b57\u5178\u63a8\u5bfc >>> test { 0 : 0 , 1 : 1 , 2 : 4 , 3 : 9 , 4 : 16 , 5 : 25 , 6 : 36 , 7 : 49 , 8 : 64 , 9 : 81 }","title":"\u7b80\u5355\u63a8\u5bfc"},{"location":"python/Basic_05/#_14","text":"","title":"\u4e00\u4e9b\u5b9e\u7528\u51fd\u6570"},{"location":"python/Basic_05/#del","text":">>> x = 1 >>> del x #\u5220\u9664\u540d\u79f0x,\u6b64\u65f61\u8fd9\u4e2a\u6570\u503c\u6ca1\u6709\u4efb\u4f55\u5f15\u7528\uff0cpython\u89e3\u91ca\u5668\u4f1a\u76f4\u63a5\u5c06\u5176\u5220\u9664\uff0c\u8fd9\u79f0\u4e3a\u5783\u573e\u6536\u96c6 >>> x NameError : name 'x' is not defined >>> x = [ \"hha\" ] >>> y = x >>> del x # \u5220\u9664x,\u4f46\u662fy\u4ecd\u7136\u6307\u5411\u8be5\u5217\u8868\uff0c\u6240\u4ee5\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7y\u627e\u5230\u5217\u8868\uff0c\u4e8b\u5b9e\u4e0a\uff0cPython\u6839\u672c\u6ca1\u6cd5\u5220\u9664\u4efb\u4f55\u503c\uff0c\u53ea\u6709\u5728\u6ca1\u6709\u4efb\u4f55\u6307\u5411\u5b83\u7684\u5f15\u7528\u65f6\uff0c\u4f1a\u88ab\u81ea\u52a8\u5220\u9664\u3002 >>> y [ 'hha' ]","title":"del"},{"location":"python/Basic_05/#exec","text":">>> from math import sqrt >>> exec ( \"sqrt=1\" ) # \u5c06\u5b57\u7b26\u4e32\u4f5c\u4e3a\u8bed\u53e5\u6267\u884c >>> sqrt ( 2 ) # sqrt\u88ab\u8986\u76d6\u4e86 TypeError : 'int' object is not callable >>> sqrt 1 >>> scope = {} >>> from math import sqrt >>> sqrt < built - in function sqrt > >>> exec ( \"sqrt=1\" , scope ) # \u53ef\u4ee5\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u88ab\u8986\u76d6\u4e86 >>> sqrt ( 2 ) 1.4142135623730951 >>> scope [ 'sqrt' ] 1 >>> scope . keys () # \u8bed\u53e5\u4f1a\u5728scope\u4e2d\u6dfb\u52a0\u5185\u5bb9\u51fd\u6570\u7684\u5b57\u5178 [ 'sqrt' , '__builtins__' ]","title":"exec"},{"location":"python/Basic_05/#eval","text":">>> eval ( input ( \"Enter an arithmetic expression: \" )) # \u7528\u4e8e\u8ba1\u7b97\u5b57\u7b26\u4e32\u8868\u8fbe\u5f0f\u7684\u503c Enter an arithmetic expression : 2 ** 3 + 4 * ( 1 + 2 ) 20 >>> a = eval ( \"2+2\" ) # eval\u662f\u51fd\u6570\uff0c\u4f1a\u8fd4\u56de\u503c\uff0c\u800cexec\u662f\u8bed\u53e5\uff0c\u4e0d\u8fd4\u56de\u503c >>> a 4","title":"eval"},{"location":"python/Basic_06/","text":"\u62bd\u8c61 callable >>> x = 2 >>> y = len >>> callable ( x ) # \u5224\u65adx\u662f\u5426\u53ef\u8c03\u7528 False >>> callable ( y ) True \u51fd\u6570\u6587\u6863 >>> def square ( x ): ... '\u8ba1\u7b97x\u7684\u5e73\u65b9\u503c' # \u8fd9\u79cd\u653e\u5728\u51fd\u6570\u7b2c\u4e00\u884c\u7684\u5b57\u7b26\u4e32\u79f0\u4f5c\u6587\u6863\u5b57\u7b26\u4e32 ... return x * x >>> square . __doc__ # \u8fd4\u56de\u51fd\u6570\u6587\u6863 '\u8ba1\u7b97x\u7684\u5e73\u65b9\u503c' >>> help ( square ) # \u8fd4\u56de\u51fd\u6570\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5305\u62ec\u51fd\u6570\u6587\u6863 Help on function square in module __main__ : square ( x ) \u8ba1\u7b97 x\u7684\u5e73\u65b9\u503c \u53c2\u6570 \u4fee\u6539\u53c2\u6570 >>> def change ( x ): ... x = x + 1 ... >>> x = 0 >>> change ( x ) >>> x # \u5e76\u4e0d\u4f1a\u6539\u53d8\u5916\u90e8\u503c 0 >>> def change ( x ): ... x [ 0 ] = x [ 0 ] + 1 ... >>> x = [ 0 ] >>> change ( x ) # \u5bf9\u4e8e\u6570\u7ec4\u8fdb\u884c\u5c40\u90e8\u4fee\u6539\u662f\u53ef\u884c\u7684 >>> x [ 1 ] >>> x = [ 0 ] >>> change ( x [:]) # \u4f20\u5165x\u7684\u526f\u672c\uff0c\u6b64\u65f6\u5185\u90e8\u53ea\u4fee\u6539\u526f\u672c\uff0c\u4e0d\u5f71\u54cd\u5185\u90e8 >>> x [ 0 ] >>> def inc ( x ): return x + 1 # \u5982\u679c\u5fc5\u9700\u8981\u6539\u53d8\u53c2\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u6539\u53d8\u540e\u7684\u503c\uff0c\u6216\u8005\u76f4\u63a5\u4f20\u5165\u6570\u7ec4 ... >>> inc ( 0 ) 1 \u4f4d\u7f6e\u53c2\u6570\u548c\u5173\u952e\u5b57\u53c2\u6570 >>> def hello ( greeting = \"hi\" , name = 'arnold' ): ... print ( '{}, {}!' . format ( greeting , name )) ... >>> hello ( 'hello' , 'bob' ) # \u901a\u8fc7\u4f4d\u7f6e\u6765\u4f20\u9012\u53c2\u6570 hello , bob ! >>> hello ( 'hello' , name = 'alice' ) # \u6df7\u5408\u4f7f\u7528\u4f4d\u7f6e\u548c\u5173\u952e\u5b57\u53c2\u6570\uff0c\u4f4d\u7f6e\u53c2\u6570\u5fc5\u987b\u5728\u524d\u9762\uff0c\u5426\u5219\u51fd\u6570\u65e0\u6cd5\u786e\u5b9a\u53c2\u6570 hello , alice ! >>> hello ( name = 'alice' ) # \u5bf9\u4e8e\u6709\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u7701\u7565 hi , alice ! >>> hello () hi , arnold ! \u6536\u96c6\u53c2\u6570 >>> def print_params ( x , y , z = 3 , * r1 , d , ** r2 ): # *r1\u7528\u4e8e\u6536\u96c6\u4f4d\u7f6e\u53c2\u6570\uff0c\u5728\u5176\u540e\u9762\u7684\u53c2\u6570\u5fc5\u987b\u662f\u5173\u952e\u5b57\u53c2\u6570\uff0c\u56e0\u6b64d\u5fc5\u987b\u7528\u5173\u952e\u5b57\u8d4b\u503c\uff0c\u800c**r2\u6536\u96c6\u6240\u6709\u5269\u4f59\u5173\u952e\u5b57\u53c2\u6570 ... print ( x , y , z ) ... print ( r1 ) ... print ( d ) ... print ( r2 ) ... >>> print_params ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , d = 19 , foo = 1 , bar = 2 , sth = \"hh\" ) 1 2 3 ( 4 , 5 , 6 , 7 , 8 ) 19 { 'foo' : 1 , 'bar' : 2 , 'sth' : 'hh' } \u5206\u914d\u53c2\u6570 \u5f53\u6211\u4eec\u6709\u591a\u4e2a\u53c2\u6570\u9700\u8981\u4f20\u9012\u503c\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u5e8f\u5217\u6216\u8005\u5b57\u5178\uff0c\u7136\u540e\u7528\u524d\u9762\u63d0\u5230\u7684 \u548c *\u8fdb\u884c\u53cd\u5411\u64cd\u4f5c\uff0c\u5c06\u4e0d\u540c\u7684\u503c\u5206\u914d\u5230\u4e0d\u540c\u7684\u53c2\u6570\u4e2d\u3002\u4f46\u662f\uff0c\u5982\u679c\u51fd\u6570\u672c\u8eab\u4f7f\u7528\u4e86\u6536\u96c6\u53c2\u6570\uff0c\u90a3\u4e48\u5c31\u6ca1\u5fc5\u8981\u4f7f\u7528\u5206\u914d\u53c2\u6570\u4e86\uff0c\u8fd9\u6837\u53ef\u80fd\u6bd4\u76f4\u63a5\u4f20\u5165\u5e8f\u5217\u548c\u5b57\u5178\u66f4\u52a0\u9ebb\u70e6\u3002 >>> def with_stars ( ** kwd ): ... print ( kwd [ 'name' ], 'is' , kwd [ 'age' ], 'years old.' ) ... >>> def without_stars ( kwd ): ... print ( kwd [ 'name' ], 'is' , kwd [ 'age' ], 'years old.' ) ... >>> args = { \"name\" : \"bob\" , \"age\" : 12 } >>> with_stars ( ** args ) # \u5c06\u5b57\u5178\u89e3\u5305\u5206\u914d\u5230\u4e24\u4e2a\u53c2\u6570\u4e2d\uff0c\u7136\u540e\u518d\u653e\u5165\u5f62\u53c2\u4e2d bob is 12 years old . >>> without_stars ( args ) # \u76f4\u63a5\u4f20\u5b57\u5178\u8fdb\u5165\u51fd\u6570 bob is 12 years old . >>> def add ( a , b ): ... return a + b >>> args = ( 2 , 3 ) >>> add ( * args ) # \u89e3\u5305\u5e76\u5206\u914d\u53c2\u6570\u5230a,b 5 \u4f5c\u7528\u57df >>> x = 1 >>> scope = vars () # \u8fd4\u56de\u5168\u5c40\u53d8\u91cf\u5b9a\u4e49\u57df\u5b57\u5178 >>> scope [ 'x' ] 1 >>> scope [ 'x' ] += 1 >>> x # \u6700\u597d\u4e0d\u8981\u76f4\u63a5\u64cd\u4f5c\u4f5c\u7528\u57df\u7684\u503c 2 >>> def foo (): x = 42 # \u521b\u5efa\u4e86\u5c40\u90e8\u53d8\u91cfx\uff0c\u6b64\u65f6\u5c5e\u4e8e\u53e6\u4e00\u4e2a\u4f5c\u7528\u57df ... >>> x = 1 >>> foo () # \u5e76\u4e0d\u4f1a\u6539\u53d8\u5168\u5c40\u53d8\u91cfx >>> x 1 >>> def combine ( parameter ): print ( parameter + external ) # \u5c40\u90e8\u4f5c\u7528\u57df\u53ef\u4ee5\u8bbf\u95ee\u5230\u5168\u5c40\u4f5c\u7528\u57df ... >>> external = 'berry' >>> combine ( \"hi \" ) hi berry >>> def combine ( parameter ): print ( parameter + globals ()[ 'parameter' ]) # \u5982\u679c\u5c40\u90e8\u53d8\u91cf\u540d\u4e0e\u5168\u5c40\u53d8\u91cf\u540d\u51b2\u7a81\uff0c\u53ef\u4ee5\u901a\u8fc7globals()\u83b7\u53d6\u5168\u5c40\u4f5c\u7528\u57df\u5b57\u5178\uff0c\u7136\u540e\u53d6\u51fa\u5bf9\u5e94\u7684\u503c\u3002\uff08\u76f8\u5bf9\u5e94\u7684\u5c40\u90e8\u4f5c\u7528\u57df\u5b57\u5178\u4e3alocals()\uff09 ... >>> parameter = \"berry\" >>> combine ( \"Straw\" ) Strawberry >>> x = 1 >>> def inc (): ... global x # \u5982\u679c\u60f3\u4fee\u6539\u5916\u90e8\u53d8\u91cf\u6216\u8005\u83b7\u53d6\u5916\u90e8\u53d8\u91cf\uff0c\u53ef\u76f4\u63a5\u58f0\u660e\u4e3aglobal ... x = x + 1 ... >>> inc () >>> x 2 \u95ed\u5305 >>> def multiplier ( factor ): ... def multiplyByFactor ( number ): # \u8be5\u51fd\u6570\u643a\u5e26\u7740\u5916\u90e8\u51fd\u6570\u7684\u4f5c\u7528\u57df\uff0c\u79f0\u4e4b\u4e3a\u95ed\u5305 ... return number * factor ... return multiplyByFactor ... >>> double = multiplier ( 2 ) >>> double ( 10 ) 20 >>> triple = multiplier ( 3 ) >>> triple ( 4 ) 12 >>> def multiplier ( factor ): ... print ( '1' , locals ()) ... def multiplyByFactor ( number ): ... print ( '2' , locals ()) ... return number * factor ... return multiplyByFactor ... >>> double = multiplier ( 2 ) 1 { 'factor' : 2 } >>> double ( 2 ) 2 { 'number' : 2 , 'factor' : 2 } 4 >>> double ( 10 ) # \u53ef\u8bbf\u95ee\u5916\u5c42\u51fd\u6570\u7684\u4f5c\u7528\u57df\uff0c\u4ece\u800c\u83b7\u5f97\u66f4\u52a0\u52a8\u6001\u7684\u51fd\u6570\u7279\u6027 2 { 'number' : 10 , 'factor' : 2 } 20 >>> def multiplier ( factor ): ... print ( '1' , locals ()) ... def multiplyByFactor ( number ): ... nonlocal factor # \u5b9a\u4e49\u5916\u90e8\u53d8\u91cfnonlocal ... factor += 3 ... print ( '2' , locals ()) ... return number * factor ... return multiplyByFactor ... >>> test = multiplier ( 0 ) 1 { 'factor' : 0 } >>> test ( 2 ) # \u8fd9\u91cc\u5916\u90e8\u53d8\u91cf\u88ab\u4fee\u6539 2 { 'number' : 2 , 'factor' : 3 } 6 \u9012\u5f52 \u9012\u5f52\u51fd\u6570\u901a\u5e38\u5305\u62ec\u4e24\u4e2a\u90e8\u5206\uff1a \u57fa\u7ebf\u6761\u4ef6\uff08\u9488\u5bf9\u6700\u5c0f\u7684\u95ee\u9898\uff09\uff1a\u6ee1\u8db3\u8fd9\u79cd\u6761\u4ef6\u65f6\u51fd\u6570\u5c06\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u503c\u3002 \u9012\u5f52\u6761\u4ef6\uff1a\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u8c03\u7528\uff0c\u8fd9\u4e9b\u8c03\u7528\u65e8\u5728\u89e3\u51b3\u95ee\u9898\u7684\u4e00\u90e8\u5206\u3002 \u9636\u4e58\u548c\u5e42 \u9636\u4e58 \u5b9a\u4e49\uff1a 1\u7684\u9636\u4e58\u4e3a1 \u5bf9\u4e8en>1, n\u7684\u9636\u4e58\u7b49\u4e8e(n-1)\u7684\u9636\u4e58\u4e58\u4ee5n >>> def factorial ( n ): ... if ( n == 1 ): return 1 ... else : return n * factorial ( n - 1 ) ... >>> factorial ( 4 ) 24 \u5e42 \u5b9a\u4e49\uff1a x\u76840\u6b21\u5e42\u4e3a1 n>0, pow(x,n)\u4e3apow(x,n-1)*x >>> def pow ( x , n ): ... if n == 0 : return 1 ... else : return x * pow ( x , n - 1 ) ... >>> pow ( 2 , 3 ) 8 \u9012\u5f52\u5f3a\u5728\u6613\u8bfb\u6027\uff0c\u4f46\u662f\u6027\u80fd\u6bd4\u4e0d\u4e0a\u5faa\u73af\u3002\u6bcf\u4e00\u6b21\u8fd4\u56de\u81ea\u8eab\uff0c\u90fd\u662f\u5b9a\u4e49\u4e0d\u540c\u7248\u672c\uff08\u4e0d\u540c\u4f5c\u7528\u57df\uff09\u7684\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u5c31\u50cf\u662f\u4e24\u4e2a\u540c\u7c7b\u7684\u52a8\u7269\u5728\u4ea4\u6d41\u3002 \u51fd\u6570\u5f0f\u7f16\u7a0b\uff1amap,filter,reduce >>> data = [ 1 , 2 , 3 , 4 , 5 ] >>> list ( map ( str , data )) # Python3\u4e2dmap,filter\u8fd4\u56de\u7684\u662f\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\u3002map\u7528\u4e8e\u5c06\u51fd\u6570\u4f5c\u7528\u4e8e\u5e8f\u5217 [ '1' , '2' , '3' , '4' , '5' ] >>> list ( filter ( lambda x : x > 3 , data )) # filter\u7528\u4e8e\u7b5b\u51fa\u7b26\u5408\u6761\u4ef6\u7684\u6570\u636e [ 4 , 5 ] >>> from functools import reduce # \u7531\u4e8ereduce\u7528\u5904\u4e0d\u5927\u4e14\u4e0d\u6613\u7406\u89e3\uff0c\u9f9f\u53d4\u628a\u5b83\u4ecepython3\u7684\u5185\u5efa\u51fd\u6570\u4e2d\u79fb\u9664\u4e86\uff0c\u60f3\u7528\u7684\u8bdd\u9700\u8981\u4ecefunctools\u91cc\u5f15\u7528 >>> reduce ( lambda x , y : x + y , data ) # reduce\u7528\u4e8e\u7d2f\u8ba1\u4f5c\u7528\u51fd\u6570\u4e8e\u6574\u4e2a\u5e8f\u5217 15 >>> from operator import add >>> reduce ( add , data ) 15","title":"\u57fa\u7840\u603b\u7ed3(\u516d)-\u51fd\u6570"},{"location":"python/Basic_06/#_1","text":"","title":"\u62bd\u8c61"},{"location":"python/Basic_06/#callable","text":">>> x = 2 >>> y = len >>> callable ( x ) # \u5224\u65adx\u662f\u5426\u53ef\u8c03\u7528 False >>> callable ( y ) True","title":"callable"},{"location":"python/Basic_06/#_2","text":">>> def square ( x ): ... '\u8ba1\u7b97x\u7684\u5e73\u65b9\u503c' # \u8fd9\u79cd\u653e\u5728\u51fd\u6570\u7b2c\u4e00\u884c\u7684\u5b57\u7b26\u4e32\u79f0\u4f5c\u6587\u6863\u5b57\u7b26\u4e32 ... return x * x >>> square . __doc__ # \u8fd4\u56de\u51fd\u6570\u6587\u6863 '\u8ba1\u7b97x\u7684\u5e73\u65b9\u503c' >>> help ( square ) # \u8fd4\u56de\u51fd\u6570\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5305\u62ec\u51fd\u6570\u6587\u6863 Help on function square in module __main__ : square ( x ) \u8ba1\u7b97 x\u7684\u5e73\u65b9\u503c","title":"\u51fd\u6570\u6587\u6863"},{"location":"python/Basic_06/#_3","text":"","title":"\u53c2\u6570"},{"location":"python/Basic_06/#_4","text":">>> def change ( x ): ... x = x + 1 ... >>> x = 0 >>> change ( x ) >>> x # \u5e76\u4e0d\u4f1a\u6539\u53d8\u5916\u90e8\u503c 0 >>> def change ( x ): ... x [ 0 ] = x [ 0 ] + 1 ... >>> x = [ 0 ] >>> change ( x ) # \u5bf9\u4e8e\u6570\u7ec4\u8fdb\u884c\u5c40\u90e8\u4fee\u6539\u662f\u53ef\u884c\u7684 >>> x [ 1 ] >>> x = [ 0 ] >>> change ( x [:]) # \u4f20\u5165x\u7684\u526f\u672c\uff0c\u6b64\u65f6\u5185\u90e8\u53ea\u4fee\u6539\u526f\u672c\uff0c\u4e0d\u5f71\u54cd\u5185\u90e8 >>> x [ 0 ] >>> def inc ( x ): return x + 1 # \u5982\u679c\u5fc5\u9700\u8981\u6539\u53d8\u53c2\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u6539\u53d8\u540e\u7684\u503c\uff0c\u6216\u8005\u76f4\u63a5\u4f20\u5165\u6570\u7ec4 ... >>> inc ( 0 ) 1","title":"\u4fee\u6539\u53c2\u6570"},{"location":"python/Basic_06/#_5","text":">>> def hello ( greeting = \"hi\" , name = 'arnold' ): ... print ( '{}, {}!' . format ( greeting , name )) ... >>> hello ( 'hello' , 'bob' ) # \u901a\u8fc7\u4f4d\u7f6e\u6765\u4f20\u9012\u53c2\u6570 hello , bob ! >>> hello ( 'hello' , name = 'alice' ) # \u6df7\u5408\u4f7f\u7528\u4f4d\u7f6e\u548c\u5173\u952e\u5b57\u53c2\u6570\uff0c\u4f4d\u7f6e\u53c2\u6570\u5fc5\u987b\u5728\u524d\u9762\uff0c\u5426\u5219\u51fd\u6570\u65e0\u6cd5\u786e\u5b9a\u53c2\u6570 hello , alice ! >>> hello ( name = 'alice' ) # \u5bf9\u4e8e\u6709\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u7701\u7565 hi , alice ! >>> hello () hi , arnold !","title":"\u4f4d\u7f6e\u53c2\u6570\u548c\u5173\u952e\u5b57\u53c2\u6570"},{"location":"python/Basic_06/#_6","text":">>> def print_params ( x , y , z = 3 , * r1 , d , ** r2 ): # *r1\u7528\u4e8e\u6536\u96c6\u4f4d\u7f6e\u53c2\u6570\uff0c\u5728\u5176\u540e\u9762\u7684\u53c2\u6570\u5fc5\u987b\u662f\u5173\u952e\u5b57\u53c2\u6570\uff0c\u56e0\u6b64d\u5fc5\u987b\u7528\u5173\u952e\u5b57\u8d4b\u503c\uff0c\u800c**r2\u6536\u96c6\u6240\u6709\u5269\u4f59\u5173\u952e\u5b57\u53c2\u6570 ... print ( x , y , z ) ... print ( r1 ) ... print ( d ) ... print ( r2 ) ... >>> print_params ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , d = 19 , foo = 1 , bar = 2 , sth = \"hh\" ) 1 2 3 ( 4 , 5 , 6 , 7 , 8 ) 19 { 'foo' : 1 , 'bar' : 2 , 'sth' : 'hh' }","title":"\u6536\u96c6\u53c2\u6570"},{"location":"python/Basic_06/#_7","text":"\u5f53\u6211\u4eec\u6709\u591a\u4e2a\u53c2\u6570\u9700\u8981\u4f20\u9012\u503c\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u5e8f\u5217\u6216\u8005\u5b57\u5178\uff0c\u7136\u540e\u7528\u524d\u9762\u63d0\u5230\u7684 \u548c *\u8fdb\u884c\u53cd\u5411\u64cd\u4f5c\uff0c\u5c06\u4e0d\u540c\u7684\u503c\u5206\u914d\u5230\u4e0d\u540c\u7684\u53c2\u6570\u4e2d\u3002\u4f46\u662f\uff0c\u5982\u679c\u51fd\u6570\u672c\u8eab\u4f7f\u7528\u4e86\u6536\u96c6\u53c2\u6570\uff0c\u90a3\u4e48\u5c31\u6ca1\u5fc5\u8981\u4f7f\u7528\u5206\u914d\u53c2\u6570\u4e86\uff0c\u8fd9\u6837\u53ef\u80fd\u6bd4\u76f4\u63a5\u4f20\u5165\u5e8f\u5217\u548c\u5b57\u5178\u66f4\u52a0\u9ebb\u70e6\u3002 >>> def with_stars ( ** kwd ): ... print ( kwd [ 'name' ], 'is' , kwd [ 'age' ], 'years old.' ) ... >>> def without_stars ( kwd ): ... print ( kwd [ 'name' ], 'is' , kwd [ 'age' ], 'years old.' ) ... >>> args = { \"name\" : \"bob\" , \"age\" : 12 } >>> with_stars ( ** args ) # \u5c06\u5b57\u5178\u89e3\u5305\u5206\u914d\u5230\u4e24\u4e2a\u53c2\u6570\u4e2d\uff0c\u7136\u540e\u518d\u653e\u5165\u5f62\u53c2\u4e2d bob is 12 years old . >>> without_stars ( args ) # \u76f4\u63a5\u4f20\u5b57\u5178\u8fdb\u5165\u51fd\u6570 bob is 12 years old . >>> def add ( a , b ): ... return a + b >>> args = ( 2 , 3 ) >>> add ( * args ) # \u89e3\u5305\u5e76\u5206\u914d\u53c2\u6570\u5230a,b 5","title":"\u5206\u914d\u53c2\u6570"},{"location":"python/Basic_06/#_8","text":">>> x = 1 >>> scope = vars () # \u8fd4\u56de\u5168\u5c40\u53d8\u91cf\u5b9a\u4e49\u57df\u5b57\u5178 >>> scope [ 'x' ] 1 >>> scope [ 'x' ] += 1 >>> x # \u6700\u597d\u4e0d\u8981\u76f4\u63a5\u64cd\u4f5c\u4f5c\u7528\u57df\u7684\u503c 2 >>> def foo (): x = 42 # \u521b\u5efa\u4e86\u5c40\u90e8\u53d8\u91cfx\uff0c\u6b64\u65f6\u5c5e\u4e8e\u53e6\u4e00\u4e2a\u4f5c\u7528\u57df ... >>> x = 1 >>> foo () # \u5e76\u4e0d\u4f1a\u6539\u53d8\u5168\u5c40\u53d8\u91cfx >>> x 1 >>> def combine ( parameter ): print ( parameter + external ) # \u5c40\u90e8\u4f5c\u7528\u57df\u53ef\u4ee5\u8bbf\u95ee\u5230\u5168\u5c40\u4f5c\u7528\u57df ... >>> external = 'berry' >>> combine ( \"hi \" ) hi berry >>> def combine ( parameter ): print ( parameter + globals ()[ 'parameter' ]) # \u5982\u679c\u5c40\u90e8\u53d8\u91cf\u540d\u4e0e\u5168\u5c40\u53d8\u91cf\u540d\u51b2\u7a81\uff0c\u53ef\u4ee5\u901a\u8fc7globals()\u83b7\u53d6\u5168\u5c40\u4f5c\u7528\u57df\u5b57\u5178\uff0c\u7136\u540e\u53d6\u51fa\u5bf9\u5e94\u7684\u503c\u3002\uff08\u76f8\u5bf9\u5e94\u7684\u5c40\u90e8\u4f5c\u7528\u57df\u5b57\u5178\u4e3alocals()\uff09 ... >>> parameter = \"berry\" >>> combine ( \"Straw\" ) Strawberry >>> x = 1 >>> def inc (): ... global x # \u5982\u679c\u60f3\u4fee\u6539\u5916\u90e8\u53d8\u91cf\u6216\u8005\u83b7\u53d6\u5916\u90e8\u53d8\u91cf\uff0c\u53ef\u76f4\u63a5\u58f0\u660e\u4e3aglobal ... x = x + 1 ... >>> inc () >>> x 2","title":"\u4f5c\u7528\u57df"},{"location":"python/Basic_06/#_9","text":">>> def multiplier ( factor ): ... def multiplyByFactor ( number ): # \u8be5\u51fd\u6570\u643a\u5e26\u7740\u5916\u90e8\u51fd\u6570\u7684\u4f5c\u7528\u57df\uff0c\u79f0\u4e4b\u4e3a\u95ed\u5305 ... return number * factor ... return multiplyByFactor ... >>> double = multiplier ( 2 ) >>> double ( 10 ) 20 >>> triple = multiplier ( 3 ) >>> triple ( 4 ) 12 >>> def multiplier ( factor ): ... print ( '1' , locals ()) ... def multiplyByFactor ( number ): ... print ( '2' , locals ()) ... return number * factor ... return multiplyByFactor ... >>> double = multiplier ( 2 ) 1 { 'factor' : 2 } >>> double ( 2 ) 2 { 'number' : 2 , 'factor' : 2 } 4 >>> double ( 10 ) # \u53ef\u8bbf\u95ee\u5916\u5c42\u51fd\u6570\u7684\u4f5c\u7528\u57df\uff0c\u4ece\u800c\u83b7\u5f97\u66f4\u52a0\u52a8\u6001\u7684\u51fd\u6570\u7279\u6027 2 { 'number' : 10 , 'factor' : 2 } 20 >>> def multiplier ( factor ): ... print ( '1' , locals ()) ... def multiplyByFactor ( number ): ... nonlocal factor # \u5b9a\u4e49\u5916\u90e8\u53d8\u91cfnonlocal ... factor += 3 ... print ( '2' , locals ()) ... return number * factor ... return multiplyByFactor ... >>> test = multiplier ( 0 ) 1 { 'factor' : 0 } >>> test ( 2 ) # \u8fd9\u91cc\u5916\u90e8\u53d8\u91cf\u88ab\u4fee\u6539 2 { 'number' : 2 , 'factor' : 3 } 6","title":"\u95ed\u5305"},{"location":"python/Basic_06/#_10","text":"\u9012\u5f52\u51fd\u6570\u901a\u5e38\u5305\u62ec\u4e24\u4e2a\u90e8\u5206\uff1a \u57fa\u7ebf\u6761\u4ef6\uff08\u9488\u5bf9\u6700\u5c0f\u7684\u95ee\u9898\uff09\uff1a\u6ee1\u8db3\u8fd9\u79cd\u6761\u4ef6\u65f6\u51fd\u6570\u5c06\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u503c\u3002 \u9012\u5f52\u6761\u4ef6\uff1a\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u8c03\u7528\uff0c\u8fd9\u4e9b\u8c03\u7528\u65e8\u5728\u89e3\u51b3\u95ee\u9898\u7684\u4e00\u90e8\u5206\u3002","title":"\u9012\u5f52"},{"location":"python/Basic_06/#_11","text":"","title":"\u9636\u4e58\u548c\u5e42"},{"location":"python/Basic_06/#_12","text":"\u5b9a\u4e49\uff1a 1\u7684\u9636\u4e58\u4e3a1 \u5bf9\u4e8en>1, n\u7684\u9636\u4e58\u7b49\u4e8e(n-1)\u7684\u9636\u4e58\u4e58\u4ee5n >>> def factorial ( n ): ... if ( n == 1 ): return 1 ... else : return n * factorial ( n - 1 ) ... >>> factorial ( 4 ) 24","title":"\u9636\u4e58"},{"location":"python/Basic_06/#_13","text":"\u5b9a\u4e49\uff1a x\u76840\u6b21\u5e42\u4e3a1 n>0, pow(x,n)\u4e3apow(x,n-1)*x >>> def pow ( x , n ): ... if n == 0 : return 1 ... else : return x * pow ( x , n - 1 ) ... >>> pow ( 2 , 3 ) 8 \u9012\u5f52\u5f3a\u5728\u6613\u8bfb\u6027\uff0c\u4f46\u662f\u6027\u80fd\u6bd4\u4e0d\u4e0a\u5faa\u73af\u3002\u6bcf\u4e00\u6b21\u8fd4\u56de\u81ea\u8eab\uff0c\u90fd\u662f\u5b9a\u4e49\u4e0d\u540c\u7248\u672c\uff08\u4e0d\u540c\u4f5c\u7528\u57df\uff09\u7684\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u5c31\u50cf\u662f\u4e24\u4e2a\u540c\u7c7b\u7684\u52a8\u7269\u5728\u4ea4\u6d41\u3002","title":"\u5e42"},{"location":"python/Basic_06/#mapfilterreduce","text":">>> data = [ 1 , 2 , 3 , 4 , 5 ] >>> list ( map ( str , data )) # Python3\u4e2dmap,filter\u8fd4\u56de\u7684\u662f\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\u3002map\u7528\u4e8e\u5c06\u51fd\u6570\u4f5c\u7528\u4e8e\u5e8f\u5217 [ '1' , '2' , '3' , '4' , '5' ] >>> list ( filter ( lambda x : x > 3 , data )) # filter\u7528\u4e8e\u7b5b\u51fa\u7b26\u5408\u6761\u4ef6\u7684\u6570\u636e [ 4 , 5 ] >>> from functools import reduce # \u7531\u4e8ereduce\u7528\u5904\u4e0d\u5927\u4e14\u4e0d\u6613\u7406\u89e3\uff0c\u9f9f\u53d4\u628a\u5b83\u4ecepython3\u7684\u5185\u5efa\u51fd\u6570\u4e2d\u79fb\u9664\u4e86\uff0c\u60f3\u7528\u7684\u8bdd\u9700\u8981\u4ecefunctools\u91cc\u5f15\u7528 >>> reduce ( lambda x , y : x + y , data ) # reduce\u7528\u4e8e\u7d2f\u8ba1\u4f5c\u7528\u51fd\u6570\u4e8e\u6574\u4e2a\u5e8f\u5217 15 >>> from operator import add >>> reduce ( add , data ) 15","title":"\u51fd\u6570\u5f0f\u7f16\u7a0b\uff1amap,filter,reduce"},{"location":"python/Basic_07/","text":"\u518d\u8c08\u62bd\u8c61 \u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u6cd5\u5b9d \u591a\u6001 \u5f53\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u83b7\u53d6\u5546\u54c1\u4ef7\u683c\u7684\u51fd\u6570\u65f6\uff0c\u7531\u4e8e\u65e0\u6cd5\u786e\u5b9a\u73b0\u5b9e\u4e2d\u8f93\u5165\u7684\u4ef7\u683c\u8868\u793a\u5f62\u5f0f\u662f\u600e\u4e48\u6837\uff08\u6bd4\u5982\u53ef\u80fd\u662f\u5143\u7ec4\uff0c\u5b57\u5178\uff0c\u5217\u8868\uff09\uff0c\u90a3\u4e48\u4f60\u53ef\u80fd\u9700\u8981\u5199\u591a\u6b21\u5224\u65ad\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u540c\u65f6\u65e0\u6cd5\u5bf9\u672a\u77e5\u60c5\u51b5\u8fdb\u884c\u63d0\u524d\u9884\u4f30\u3002\u6211\u4eec\u9700\u8981\u7684\u662f\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u5bf9\u8c61\u7684\u4ef7\u683c\uff0c\u800c\u4e0d\u7ba1\u5176\u7c7b\u578b\u5982\u4f55\uff0c\u8fd9\u79cd\u4e0d\u5173\u5fc3\u5bf9\u8c61\u5982\u4f55\u5b9e\u73b0\u7684\u7f16\u7a0b\u65b9\u5f0f\uff0c\u5c31\u662f\u591a\u6001\u3002\u53ef\u4ee5\u770b\u770b\u4ee5\u4e0b\u51e0\u4e2a\u4f8b\u5b50\uff1a >>> from random import choice >>> x = choice ([ 'hello world' ,[ 1 , 2 , 'e' , 3 , 'e' , 4 ]]) # choice\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u5143\u7d20\u8f93\u51fa >>> x . count ( 'e' ) # count\u65b9\u6cd5\u5b9e\u73b0\u4e86\u591a\u6001\uff0c\u53ef\u4ee5\u5bf9\u5404\u79cd\u5e8f\u5217\u548c\u6620\u5c04\u8fdb\u884c\u8ba1\u6570\u800c\u4e0d\u5173\u5fc3\u5176\u7c7b\u578b 1 >>> x = choice ([ 'hello world' ,[ 1 , 2 , 'e' , 3 , 'e' , 4 ]]) >>> x . count ( 'e' ) 2 >>> def len_msg ( x ): ... print ( \"The length of\" , repr ( x ), 'is' , len ( x )) # repr,len\u4e5f\u5b9e\u73b0\u4e86\u591a\u6001\uff0c\u53ef\u4ee5\u663e\u793a\u4e0d\u540c\u7c7b\u578b\u5143\u7d20\u7684\u5904\u7406 ... >>> len_msg ( 'ssldl' ) The length of 'ssldl' is 5 >>> len_msg ([ 1 , 3 , 4 ]) The length of [ 1 , 3 , 4 ] is 3 >>> len_msg ({ 1 : 2 , 2 : 3 }) The length of { 1 : 2 , 2 : 3 } is 2 \u5c01\u88c5 >>> o = OpenObject () # \u8fd9\u662f\u4e00\u4e2a\u672a\u5c01\u88c5\u7c7b\uff0c\u5bf9\u8c61\u53ef\u4ee5\u4fee\u6539\u548c\u83b7\u53d6\u5168\u5c40\u53d8\u91cf >>> o . set_name ( 'Sir Lancelot' ) >>> o . get_name () 'Sir Lancelot' >>> global_name # \u5168\u5c40\u53d8\u91cf 'Sir Lancelot' >>> global_name = 'Sir Gumby' >>> o . get_name () # \u4fee\u6539\u5168\u5c40\u53d8\u91cf\u4f1a\u5f71\u54cd\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u8c61\u72ec\u7acb 'Sir Gumby >>> o1 = OpenObject () >>> o2 = OpenObject () >>> o1 . set_name ( 'Robin Hood' ) >>> o2 . get_name () # \u8fd9\u91cc\u8bbe\u7f6e\u7b2c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u540c\u65f6\u8fd8\u5f71\u54cd\u4e86\u7b2c\u4e8c\u4e2a\u5bf9\u8c61 'Robin Hood' >>> c = ClosedObject () # \u8fd9\u662f\u4e00\u4e2a\u5c01\u88c5\u597d\u7684\u7c7b\u578b >>> c . set_name ( 'Sir Lancelot' ) >>> c . get_name () 'Sir Lancelot >>> r = ClosedObject () >>> r . set_name ( 'Sir Robin' ) r . get_name () 'Sir Robin' >>> c . get_name () # \u5bf9\u8c61c\u672a\u53d7\u5f71\u54cd\uff0c\u5404\u5bf9\u8c61\u72ec\u7acb\u64cd\u4f5cname\uff0c\u8fd9\u79cd\u5c01\u88c5\u8d77\u6765\u7684\u540d\u79f0\u53eb\u505a\u5c5e\u6027\uff0c\u5c5e\u6027\u662f\u5f52\u5c5e\u4e8e\u5bf9\u8c61\u7684\u53d8\u91cf\uff0c\u5bf9\u8c61\u7531\u5c01\u88c5\u8d77\u6765\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u6784\u6210 'Sir Lancelot' \u7ee7\u627f \u5f53\u6211\u4eec\u62e5\u6709\u4e00\u4e2a\u57fa\u7840\u7c7b\uff0c\u540c\u65f6\u9700\u8981\u5199\u4e00\u4e2a\u65b0\u7684\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u53ea\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u505a\u51fa\u4e00\u4e9b\u4e2a\u6027\u5316\u6539\u52a8\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528\u5230\u7ee7\u627f\u3002\u6bd4\u5982\u4f60\u6709\u4e2aShape\u7c7b\uff0c\u53ef\u4ee5\u8ba1\u7b97\u9762\u79ef\uff0c\u5e76\u753b\u51fa\u56fe\u5f62\u3002\u4f60\u60f3\u5b9e\u73b0\u4e00\u4e2aRectangle\u7c7b\uff0c\u5b83\u8ba1\u7b97\u9762\u79ef\u7684\u65b9\u6cd5\u9700\u8981\u4e2a\u6027\u5316\u4fee\u6539\uff0c\u4f46\u662fdraw\u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528Shape\u7c7b\u7684\uff0c\u8fd9\u5c31\u53ef\u4ee5\u76f4\u63a5\u5bf9Shape\u7c7b\u8fdb\u884c\u7ee7\u627f\u3002 \u7c7b >>> class Person : ... def set_name ( self , name ): ... self . name = name ... def get_name ( self ): ... return self . name ... def greet ( self ): ... print ( \"Hello,world! I'm {}.\" . format ( self . name )) ... >>> foo = Person () >>> bar = Person () >>> foo . set_name ( 'steve jobs' ) >>> bar . set_name ( 'bill gates' ) >>> foo . greet () Hello , world ! I 'm steve jobs. >>> bar . greet () Hello , world ! I 'm bill gates. >>> foo . name # \u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u5e76\u4fee\u6539 'steve jobs' >>> bar . name = 'Ian Goodfellow' >>> bar . greet () Hello , world ! I 'm Ian Goodfellow. >>> Person . greet ( foo ) # foo.greet()\u76f8\u5f53\u4e8e\u5c06foo\u4f20\u5165\u5230\u7c7b\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4e0e\u8fd9\u4e00\u53e5\u7b49\u4ef7 Hello , world ! I 'm steve jobs. \u5c5e\u6027\u3001\u51fd\u6570\u548c\u65b9\u6cd5 \u51fd\u6570\u4e0e\u65b9\u6cd5\u7684\u533a\u522b\u662f\uff1a\u65b9\u6cd5\u5173\u8054\u5bf9\u8c61\uff0c\u51fd\u6570\u4e0d\u4f1a\u3002 \u518d\u8c08\u9690\u85cf \u524d\u9762\u63d0\u5230\u7684\u4f8b\u5b50\u91cc\uff0cname\u5c5e\u6027\u53ef\u4ee5\u5728\u5916\u90e8\u88ab\u4fee\u6539\uff0c\u8fd9\u6837\u662f\u4e0d\u5b89\u5168\u7684\u3002\u6bd4\u5982\uff0c\u5f53\u4f60\u6267\u884cset_name\u4e0d\u4ec5\u4fee\u6539\u4e86\u540d\u5b57\uff0c\u540c\u65f6\u4f1a\u5411\u7ba1\u7406\u5458\u53d1\u90ae\u4ef6\uff0c\u4f46\u662f\u5982\u679c\u76f4\u63a5\u8fdb\u884c\u59d3\u540d\u4fee\u6539\uff0c\u5219\u4e0d\u4f1a\u89e6\u53d1\u8fd9\u6837\u7684\u64cd\u4f5c\u3002\u4e3a\u4e86\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\uff0cPython\u63d0\u4f9b\u4e86\u4e00\u79cd\u541b\u5b50\u534f\u5b9a\uff0c\u5728\u5c5e\u6027\u6216\u65b9\u6cd5\u524d\u52a0\u4e0a __ \u5c31\u53ef\u4ee5\u8ba9\u5916\u90e8\u65e0\u6cd5\u8fdb\u884c\u76f4\u63a5\u8bbf\u95ee\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a >>> class Sec : ... def __init__ ( self ): ... self . __name = \"steve\" # \u8fd9\u91cc\u7684name\u58f0\u660e\u4e3a\u79c1\u6709\u53d8\u91cf ... def __greet_sec ( self ): # \u79c1\u6709\u65b9\u6cd5 ... print ( \"hello,{}\" . format ( self . __name )) ... def greet ( self ): ... self . __greet_sec () ... >>> foo = Sec () >>> foo . __name # \u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee AttributeError : 'Sec' object has no attribute '__name' >>> foo . _Sec__name # \u5176\u5b9ePython\u53ea\u662f\u5c06\u5176\u6362\u4e86\u4e2a\u540d\u5b57 'steve' >>> foo . __greet_sec AttributeError : 'Sec' object has no attribute '__greet_sec' >>> foo . _Sec__greet_sec < bound method Sec . __greet_sec of < __main__ . Sec object at 0x0000025F51C0C7B8 >> >>> foo . greet () # \u53ef\u4ee5\u901a\u8fc7\u5bf9\u5916\u5f00\u653e\u7684\u63a5\u53e3\u8c03\u7528 hello , steve \u6211\u4eec\u8fd8\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u4e0b\u5212\u7ebf\u6253\u5934\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u8fd9\u79cd\u5916\u90e8\u53ef\u4ee5\u8c03\u7528\uff0c\u4f46\u662f\u4e0d\u63a8\u8350\u8fd9\u6837\u505a\uff0c\u7528import * \u7684\u65f6\u5019\u4e5f\u4e0d\u4f1a\u88ab\u5bfc\u5165\u3002 \u7c7b\u7684\u547d\u540d\u7a7a\u95f4 \u5176\u5b9e\u7c7b\u7684\u5b9a\u4e49\u5c31\u662f\u6267\u884c\u58f0\u660e\u4e0b\u7684\u6240\u6709\u4ee3\u7801\uff0c\u8fd9\u4e9b\u4ee3\u7801\u4f5c\u7528\u5728\u4e00\u4e2a\u7279\u5b9a\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u4e5f\u5c31\u662f\u7c7b\u7684\u547d\u540d\u7a7a\u95f4\uff1a >>> class Test : ... print ( \"class Test is defined...\" ) # \u7c7b\u7684\u5b9a\u4e49\u53ea\u662f\u6267\u884c\u4e86\u5185\u90e8\u7684\u4ee3\u7801\u800c\u5df2\uff0c\u5e76\u4e0d\u9700\u8981\u4e00\u5b9a\u6709def\u7b49\u51fd\u6570\u5b9a\u4e49\u3002 ... class Test is defined ... \u800c\u5bf9\u4e8e\u7c7b\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u5168\u5c40\u53d8\u91cf\u4e0e\u5c40\u90e8\u53d8\u91cf\u7684\u5173\u7cfb\u5982\u4e0b\uff1a >>> class Counter : ... member = 0 ... def init ( self ): ... Counter . member += 1 # \u5bf9\u5168\u5c40\u53d8\u91cf\u8fdb\u884c\u66f4\u6539 ... >>> m1 = Counter () >>> m1 . init () >>> Counter . member 1 >>> m2 = Counter () >>> m2 . init () >>> Counter . member # \u4ecd\u7136\u4f5c\u7528\u5728\u5168\u5c40\u53d8\u91cf\u4e0a 2 >>> m1 . member = 'two' # \u4f5c\u7528\u4e8e\u5c40\u90e8\u53d8\u91cf >>> m1 . member 'two' >>> m2 . member 2 >>> Counter . member 2 \u6307\u5b9a\u8d85\u7c7b >>> class Filter : ... def init ( self ): ... self . blocked = [] ... def filter ( self , sequence ): ... return [ x for x in sequence if x not in self . blocked ] ... >>> >>> class SPAMFilter ( Filter ): #\u7528\u5706\u62ec\u53f7\u62ec\u8d77\u6765\u8868\u793a\u7ee7\u627f\u8d85\u7c7b ... def init ( self ): # \u5bf9init\u8fdb\u884c\u6539\u5199 ... self . blocked = [ 'SPAM' ] ... >>> f = Filter () # \u53ef\u4ee5\u91cd\u5199\u4e3a\u4efb\u4f55\u8fc7\u6ee4\u5668 >>> f . init () >>> f . filter ([ 1 , 2 , 3 ]) [ 1 , 2 , 3 ] >>> s = SPAMFilter () >>> s . init () # \u6b64\u5904\u7ecf\u8fc7\u91cd\u5199\uff0c\u4f7f\u5f97\u8be5\u7c7b\u6210\u4e3a\u7279\u5b9a\u7528\u9014\u7684\u8fc7\u6ee4\u5668 >>> s . filter ([ 'SPAM' , 'SPAM' , 'SPAM' , 'SPAM' , 'eggs' , 'bacon' , 'SPAM' ]) # \u76f4\u63a5\u4f7f\u7528\u8d85\u7c7b\u7684filter\u51fd\u6570\uff0c\u4e0d\u7528\u518d\u6b21\u7f16\u5199 [ 'eggs' , 'bacon' ] \u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u5224\u65ad\u7ee7\u627f\u5173\u7cfb\uff1a >>> issubclass ( SPAMFilter , Filter ) # \u68c0\u6d4bA\u662f\u5426\u662fB\u7684\u5b50\u7c7b True >>> issubclass ( Filter , SPAMFilter ) False >>> SPAMFilter . __bases__ # \u8fd4\u56de\u7c7b\u7684\u8d85\u7c7b ( < class ' __main__ . Filter '>,) >>> Filter . __bases__ ( < class ' object '>,) >>> s = SPAMFilter () >>> isinstance ( s , SPAMFilter ) # \u5224\u65ada\u662f\u5426\u662fB\u7c7b\u7684\u5b9e\u4f8b True >>> isinstance ( s , Filter ) # s\u65e2\u662fSPAMFilter\u7684\u5b9e\u4f8b\uff0c\u4e5f\u662f\u5176\u8d85\u7c7b\u7684\u5b9e\u4f8b\u3002 True >>> isinstance ( s , list ) # \u8be5\u51fd\u6570\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u7c7b\u578b False >>> s . __class__ < class ' __main__ . SPAMFilter '> >>> type ( s ) < class ' __main__ . SPAMFilter '> \u591a\u4e2a\u8d85\u7c7b >>> class Calculator : ... def calc ( self , exp ): ... self . value = eval ( exp ) >>> class Talker : ... def talk ( self ): ... print ( 'Hi,my value is' , self . value ) ... >>> class TalkCalc ( Calculator , Talker ): # \u8fd9\u91cc\u7ee7\u627f\u4e86\u4e24\u4e2a\u8d85\u7c7b\uff0c\u867d\u7136\u7c7b\u91cc\u9762\u6ca1\u6709\u4efb\u4f55\u4ee3\u7801\uff0c\u4f46\u662f\u5177\u6709\u4e24\u4e2a\u8d85\u7c7b\u7684\u529f\u80fd ... pass ... >>> tc = TalkCalc () >>> tc . calc ( '1+2*3' ) >>> tc . talk () Hi , my value is 7 \u5f53\u6709\u591a\u4e2a\u8d85\u7c7b\u7684\u65f6\u5019\uff0c\u987a\u5e8f\u5c31\u5f88\u91cd\u8981\u4e86\uff0c\u540e\u9762\u7684\u8d85\u7c7b\u5982\u679c\u4e0e\u524d\u9762\u7684\u91cd\u540d\uff0c\u5c31\u4f1a\u88ab\u8986\u76d6\u6389\u3002\u4e00\u822c\u4e0d\u5efa\u8bae\u5199\u5f88\u591a\u8d85\u7c7b\u3002 \u63a5\u53e3 Python\u4e0d\u4f1a\u663e\u793a\u5b9a\u4e49\u63a5\u53e3\uff0c\u4f46\u662f\u53ef\u4ee5\u5224\u65ad\u5bf9\u8c61\u662f\u5426\u5177\u6709\u67d0\u4e9b\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u63a5\u53e3\u9488\u5bf9\u7684\u5c31\u662f\u591a\u6001\u3002\u603b\u4f53\u5982\u4e0b\uff1a >>> hasattr ( tc , 'talk' ) # \u5224\u65ad\u662f\u5426\u5177\u6709\u67d0\u4e2a\u5c5e\u6027\u6216\u65b9\u6cd5 True >>> hasattr ( tc , 'fnord' ) False >>> callable ( getattr ( tc , 'talk' , None )) # \u83b7\u53d6\u5c5e\u6027\uff0c\u5982\u679c\u6ca1\u6709\u5219\u8fd4\u56deNone True >>> callable ( getattr ( tc , 'fnord' , None )) False >>> setattr ( tc , 'name' , 'Steve' ) # \u6dfb\u52a0\u5c5e\u6027 >>> tc . name 'Steve' >>> tc . __dict__ # \u67e5\u770b\u5bf9\u8c61\u5b58\u50a8\u7684\u5c5e\u6027 { 'value' : 7 , 'name' : 'Steve' } \u62bd\u8c61\u57fa\u7c7b \u591a\u6001\u5b9e\u73b0\u4e86\u53ea\u8981\u63d0\u4f9b\u7279\u5b9a\u529f\u80fd\u63a5\u53e3\uff0c\u5c31\u80fd\u5bf9\u4efb\u610f\u5bf9\u8c61\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\uff0c\u4e0d\u9700\u8981\u77e5\u9053\u5bf9\u8c61\u5c5e\u4e8e\u54ea\u4e00\u7c7b\u3002\u5c01\u88c5\u53ef\u4ee5\u8ba9\u4f60\u4e0d\u9700\u8981\u77e5\u9053\u5bf9\u8c61\u7684\u5185\u90e8\u6784\u9020\uff0c\u5c31\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u8fdb\u884c\u64cd\u4f5c\u3002\u800c\u7ee7\u627f\u4f7f\u5f97\u4ee3\u7801\u80fd\u591f\u91cd\u590d\u5229\u7528\u3002\u524d\u9762\u63d0\u5230\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u77e5\u9053\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u5177\u6709\u6211\u4eec\u60f3\u8981\u7684\u529f\u80fd\uff08\u6bd4\u5982\u7a7a\u8c03\u80fd\u5426\u5236\u70ed\uff0c\u5236\u51b7\uff0c\u52a0\u6e7f\u7b49\uff09\uff0c\u9700\u8981\u4e00\u4e2a\u4e2a\u53bb\u68c0\u6d4b\u3002\u6709\u6ca1\u6709\u4e00\u79cd\u81ea\u52a8\u64cd\u4f5c\u7684\u65b9\u5f0f\u5462\uff1f\u8fd9\u4e2a\u5c31\u9700\u8981\u5229\u7528\u62bd\u8c61\u57fa\u7c7b\u4e86\u3002\u8fd9\u5c31\u597d\u6bd4\u5982\u679c\u7a7a\u8c03\u4e0a\u7684\u6309\u94ae\u6ca1\u6709\u4efb\u4f55\u8bf4\u660e\uff0c\u6ca1\u6709\u4efb\u4f55\u6807\u8bb0\uff0c\u90a3\u4e48\u4f60\u5c31\u53ea\u80fd\u4e00\u4e2a\u4e2a\u8bd5\uff0c\u770b\u770b\u6709\u6ca1\u6709\u76f8\u5e94\u7684\u6548\u679c\u3002\u4f46\u662f\u5982\u679c\u6240\u6709\u529f\u80fd\u90fd\u4e00\u4e2a\u4e2a\u6807\u6ce8\u5728\u4e0a\u9762\u4e86\uff0c\u4f60\u5c31\u53ea\u9700\u8981\u770b\u4e00\u773c\u5c31\u77e5\u9053\u6709\u54ea\u4e9b\u529f\u80fd\u4e86\u3002\u4e00\u822c\u800c\u8a00\uff0c\u62bd\u8c61\u7c7b\u4e0d\u5e94\u8be5\u5b9e\u4f8b\u5316\uff0c\u800c\u53ea\u662f\u5b9a\u4e49\u4e00\u7ec4\u65b9\u6cd5\uff08\u53ea\u9700\u8981\u5728\u5404\u4e2a\u529f\u80fd\u6309\u94ae\u4e0b\u5199\u4e0a\u529f\u80fd\u540d\u79f0\uff0c\u800c\u4e0d\u7528\u5355\u72ec\u7528\u65b0\u7684\u6309\u94ae\u6309\u4e0b\u53bb\u518d\u663e\u793a\uff09\u3002Python\u63d0\u4f9b\u4e86abc\u6a21\u5757\uff0c\u4ee5\u4e0b\u5c31\u662f\u5176\u4f7f\u7528\u65b9\u6cd5\uff1a >>> from abc import ABC , abstractmethod >>> class Talker ( ABC ): ... @abstractmethod # \u4fee\u9970\u5668\uff0c\u7528\u4e8e\u58f0\u660e\u62bd\u8c61\u65b9\u6cd5 ... def talk ( self ): ... pass ... >>> Talker () # \u62bd\u8c61\u7c7b\u4e0d\u80fd\u5b9e\u4f8b\u5316 TypeError : Can 't instantiate abstract class Talker with abstract methods talk >>> class Knigget ( Talker ): ... pass # \u6ca1\u6709\u91cd\u5199\u62bd\u8c61\u65b9\u6cd5\uff0c\u56e0\u6b64\u4e5f\u662f\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u5b9e\u4f8b\u5316 ... >>> Knigget () TypeError : Can 't instantiate abstract class Knigget with abstract methods talk >>> class Knigget ( Talker ): ... def talk ( self ): ... print ( \"Ni\" ) ... >>> k = Knigget () >>> k . talk () Ni >>> isinstance ( k , Talker ) True >>> class Herring : ... def talk ( self ): ... print ( \"Blub.\" ) ... >>> h = Herring () >>> isinstance ( h , Talker ) # h\u5e76\u6ca1\u6709\u7ee7\u627fTalker False >>> Talker . register ( Herring ) # \u901a\u8fc7register\u53ef\u4ee5\u4f7f\u4efb\u4f55Herring\u7c7b\u540c\u65f6\u90fd\u662fTalker\u7c7b\uff0c\u8fd9\u5728\u5f53Herring\u662f\u4ece\u5176\u4ed6\u6a21\u5757\u5bfc\u5165\uff0c\u4f60\u4e0d\u80fd\u5c06\u5176\u4ece\u57fa\u7c7b\u6d3e\u751f\u65f6\u5f88\u6709\u7528\u3002 < class ' __main__ . Herring '> >>> isinstance ( h , Talker ) True >>> issubclass ( Herring , Talker ) True >>> class Clam : ... pass ... >>> Talker . register ( Clam ) < class ' __main__ . Clam '> >>> c = Clam () # register\u7684\u5f0a\u7aef\u5c31\u662f\uff0c\u4e27\u5931\u4e86\u7c7b\u7684\u7ee7\u627f\u673a\u5236\u3002\u53ea\u662f\u5e0c\u671bClam\u6709talk\u529f\u80fd\uff0c\u4f46\u662f\u4e8b\u5b9e\u4e0a\u5b83\u6ca1\u6709 >>> c . talk () AttributeError : 'Clam' object has no attribute 'talk' >>> isinstance ( c , Talker ) # c\u4ecd\u7136\u662fTalker\u7684\u5b9e\u4f8b\uff0c\u8fd9\u662f\u901a\u8fc7register\u5b9e\u73b0\u7684 True","title":"\u57fa\u7840\u603b\u7ed3(\u4e03)-\u9762\u5411\u5bf9\u8c61"},{"location":"python/Basic_07/#_1","text":"","title":"\u518d\u8c08\u62bd\u8c61"},{"location":"python/Basic_07/#_2","text":"","title":"\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u6cd5\u5b9d"},{"location":"python/Basic_07/#_3","text":"\u5f53\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u83b7\u53d6\u5546\u54c1\u4ef7\u683c\u7684\u51fd\u6570\u65f6\uff0c\u7531\u4e8e\u65e0\u6cd5\u786e\u5b9a\u73b0\u5b9e\u4e2d\u8f93\u5165\u7684\u4ef7\u683c\u8868\u793a\u5f62\u5f0f\u662f\u600e\u4e48\u6837\uff08\u6bd4\u5982\u53ef\u80fd\u662f\u5143\u7ec4\uff0c\u5b57\u5178\uff0c\u5217\u8868\uff09\uff0c\u90a3\u4e48\u4f60\u53ef\u80fd\u9700\u8981\u5199\u591a\u6b21\u5224\u65ad\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u540c\u65f6\u65e0\u6cd5\u5bf9\u672a\u77e5\u60c5\u51b5\u8fdb\u884c\u63d0\u524d\u9884\u4f30\u3002\u6211\u4eec\u9700\u8981\u7684\u662f\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u5bf9\u8c61\u7684\u4ef7\u683c\uff0c\u800c\u4e0d\u7ba1\u5176\u7c7b\u578b\u5982\u4f55\uff0c\u8fd9\u79cd\u4e0d\u5173\u5fc3\u5bf9\u8c61\u5982\u4f55\u5b9e\u73b0\u7684\u7f16\u7a0b\u65b9\u5f0f\uff0c\u5c31\u662f\u591a\u6001\u3002\u53ef\u4ee5\u770b\u770b\u4ee5\u4e0b\u51e0\u4e2a\u4f8b\u5b50\uff1a >>> from random import choice >>> x = choice ([ 'hello world' ,[ 1 , 2 , 'e' , 3 , 'e' , 4 ]]) # choice\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u5143\u7d20\u8f93\u51fa >>> x . count ( 'e' ) # count\u65b9\u6cd5\u5b9e\u73b0\u4e86\u591a\u6001\uff0c\u53ef\u4ee5\u5bf9\u5404\u79cd\u5e8f\u5217\u548c\u6620\u5c04\u8fdb\u884c\u8ba1\u6570\u800c\u4e0d\u5173\u5fc3\u5176\u7c7b\u578b 1 >>> x = choice ([ 'hello world' ,[ 1 , 2 , 'e' , 3 , 'e' , 4 ]]) >>> x . count ( 'e' ) 2 >>> def len_msg ( x ): ... print ( \"The length of\" , repr ( x ), 'is' , len ( x )) # repr,len\u4e5f\u5b9e\u73b0\u4e86\u591a\u6001\uff0c\u53ef\u4ee5\u663e\u793a\u4e0d\u540c\u7c7b\u578b\u5143\u7d20\u7684\u5904\u7406 ... >>> len_msg ( 'ssldl' ) The length of 'ssldl' is 5 >>> len_msg ([ 1 , 3 , 4 ]) The length of [ 1 , 3 , 4 ] is 3 >>> len_msg ({ 1 : 2 , 2 : 3 }) The length of { 1 : 2 , 2 : 3 } is 2","title":"\u591a\u6001"},{"location":"python/Basic_07/#_4","text":">>> o = OpenObject () # \u8fd9\u662f\u4e00\u4e2a\u672a\u5c01\u88c5\u7c7b\uff0c\u5bf9\u8c61\u53ef\u4ee5\u4fee\u6539\u548c\u83b7\u53d6\u5168\u5c40\u53d8\u91cf >>> o . set_name ( 'Sir Lancelot' ) >>> o . get_name () 'Sir Lancelot' >>> global_name # \u5168\u5c40\u53d8\u91cf 'Sir Lancelot' >>> global_name = 'Sir Gumby' >>> o . get_name () # \u4fee\u6539\u5168\u5c40\u53d8\u91cf\u4f1a\u5f71\u54cd\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u8c61\u72ec\u7acb 'Sir Gumby >>> o1 = OpenObject () >>> o2 = OpenObject () >>> o1 . set_name ( 'Robin Hood' ) >>> o2 . get_name () # \u8fd9\u91cc\u8bbe\u7f6e\u7b2c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u540c\u65f6\u8fd8\u5f71\u54cd\u4e86\u7b2c\u4e8c\u4e2a\u5bf9\u8c61 'Robin Hood' >>> c = ClosedObject () # \u8fd9\u662f\u4e00\u4e2a\u5c01\u88c5\u597d\u7684\u7c7b\u578b >>> c . set_name ( 'Sir Lancelot' ) >>> c . get_name () 'Sir Lancelot >>> r = ClosedObject () >>> r . set_name ( 'Sir Robin' ) r . get_name () 'Sir Robin' >>> c . get_name () # \u5bf9\u8c61c\u672a\u53d7\u5f71\u54cd\uff0c\u5404\u5bf9\u8c61\u72ec\u7acb\u64cd\u4f5cname\uff0c\u8fd9\u79cd\u5c01\u88c5\u8d77\u6765\u7684\u540d\u79f0\u53eb\u505a\u5c5e\u6027\uff0c\u5c5e\u6027\u662f\u5f52\u5c5e\u4e8e\u5bf9\u8c61\u7684\u53d8\u91cf\uff0c\u5bf9\u8c61\u7531\u5c01\u88c5\u8d77\u6765\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u6784\u6210 'Sir Lancelot'","title":"\u5c01\u88c5"},{"location":"python/Basic_07/#_5","text":"\u5f53\u6211\u4eec\u62e5\u6709\u4e00\u4e2a\u57fa\u7840\u7c7b\uff0c\u540c\u65f6\u9700\u8981\u5199\u4e00\u4e2a\u65b0\u7684\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u53ea\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u505a\u51fa\u4e00\u4e9b\u4e2a\u6027\u5316\u6539\u52a8\uff0c\u6b64\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528\u5230\u7ee7\u627f\u3002\u6bd4\u5982\u4f60\u6709\u4e2aShape\u7c7b\uff0c\u53ef\u4ee5\u8ba1\u7b97\u9762\u79ef\uff0c\u5e76\u753b\u51fa\u56fe\u5f62\u3002\u4f60\u60f3\u5b9e\u73b0\u4e00\u4e2aRectangle\u7c7b\uff0c\u5b83\u8ba1\u7b97\u9762\u79ef\u7684\u65b9\u6cd5\u9700\u8981\u4e2a\u6027\u5316\u4fee\u6539\uff0c\u4f46\u662fdraw\u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528Shape\u7c7b\u7684\uff0c\u8fd9\u5c31\u53ef\u4ee5\u76f4\u63a5\u5bf9Shape\u7c7b\u8fdb\u884c\u7ee7\u627f\u3002","title":"\u7ee7\u627f"},{"location":"python/Basic_07/#_6","text":">>> class Person : ... def set_name ( self , name ): ... self . name = name ... def get_name ( self ): ... return self . name ... def greet ( self ): ... print ( \"Hello,world! I'm {}.\" . format ( self . name )) ... >>> foo = Person () >>> bar = Person () >>> foo . set_name ( 'steve jobs' ) >>> bar . set_name ( 'bill gates' ) >>> foo . greet () Hello , world ! I 'm steve jobs. >>> bar . greet () Hello , world ! I 'm bill gates. >>> foo . name # \u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u5e76\u4fee\u6539 'steve jobs' >>> bar . name = 'Ian Goodfellow' >>> bar . greet () Hello , world ! I 'm Ian Goodfellow. >>> Person . greet ( foo ) # foo.greet()\u76f8\u5f53\u4e8e\u5c06foo\u4f20\u5165\u5230\u7c7b\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4e0e\u8fd9\u4e00\u53e5\u7b49\u4ef7 Hello , world ! I 'm steve jobs.","title":"\u7c7b"},{"location":"python/Basic_07/#_7","text":"\u51fd\u6570\u4e0e\u65b9\u6cd5\u7684\u533a\u522b\u662f\uff1a\u65b9\u6cd5\u5173\u8054\u5bf9\u8c61\uff0c\u51fd\u6570\u4e0d\u4f1a\u3002","title":"\u5c5e\u6027\u3001\u51fd\u6570\u548c\u65b9\u6cd5"},{"location":"python/Basic_07/#_8","text":"\u524d\u9762\u63d0\u5230\u7684\u4f8b\u5b50\u91cc\uff0cname\u5c5e\u6027\u53ef\u4ee5\u5728\u5916\u90e8\u88ab\u4fee\u6539\uff0c\u8fd9\u6837\u662f\u4e0d\u5b89\u5168\u7684\u3002\u6bd4\u5982\uff0c\u5f53\u4f60\u6267\u884cset_name\u4e0d\u4ec5\u4fee\u6539\u4e86\u540d\u5b57\uff0c\u540c\u65f6\u4f1a\u5411\u7ba1\u7406\u5458\u53d1\u90ae\u4ef6\uff0c\u4f46\u662f\u5982\u679c\u76f4\u63a5\u8fdb\u884c\u59d3\u540d\u4fee\u6539\uff0c\u5219\u4e0d\u4f1a\u89e6\u53d1\u8fd9\u6837\u7684\u64cd\u4f5c\u3002\u4e3a\u4e86\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\uff0cPython\u63d0\u4f9b\u4e86\u4e00\u79cd\u541b\u5b50\u534f\u5b9a\uff0c\u5728\u5c5e\u6027\u6216\u65b9\u6cd5\u524d\u52a0\u4e0a __ \u5c31\u53ef\u4ee5\u8ba9\u5916\u90e8\u65e0\u6cd5\u8fdb\u884c\u76f4\u63a5\u8bbf\u95ee\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a >>> class Sec : ... def __init__ ( self ): ... self . __name = \"steve\" # \u8fd9\u91cc\u7684name\u58f0\u660e\u4e3a\u79c1\u6709\u53d8\u91cf ... def __greet_sec ( self ): # \u79c1\u6709\u65b9\u6cd5 ... print ( \"hello,{}\" . format ( self . __name )) ... def greet ( self ): ... self . __greet_sec () ... >>> foo = Sec () >>> foo . __name # \u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee AttributeError : 'Sec' object has no attribute '__name' >>> foo . _Sec__name # \u5176\u5b9ePython\u53ea\u662f\u5c06\u5176\u6362\u4e86\u4e2a\u540d\u5b57 'steve' >>> foo . __greet_sec AttributeError : 'Sec' object has no attribute '__greet_sec' >>> foo . _Sec__greet_sec < bound method Sec . __greet_sec of < __main__ . Sec object at 0x0000025F51C0C7B8 >> >>> foo . greet () # \u53ef\u4ee5\u901a\u8fc7\u5bf9\u5916\u5f00\u653e\u7684\u63a5\u53e3\u8c03\u7528 hello , steve \u6211\u4eec\u8fd8\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u4e0b\u5212\u7ebf\u6253\u5934\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u8fd9\u79cd\u5916\u90e8\u53ef\u4ee5\u8c03\u7528\uff0c\u4f46\u662f\u4e0d\u63a8\u8350\u8fd9\u6837\u505a\uff0c\u7528import * \u7684\u65f6\u5019\u4e5f\u4e0d\u4f1a\u88ab\u5bfc\u5165\u3002","title":"\u518d\u8c08\u9690\u85cf"},{"location":"python/Basic_07/#_9","text":"\u5176\u5b9e\u7c7b\u7684\u5b9a\u4e49\u5c31\u662f\u6267\u884c\u58f0\u660e\u4e0b\u7684\u6240\u6709\u4ee3\u7801\uff0c\u8fd9\u4e9b\u4ee3\u7801\u4f5c\u7528\u5728\u4e00\u4e2a\u7279\u5b9a\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u4e5f\u5c31\u662f\u7c7b\u7684\u547d\u540d\u7a7a\u95f4\uff1a >>> class Test : ... print ( \"class Test is defined...\" ) # \u7c7b\u7684\u5b9a\u4e49\u53ea\u662f\u6267\u884c\u4e86\u5185\u90e8\u7684\u4ee3\u7801\u800c\u5df2\uff0c\u5e76\u4e0d\u9700\u8981\u4e00\u5b9a\u6709def\u7b49\u51fd\u6570\u5b9a\u4e49\u3002 ... class Test is defined ... \u800c\u5bf9\u4e8e\u7c7b\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u5168\u5c40\u53d8\u91cf\u4e0e\u5c40\u90e8\u53d8\u91cf\u7684\u5173\u7cfb\u5982\u4e0b\uff1a >>> class Counter : ... member = 0 ... def init ( self ): ... Counter . member += 1 # \u5bf9\u5168\u5c40\u53d8\u91cf\u8fdb\u884c\u66f4\u6539 ... >>> m1 = Counter () >>> m1 . init () >>> Counter . member 1 >>> m2 = Counter () >>> m2 . init () >>> Counter . member # \u4ecd\u7136\u4f5c\u7528\u5728\u5168\u5c40\u53d8\u91cf\u4e0a 2 >>> m1 . member = 'two' # \u4f5c\u7528\u4e8e\u5c40\u90e8\u53d8\u91cf >>> m1 . member 'two' >>> m2 . member 2 >>> Counter . member 2","title":"\u7c7b\u7684\u547d\u540d\u7a7a\u95f4"},{"location":"python/Basic_07/#_10","text":">>> class Filter : ... def init ( self ): ... self . blocked = [] ... def filter ( self , sequence ): ... return [ x for x in sequence if x not in self . blocked ] ... >>> >>> class SPAMFilter ( Filter ): #\u7528\u5706\u62ec\u53f7\u62ec\u8d77\u6765\u8868\u793a\u7ee7\u627f\u8d85\u7c7b ... def init ( self ): # \u5bf9init\u8fdb\u884c\u6539\u5199 ... self . blocked = [ 'SPAM' ] ... >>> f = Filter () # \u53ef\u4ee5\u91cd\u5199\u4e3a\u4efb\u4f55\u8fc7\u6ee4\u5668 >>> f . init () >>> f . filter ([ 1 , 2 , 3 ]) [ 1 , 2 , 3 ] >>> s = SPAMFilter () >>> s . init () # \u6b64\u5904\u7ecf\u8fc7\u91cd\u5199\uff0c\u4f7f\u5f97\u8be5\u7c7b\u6210\u4e3a\u7279\u5b9a\u7528\u9014\u7684\u8fc7\u6ee4\u5668 >>> s . filter ([ 'SPAM' , 'SPAM' , 'SPAM' , 'SPAM' , 'eggs' , 'bacon' , 'SPAM' ]) # \u76f4\u63a5\u4f7f\u7528\u8d85\u7c7b\u7684filter\u51fd\u6570\uff0c\u4e0d\u7528\u518d\u6b21\u7f16\u5199 [ 'eggs' , 'bacon' ] \u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u5224\u65ad\u7ee7\u627f\u5173\u7cfb\uff1a >>> issubclass ( SPAMFilter , Filter ) # \u68c0\u6d4bA\u662f\u5426\u662fB\u7684\u5b50\u7c7b True >>> issubclass ( Filter , SPAMFilter ) False >>> SPAMFilter . __bases__ # \u8fd4\u56de\u7c7b\u7684\u8d85\u7c7b ( < class ' __main__ . Filter '>,) >>> Filter . __bases__ ( < class ' object '>,) >>> s = SPAMFilter () >>> isinstance ( s , SPAMFilter ) # \u5224\u65ada\u662f\u5426\u662fB\u7c7b\u7684\u5b9e\u4f8b True >>> isinstance ( s , Filter ) # s\u65e2\u662fSPAMFilter\u7684\u5b9e\u4f8b\uff0c\u4e5f\u662f\u5176\u8d85\u7c7b\u7684\u5b9e\u4f8b\u3002 True >>> isinstance ( s , list ) # \u8be5\u51fd\u6570\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u7c7b\u578b False >>> s . __class__ < class ' __main__ . SPAMFilter '> >>> type ( s ) < class ' __main__ . SPAMFilter '>","title":"\u6307\u5b9a\u8d85\u7c7b"},{"location":"python/Basic_07/#_11","text":">>> class Calculator : ... def calc ( self , exp ): ... self . value = eval ( exp ) >>> class Talker : ... def talk ( self ): ... print ( 'Hi,my value is' , self . value ) ... >>> class TalkCalc ( Calculator , Talker ): # \u8fd9\u91cc\u7ee7\u627f\u4e86\u4e24\u4e2a\u8d85\u7c7b\uff0c\u867d\u7136\u7c7b\u91cc\u9762\u6ca1\u6709\u4efb\u4f55\u4ee3\u7801\uff0c\u4f46\u662f\u5177\u6709\u4e24\u4e2a\u8d85\u7c7b\u7684\u529f\u80fd ... pass ... >>> tc = TalkCalc () >>> tc . calc ( '1+2*3' ) >>> tc . talk () Hi , my value is 7 \u5f53\u6709\u591a\u4e2a\u8d85\u7c7b\u7684\u65f6\u5019\uff0c\u987a\u5e8f\u5c31\u5f88\u91cd\u8981\u4e86\uff0c\u540e\u9762\u7684\u8d85\u7c7b\u5982\u679c\u4e0e\u524d\u9762\u7684\u91cd\u540d\uff0c\u5c31\u4f1a\u88ab\u8986\u76d6\u6389\u3002\u4e00\u822c\u4e0d\u5efa\u8bae\u5199\u5f88\u591a\u8d85\u7c7b\u3002","title":"\u591a\u4e2a\u8d85\u7c7b"},{"location":"python/Basic_07/#_12","text":"Python\u4e0d\u4f1a\u663e\u793a\u5b9a\u4e49\u63a5\u53e3\uff0c\u4f46\u662f\u53ef\u4ee5\u5224\u65ad\u5bf9\u8c61\u662f\u5426\u5177\u6709\u67d0\u4e9b\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u63a5\u53e3\u9488\u5bf9\u7684\u5c31\u662f\u591a\u6001\u3002\u603b\u4f53\u5982\u4e0b\uff1a >>> hasattr ( tc , 'talk' ) # \u5224\u65ad\u662f\u5426\u5177\u6709\u67d0\u4e2a\u5c5e\u6027\u6216\u65b9\u6cd5 True >>> hasattr ( tc , 'fnord' ) False >>> callable ( getattr ( tc , 'talk' , None )) # \u83b7\u53d6\u5c5e\u6027\uff0c\u5982\u679c\u6ca1\u6709\u5219\u8fd4\u56deNone True >>> callable ( getattr ( tc , 'fnord' , None )) False >>> setattr ( tc , 'name' , 'Steve' ) # \u6dfb\u52a0\u5c5e\u6027 >>> tc . name 'Steve' >>> tc . __dict__ # \u67e5\u770b\u5bf9\u8c61\u5b58\u50a8\u7684\u5c5e\u6027 { 'value' : 7 , 'name' : 'Steve' }","title":"\u63a5\u53e3"},{"location":"python/Basic_07/#_13","text":"\u591a\u6001\u5b9e\u73b0\u4e86\u53ea\u8981\u63d0\u4f9b\u7279\u5b9a\u529f\u80fd\u63a5\u53e3\uff0c\u5c31\u80fd\u5bf9\u4efb\u610f\u5bf9\u8c61\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\uff0c\u4e0d\u9700\u8981\u77e5\u9053\u5bf9\u8c61\u5c5e\u4e8e\u54ea\u4e00\u7c7b\u3002\u5c01\u88c5\u53ef\u4ee5\u8ba9\u4f60\u4e0d\u9700\u8981\u77e5\u9053\u5bf9\u8c61\u7684\u5185\u90e8\u6784\u9020\uff0c\u5c31\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u8fdb\u884c\u64cd\u4f5c\u3002\u800c\u7ee7\u627f\u4f7f\u5f97\u4ee3\u7801\u80fd\u591f\u91cd\u590d\u5229\u7528\u3002\u524d\u9762\u63d0\u5230\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u77e5\u9053\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u5177\u6709\u6211\u4eec\u60f3\u8981\u7684\u529f\u80fd\uff08\u6bd4\u5982\u7a7a\u8c03\u80fd\u5426\u5236\u70ed\uff0c\u5236\u51b7\uff0c\u52a0\u6e7f\u7b49\uff09\uff0c\u9700\u8981\u4e00\u4e2a\u4e2a\u53bb\u68c0\u6d4b\u3002\u6709\u6ca1\u6709\u4e00\u79cd\u81ea\u52a8\u64cd\u4f5c\u7684\u65b9\u5f0f\u5462\uff1f\u8fd9\u4e2a\u5c31\u9700\u8981\u5229\u7528\u62bd\u8c61\u57fa\u7c7b\u4e86\u3002\u8fd9\u5c31\u597d\u6bd4\u5982\u679c\u7a7a\u8c03\u4e0a\u7684\u6309\u94ae\u6ca1\u6709\u4efb\u4f55\u8bf4\u660e\uff0c\u6ca1\u6709\u4efb\u4f55\u6807\u8bb0\uff0c\u90a3\u4e48\u4f60\u5c31\u53ea\u80fd\u4e00\u4e2a\u4e2a\u8bd5\uff0c\u770b\u770b\u6709\u6ca1\u6709\u76f8\u5e94\u7684\u6548\u679c\u3002\u4f46\u662f\u5982\u679c\u6240\u6709\u529f\u80fd\u90fd\u4e00\u4e2a\u4e2a\u6807\u6ce8\u5728\u4e0a\u9762\u4e86\uff0c\u4f60\u5c31\u53ea\u9700\u8981\u770b\u4e00\u773c\u5c31\u77e5\u9053\u6709\u54ea\u4e9b\u529f\u80fd\u4e86\u3002\u4e00\u822c\u800c\u8a00\uff0c\u62bd\u8c61\u7c7b\u4e0d\u5e94\u8be5\u5b9e\u4f8b\u5316\uff0c\u800c\u53ea\u662f\u5b9a\u4e49\u4e00\u7ec4\u65b9\u6cd5\uff08\u53ea\u9700\u8981\u5728\u5404\u4e2a\u529f\u80fd\u6309\u94ae\u4e0b\u5199\u4e0a\u529f\u80fd\u540d\u79f0\uff0c\u800c\u4e0d\u7528\u5355\u72ec\u7528\u65b0\u7684\u6309\u94ae\u6309\u4e0b\u53bb\u518d\u663e\u793a\uff09\u3002Python\u63d0\u4f9b\u4e86abc\u6a21\u5757\uff0c\u4ee5\u4e0b\u5c31\u662f\u5176\u4f7f\u7528\u65b9\u6cd5\uff1a >>> from abc import ABC , abstractmethod >>> class Talker ( ABC ): ... @abstractmethod # \u4fee\u9970\u5668\uff0c\u7528\u4e8e\u58f0\u660e\u62bd\u8c61\u65b9\u6cd5 ... def talk ( self ): ... pass ... >>> Talker () # \u62bd\u8c61\u7c7b\u4e0d\u80fd\u5b9e\u4f8b\u5316 TypeError : Can 't instantiate abstract class Talker with abstract methods talk >>> class Knigget ( Talker ): ... pass # \u6ca1\u6709\u91cd\u5199\u62bd\u8c61\u65b9\u6cd5\uff0c\u56e0\u6b64\u4e5f\u662f\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u5b9e\u4f8b\u5316 ... >>> Knigget () TypeError : Can 't instantiate abstract class Knigget with abstract methods talk >>> class Knigget ( Talker ): ... def talk ( self ): ... print ( \"Ni\" ) ... >>> k = Knigget () >>> k . talk () Ni >>> isinstance ( k , Talker ) True >>> class Herring : ... def talk ( self ): ... print ( \"Blub.\" ) ... >>> h = Herring () >>> isinstance ( h , Talker ) # h\u5e76\u6ca1\u6709\u7ee7\u627fTalker False >>> Talker . register ( Herring ) # \u901a\u8fc7register\u53ef\u4ee5\u4f7f\u4efb\u4f55Herring\u7c7b\u540c\u65f6\u90fd\u662fTalker\u7c7b\uff0c\u8fd9\u5728\u5f53Herring\u662f\u4ece\u5176\u4ed6\u6a21\u5757\u5bfc\u5165\uff0c\u4f60\u4e0d\u80fd\u5c06\u5176\u4ece\u57fa\u7c7b\u6d3e\u751f\u65f6\u5f88\u6709\u7528\u3002 < class ' __main__ . Herring '> >>> isinstance ( h , Talker ) True >>> issubclass ( Herring , Talker ) True >>> class Clam : ... pass ... >>> Talker . register ( Clam ) < class ' __main__ . Clam '> >>> c = Clam () # register\u7684\u5f0a\u7aef\u5c31\u662f\uff0c\u4e27\u5931\u4e86\u7c7b\u7684\u7ee7\u627f\u673a\u5236\u3002\u53ea\u662f\u5e0c\u671bClam\u6709talk\u529f\u80fd\uff0c\u4f46\u662f\u4e8b\u5b9e\u4e0a\u5b83\u6ca1\u6709 >>> c . talk () AttributeError : 'Clam' object has no attribute 'talk' >>> isinstance ( c , Talker ) # c\u4ecd\u7136\u662fTalker\u7684\u5b9e\u4f8b\uff0c\u8fd9\u662f\u901a\u8fc7register\u5b9e\u73b0\u7684 True","title":"\u62bd\u8c61\u57fa\u7c7b"},{"location":"python/Basic_08/","text":"\u5f02\u5e38 \u5f02\u5e38\u5c31\u662f\u67d0\u4e9b\u7c7b\u7684\u5b9e\u4f8b\uff0c\u6bd4\u5982ZeroDivisionError\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67d0\u4e9b\u6761\u4ef6\u89e6\u53d1\u548c\u6355\u83b7\u8fd9\u4e9b\u5b9e\u4f8b\u3002 \u6307\u5b9a\u5f02\u5e38 raise \u53ef\u4ee5\u901a\u8fc7raise\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38\uff1a >>> raise Exception Exception >>> raise Exception ( 'test' ) Exception : test >>> raise OSError OSError \u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b \u6211\u4eec\u6709\u65f6\u5019\u9700\u8981\u6839\u636e\u5f02\u5e38\u7684\u7c7b\u578b\u8fdb\u884c\u4e0d\u540c\u7684\u5904\u7406\uff0c\u8fd9\u65f6\u5019\u5982\u679c\u6709\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u5f02\u5e38\uff0c\u6700\u597d\u81ea\u5b9a\u4e49\u4e00\u4e2a\u5f02\u5e38\u7c7b\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u7528Exception\u8f93\u51fa\u4fe1\u606f\u3002\u65b9\u5f0f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u8981\u76f4\u63a5\u6216\u95f4\u63a5\u7ee7\u627fException\u7c7b\uff1a >>> class MyError ( Exception ): pass \u6355\u83b7\u5f02\u5e38 >>> x = int ( input ( \"enter x: \" )) enter x : 2 >>> y = int ( input ( \"enter y: \" )) enter y : 0 >>> print ( x / y ) ZeroDivisionError : division by zero # \u6539\u5199\u4e3a\u4ee5\u4e0b\u5185\u5bb9\u6355\u83b7\u5f02\u5e38(try/except)\uff1a try : x = int ( input ( 'Enter the first number: ' )) y = int ( input ( 'Enter the second number: ' )) print ( x / y ) except ZeroDivisionError : print ( \"The second number can't be zero!\" ) \u65e0\u53c2raise \u6355\u83b7\u5230\u4e00\u4e2a\u5f02\u5e38\u540e\uff0c\u4f60\u89c9\u5f97\u65e0\u6cd5\u5904\u7406\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528raise,\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\uff0c\u6b64\u65f6\u51fd\u6570\u4f1a\u5c06\u5f02\u5e38\u9001\u5230\u8c03\u7528\u8be5\u51fd\u6570\u7684\u5730\u65b9\u53bb\u5904\u7406\u3002\u4f8b\u5982\u4e00\u4e2a\u5e26\u5f02\u5e38\u6d88\u9664\u7684\u8ba1\u7b97\u5668\uff1a >>> class MuffledCalculator : ... muffled = False ... def calc ( self , expr ): ... try : ... return eval ( expr ) ... except ZeroDivisionError : ... if self . muffled : ... print ( 'Division by zero is illegal' ) ... else : ... raise ... >>> c = MuffledCalculator () >>> c . calc ( '10/2' ) 5.0 >>> c . calc ( '10/0' ) ZeroDivisionError : division by zero >>> MuffledCalculator . muffled = True # \u542f\u52a8\u9690\u85cf\u5f02\u5e38\u529f\u80fd >>> c . calc ( '10/0' ) Division by zero is illegal \u5982\u679c\u4f60\u4e0d\u662f\u60f3\u8fd4\u56de\u5f53\u524d\u5f02\u5e38\u800c\u662f\u8fd4\u56de\u53e6\u5916\u4e00\u4e2a\u5f02\u5e38\uff0c\u4e0d\u8981\u76f4\u63a5\u4f7f\u7528raise xxx(\u6307\u4ee3\u53e6\u4e00\u4e2a\u5f02\u5e38)\uff0c\u8fd9\u6837\u7684\u8bdd\u539f\u5f02\u5e38\u5c31\u4f1a\u53d8\u6210\u4e0a\u4e0b\u6587\u51fa\u73b0\u5728\u5f02\u5e38\u6587\u672c\u4e2d\uff0c\u6bd4\u8f83\u597d\u7684\u65b9\u5f0f\u662f\u4f7f\u7528rasie ... from ...\u8bed\u53e5\u6765\u63d0\u4f9b\u81ea\u5df1\u7684\u4e0a\u4e0b\u6587\uff0c\u6216\u8005\u76f4\u63a5from None \u7981\u7528\u4e0a\u4e0b\u6587\uff1a >>> try : ... 1 / 0 ... except ZeroDivisionError : ... raise ValueError ... Traceback ( most recent call last ): File \"<stdin>\" , line 2 , in < module > ZeroDivisionError : division by zero During handling of the above exception , another exception occurred : Traceback ( most recent call last ): File \"<stdin>\" , line 4 , in < module > ValueError >>> try : ... 1 / 0 ... except ZeroDivisionError : ... raise ValueError from None ... Traceback ( most recent call last ): File \"<stdin>\" , line 4 , in < module > ValueError \u591a\u4e2a\u5f02\u5e38\u5904\u7406 # \u591a\u4e2aexcept try : x = int ( input ( 'Enter the first number: ' )) y = int ( input ( 'Enter the second number: ' )) print ( x / y ) except ZeroDivisionError : print ( \"The second number can't be zero!\" ) except TypeError : # \u53ef\u4ee5\u6355\u83b7\u00b7\u591a\u4e2a\u5f02\u5e38 print ( \"That wasn't a number, was it?\" ) # \u7528\u5f02\u5e38\u5143\u7ec4\uff08\u4e00\u5b9a\u8981\u52a0\u62ec\u53f7\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u51fa\u73b0\u4f60\u4e0d\u5e0c\u671b\u7684\u7ed3\u679c\uff09 try : x = int ( input ( 'Enter the first number: ' )) y = int ( input ( 'Enter the second number: ' )) print ( x / y ) except ( ZeroDivisionError , TypeError , NameError ): print ( 'Your numbers were bogus ...' ) \u6355\u83b7\u5bf9\u8c61 try : x = int ( input ( 'Enter the first number: ' )) y = int ( input ( 'Enter the second number: ' )) print ( x / y ) except ( ZeroDivisionError , TypeError ) as e : # \u8fd9\u91cc\u7684e\u8868\u793a\u5f02\u5e38\u5bf9\u8c61\u800c\u4e0d\u662f\u5f02\u5e38\u7c7b print ( e ) \u4e00\u7f51\u6253\u5c3d >>> try : ... input ( \"input sth: \" ) ... except : # \u76f4\u63a5\u5bf9\u6240\u6709\u5f02\u5e38\u7edf\u4e00\u5904\u7406\uff0c\u8fd9\u6837\u505a\u7684\u5f0a\u7aef\u662f\uff0c\u53ef\u80fd\u8ba9\u7cfb\u7edf\u5ffd\u7565\u4e00\u4e9b\u91cd\u8981\u7684\u5f02\u5e38\u6bd4\u5982KeyboardInterrupt(\u6309\u4e0bCtrl+C\u7ec8\u6b62)\uff0csys.exit()\u4ea7\u751f\u7684\u5f02\u5e38\u7b49\u3002\u66f4\u597d\u7684\u529e\u6cd5\u662f\u4f7f\u7528except Exception as e,\u56e0\u4e3a\u4e0a\u9762\u63d0\u5230\u7684\u7cfb\u7edf\u7ea7\u522b\u7684\u5f02\u5e38\u90fd\u662f\u7ee7\u627f\u81eaBaseException\uff0c\u8fd9\u662fException\u7684\u8d85\u7c7b\u3002 ... print ( \"whatever you input with eroor will show this\" ) ... input sth : whatever you input with eroor will show this >>> # \u4ee5\u4e0b\u662f\u4f7f\u7528except Exception as e\u8fd9\u79cd\u65b9\u5f0f\u6355\u83b7\u5f02\u5e38\u5bf9\u8c61 >>> try : ... input ( \"test: \" ) ... except Exception as e : ... print ( 'hha' ) ... test : Traceback ( most recent call last ): File \"<stdin>\" , line 2 , in < module > KeyboardInterrupt else,finally >>> while True : ... try : ... x = int ( input ( 'Enter the first number: ' )) ... y = int ( input ( 'Enter the second number: ' )) ... value = x / y ... print ( 'x/y is ' , value ) ... except : ... print ( 'Invalid input,PLease try again.' ) ... else : # \u5728\u6ca1\u6709\u5f02\u5e38\u53d1\u751f\u65f6\u6267\u884c ... break ... Enter the first number : 1 Enter the second number : 0 Invalid input , PLease try again . Enter the first number : 1 Enter the second number : hah Invalid input , PLease try again . Enter the first number : 2 Enter the second number : sd Invalid input , PLease try again . Enter the first number : Invalid input , PLease try again . Enter the first number : Invalid input , PLease try again . # \u8fd9\u91cc\u662f\u6309\u4e86Ctrl+C\uff0c\u4f46\u662f\u56e0\u4e3aexcept\u6355\u83b7\u4e86KeyboardInterrupt\u65e0\u6cd5\u8df3\u51fa Enter the first number : 1 Enter the second number : 2 # \u53ea\u6709\u8f93\u5165\u6b63\u786e\u5f62\u5f0f\u624d\u80fd\u9000\u51fa x / y is 0.5 # \u4ee5\u4e0b\u662f\u6539\u826f\u7248 >>> while True : ... try : ... x = int ( input ( 'Enter the first number: ' )) ... y = int ( input ( 'Enter the second number: ' )) ... value = x / y ... print ( 'x/y is ' , value ) ... except Exception as e : # \u8fd9\u91cc\u4e0d\u4f1a\u6355\u83b7Ctrl+C\u4ea7\u751f\u7684\u5f02\u5e38\uff0c\u5e76\u4e14\u5bf9\u8c61e\u53ef\u4ee5\u7528\u4e8e\u6253\u5370\uff0c\u4ece\u800c\u83b7\u53d6\u5f02\u5e38\u7684\u8be6\u7ec6\u4fe1\u606f ... print ( 'Invalid input: ' , e ) ... print ( 'Please try again' ) ... else : ... break ... Enter the first number : 1 Enter the second number : 0 Invalid input : division by zero Please try again Enter the first number : 1 Enter the second number : hello Invalid input : invalid literal for int () with base 10 : 'hello' Please try again Enter the first number : qqqq Invalid input : invalid literal for int () with base 10 : 'qqqq' Please try again Enter the first number : hi Invalid input : invalid literal for int () with base 10 : 'hi' Please try again Enter the first number : Traceback ( most recent call last ): File \"<stdin>\" , line 3 , in < module > KeyboardInterrupt >>> x = None >>> try : ... x = 1 / 0 ... finally : # finally\u4e0b\u7684\u8bed\u53e5\u662f\u65e0\u8bba\u6709\u65e0\u5f02\u5e38\u90fd\u4f1a\u6267\u884c\u7684 ... print ( 'Cleaning up ...' ) ... del x ... Cleaning up ... ZeroDivisionError : division by zero # \u540c\u65f6\u4f7f\u7528\u56db\u79cd\u8bed\u53e5 >>> try : ... 1 / 0 ... except NameError : ... print ( \"Unknown variable\" ) ... else : ... print ( 'That went well.' ) ... finally : ... print ( \"Cleaning up\" ) ... Cleaning up ZeroDivisionError : division by zero >>> try : ... 1 / 1 ... except NameError : ... print ( \"Unknown variable\" ) ... else : ... print ( 'That went well.' ) ... finally : # \u65e0\u5f02\u5e38\u4e5f\u4f1a\u6267\u884c ... print ( \"Cleaning up\" ) ... 1.0 That went well . Cleaning up \u5f02\u5e38\u4e4b\u7985 \u5f02\u5e38\u5305\u542b\u7684\u601d\u60f3\u5c31\u662f\uff0c\u5148\u505a\uff0c\u9519\u4e86\u518d\u5904\u7406\uff0c\u800c\u4e0d\u662f\u5148\u8003\u8651\u5468\u5230\u518d\u505a\u3002\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\u80fd\u6839\u636e\u6709\u65e0\u804c\u4f4d\u8fd9\u4e00\u9879\u6765\u6253\u5370\u4e2a\u4eba\u4fe1\u606f\u7684\u529f\u80fd\u51fd\u6570\uff1a # \u4f7f\u7528\u6761\u4ef6\u8bed\u53e5 def describe_person ( person ): print ( 'Description of' , person [ 'name' ]) print ( 'Age:' , person [ 'age' ]) if 'occupation' in person : # \u8fd9\u91cc\u9700\u8981\u67e5\u627e\u4e24\u6b21key print ( 'Occupation:' , person [ 'occupation' ]) # \u4f7f\u7528\u5f02\u5e38 def describe_person ( person ): print ( 'Description of' , person [ 'name' ]) print ( 'Age:' , person [ 'age' ]) try : print ( 'Occupation:' , person [ 'occupation' ]) # \u8fd9\u91cc\u53ea\u7528\u67e5\u627e\u4e00\u6b21\uff0c\u800c\u4e14\u4e0d\u7528\u5173\u5fc3\u5b58\u4e0d\u5b58\u5728\u8fd9\u4e2a\u952e except KeyError : pass \u8b66\u544a >>> from warnings import warn >>> warn ( 'not good' ) __main__ : 1 : UserWarning : not good >>> warn ( 'not good' ) # \u540c\u4e00\u4e2a\u8b66\u544a\u53ea\u663e\u793a\u4e00\u6b21 >>> from warnings import filterwarnings # \u5176\u4ed6\u4ee3\u7801\u8c03\u7528\u4f60\u7684\u6a21\u5757\u65f6\uff0c\u4f60\u53ef\u4ee5\u7528\u8fd9\u4e2a\u51fd\u6570\u5bf9\u8b66\u544a\u8fdb\u884c\u9650\u5236 >>> filterwarnings ( 'ignore' ) # \u76f4\u63a5\u5ffd\u7565 >>> warn ( 'Are you ok?' ) >>> filterwarnings ( 'error' ) # \u53d8\u4e3a\u5f02\u5e38\u629b\u51fa >>> warn ( 'Are you ok?' ) UserWarning : Are you ok ? >>> warn ( \"r u ok?\" , MyWarning ) NameError : name 'MyWarning' is not defined >>> warn ( \"r u ok?\" , DeprecationWarning ) # \u81ea\u5b9a\u4e49\u8b66\u544a\u7c7b\u578b DeprecationWarning : r u ok ? >>> filterwarnings ( 'ignore' , category = DeprecationWarning ) # \u6309\u7c7b\u578b\u5ffd\u7565 >>> warn ( \"hello\" , DeprecationWarning ) >>> warn ( 'sth else' ) UserWarning : sth else","title":"\u57fa\u7840\u603b\u7ed3(\u516b)-\u5f02\u5e38\u5904\u7406"},{"location":"python/Basic_08/#_1","text":"\u5f02\u5e38\u5c31\u662f\u67d0\u4e9b\u7c7b\u7684\u5b9e\u4f8b\uff0c\u6bd4\u5982ZeroDivisionError\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67d0\u4e9b\u6761\u4ef6\u89e6\u53d1\u548c\u6355\u83b7\u8fd9\u4e9b\u5b9e\u4f8b\u3002","title":"\u5f02\u5e38"},{"location":"python/Basic_08/#_2","text":"","title":"\u6307\u5b9a\u5f02\u5e38"},{"location":"python/Basic_08/#raise","text":"\u53ef\u4ee5\u901a\u8fc7raise\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38\uff1a >>> raise Exception Exception >>> raise Exception ( 'test' ) Exception : test >>> raise OSError OSError","title":"raise"},{"location":"python/Basic_08/#_3","text":"\u6211\u4eec\u6709\u65f6\u5019\u9700\u8981\u6839\u636e\u5f02\u5e38\u7684\u7c7b\u578b\u8fdb\u884c\u4e0d\u540c\u7684\u5904\u7406\uff0c\u8fd9\u65f6\u5019\u5982\u679c\u6709\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u5f02\u5e38\uff0c\u6700\u597d\u81ea\u5b9a\u4e49\u4e00\u4e2a\u5f02\u5e38\u7c7b\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u7528Exception\u8f93\u51fa\u4fe1\u606f\u3002\u65b9\u5f0f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u8981\u76f4\u63a5\u6216\u95f4\u63a5\u7ee7\u627fException\u7c7b\uff1a >>> class MyError ( Exception ): pass","title":"\u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b"},{"location":"python/Basic_08/#_4","text":">>> x = int ( input ( \"enter x: \" )) enter x : 2 >>> y = int ( input ( \"enter y: \" )) enter y : 0 >>> print ( x / y ) ZeroDivisionError : division by zero # \u6539\u5199\u4e3a\u4ee5\u4e0b\u5185\u5bb9\u6355\u83b7\u5f02\u5e38(try/except)\uff1a try : x = int ( input ( 'Enter the first number: ' )) y = int ( input ( 'Enter the second number: ' )) print ( x / y ) except ZeroDivisionError : print ( \"The second number can't be zero!\" )","title":"\u6355\u83b7\u5f02\u5e38"},{"location":"python/Basic_08/#raise_1","text":"\u6355\u83b7\u5230\u4e00\u4e2a\u5f02\u5e38\u540e\uff0c\u4f60\u89c9\u5f97\u65e0\u6cd5\u5904\u7406\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528raise,\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\uff0c\u6b64\u65f6\u51fd\u6570\u4f1a\u5c06\u5f02\u5e38\u9001\u5230\u8c03\u7528\u8be5\u51fd\u6570\u7684\u5730\u65b9\u53bb\u5904\u7406\u3002\u4f8b\u5982\u4e00\u4e2a\u5e26\u5f02\u5e38\u6d88\u9664\u7684\u8ba1\u7b97\u5668\uff1a >>> class MuffledCalculator : ... muffled = False ... def calc ( self , expr ): ... try : ... return eval ( expr ) ... except ZeroDivisionError : ... if self . muffled : ... print ( 'Division by zero is illegal' ) ... else : ... raise ... >>> c = MuffledCalculator () >>> c . calc ( '10/2' ) 5.0 >>> c . calc ( '10/0' ) ZeroDivisionError : division by zero >>> MuffledCalculator . muffled = True # \u542f\u52a8\u9690\u85cf\u5f02\u5e38\u529f\u80fd >>> c . calc ( '10/0' ) Division by zero is illegal \u5982\u679c\u4f60\u4e0d\u662f\u60f3\u8fd4\u56de\u5f53\u524d\u5f02\u5e38\u800c\u662f\u8fd4\u56de\u53e6\u5916\u4e00\u4e2a\u5f02\u5e38\uff0c\u4e0d\u8981\u76f4\u63a5\u4f7f\u7528raise xxx(\u6307\u4ee3\u53e6\u4e00\u4e2a\u5f02\u5e38)\uff0c\u8fd9\u6837\u7684\u8bdd\u539f\u5f02\u5e38\u5c31\u4f1a\u53d8\u6210\u4e0a\u4e0b\u6587\u51fa\u73b0\u5728\u5f02\u5e38\u6587\u672c\u4e2d\uff0c\u6bd4\u8f83\u597d\u7684\u65b9\u5f0f\u662f\u4f7f\u7528rasie ... from ...\u8bed\u53e5\u6765\u63d0\u4f9b\u81ea\u5df1\u7684\u4e0a\u4e0b\u6587\uff0c\u6216\u8005\u76f4\u63a5from None \u7981\u7528\u4e0a\u4e0b\u6587\uff1a >>> try : ... 1 / 0 ... except ZeroDivisionError : ... raise ValueError ... Traceback ( most recent call last ): File \"<stdin>\" , line 2 , in < module > ZeroDivisionError : division by zero During handling of the above exception , another exception occurred : Traceback ( most recent call last ): File \"<stdin>\" , line 4 , in < module > ValueError >>> try : ... 1 / 0 ... except ZeroDivisionError : ... raise ValueError from None ... Traceback ( most recent call last ): File \"<stdin>\" , line 4 , in < module > ValueError","title":"\u65e0\u53c2raise"},{"location":"python/Basic_08/#_5","text":"# \u591a\u4e2aexcept try : x = int ( input ( 'Enter the first number: ' )) y = int ( input ( 'Enter the second number: ' )) print ( x / y ) except ZeroDivisionError : print ( \"The second number can't be zero!\" ) except TypeError : # \u53ef\u4ee5\u6355\u83b7\u00b7\u591a\u4e2a\u5f02\u5e38 print ( \"That wasn't a number, was it?\" ) # \u7528\u5f02\u5e38\u5143\u7ec4\uff08\u4e00\u5b9a\u8981\u52a0\u62ec\u53f7\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u51fa\u73b0\u4f60\u4e0d\u5e0c\u671b\u7684\u7ed3\u679c\uff09 try : x = int ( input ( 'Enter the first number: ' )) y = int ( input ( 'Enter the second number: ' )) print ( x / y ) except ( ZeroDivisionError , TypeError , NameError ): print ( 'Your numbers were bogus ...' )","title":"\u591a\u4e2a\u5f02\u5e38\u5904\u7406"},{"location":"python/Basic_08/#_6","text":"try : x = int ( input ( 'Enter the first number: ' )) y = int ( input ( 'Enter the second number: ' )) print ( x / y ) except ( ZeroDivisionError , TypeError ) as e : # \u8fd9\u91cc\u7684e\u8868\u793a\u5f02\u5e38\u5bf9\u8c61\u800c\u4e0d\u662f\u5f02\u5e38\u7c7b print ( e )","title":"\u6355\u83b7\u5bf9\u8c61"},{"location":"python/Basic_08/#_7","text":">>> try : ... input ( \"input sth: \" ) ... except : # \u76f4\u63a5\u5bf9\u6240\u6709\u5f02\u5e38\u7edf\u4e00\u5904\u7406\uff0c\u8fd9\u6837\u505a\u7684\u5f0a\u7aef\u662f\uff0c\u53ef\u80fd\u8ba9\u7cfb\u7edf\u5ffd\u7565\u4e00\u4e9b\u91cd\u8981\u7684\u5f02\u5e38\u6bd4\u5982KeyboardInterrupt(\u6309\u4e0bCtrl+C\u7ec8\u6b62)\uff0csys.exit()\u4ea7\u751f\u7684\u5f02\u5e38\u7b49\u3002\u66f4\u597d\u7684\u529e\u6cd5\u662f\u4f7f\u7528except Exception as e,\u56e0\u4e3a\u4e0a\u9762\u63d0\u5230\u7684\u7cfb\u7edf\u7ea7\u522b\u7684\u5f02\u5e38\u90fd\u662f\u7ee7\u627f\u81eaBaseException\uff0c\u8fd9\u662fException\u7684\u8d85\u7c7b\u3002 ... print ( \"whatever you input with eroor will show this\" ) ... input sth : whatever you input with eroor will show this >>> # \u4ee5\u4e0b\u662f\u4f7f\u7528except Exception as e\u8fd9\u79cd\u65b9\u5f0f\u6355\u83b7\u5f02\u5e38\u5bf9\u8c61 >>> try : ... input ( \"test: \" ) ... except Exception as e : ... print ( 'hha' ) ... test : Traceback ( most recent call last ): File \"<stdin>\" , line 2 , in < module > KeyboardInterrupt","title":"\u4e00\u7f51\u6253\u5c3d"},{"location":"python/Basic_08/#elsefinally","text":">>> while True : ... try : ... x = int ( input ( 'Enter the first number: ' )) ... y = int ( input ( 'Enter the second number: ' )) ... value = x / y ... print ( 'x/y is ' , value ) ... except : ... print ( 'Invalid input,PLease try again.' ) ... else : # \u5728\u6ca1\u6709\u5f02\u5e38\u53d1\u751f\u65f6\u6267\u884c ... break ... Enter the first number : 1 Enter the second number : 0 Invalid input , PLease try again . Enter the first number : 1 Enter the second number : hah Invalid input , PLease try again . Enter the first number : 2 Enter the second number : sd Invalid input , PLease try again . Enter the first number : Invalid input , PLease try again . Enter the first number : Invalid input , PLease try again . # \u8fd9\u91cc\u662f\u6309\u4e86Ctrl+C\uff0c\u4f46\u662f\u56e0\u4e3aexcept\u6355\u83b7\u4e86KeyboardInterrupt\u65e0\u6cd5\u8df3\u51fa Enter the first number : 1 Enter the second number : 2 # \u53ea\u6709\u8f93\u5165\u6b63\u786e\u5f62\u5f0f\u624d\u80fd\u9000\u51fa x / y is 0.5 # \u4ee5\u4e0b\u662f\u6539\u826f\u7248 >>> while True : ... try : ... x = int ( input ( 'Enter the first number: ' )) ... y = int ( input ( 'Enter the second number: ' )) ... value = x / y ... print ( 'x/y is ' , value ) ... except Exception as e : # \u8fd9\u91cc\u4e0d\u4f1a\u6355\u83b7Ctrl+C\u4ea7\u751f\u7684\u5f02\u5e38\uff0c\u5e76\u4e14\u5bf9\u8c61e\u53ef\u4ee5\u7528\u4e8e\u6253\u5370\uff0c\u4ece\u800c\u83b7\u53d6\u5f02\u5e38\u7684\u8be6\u7ec6\u4fe1\u606f ... print ( 'Invalid input: ' , e ) ... print ( 'Please try again' ) ... else : ... break ... Enter the first number : 1 Enter the second number : 0 Invalid input : division by zero Please try again Enter the first number : 1 Enter the second number : hello Invalid input : invalid literal for int () with base 10 : 'hello' Please try again Enter the first number : qqqq Invalid input : invalid literal for int () with base 10 : 'qqqq' Please try again Enter the first number : hi Invalid input : invalid literal for int () with base 10 : 'hi' Please try again Enter the first number : Traceback ( most recent call last ): File \"<stdin>\" , line 3 , in < module > KeyboardInterrupt >>> x = None >>> try : ... x = 1 / 0 ... finally : # finally\u4e0b\u7684\u8bed\u53e5\u662f\u65e0\u8bba\u6709\u65e0\u5f02\u5e38\u90fd\u4f1a\u6267\u884c\u7684 ... print ( 'Cleaning up ...' ) ... del x ... Cleaning up ... ZeroDivisionError : division by zero # \u540c\u65f6\u4f7f\u7528\u56db\u79cd\u8bed\u53e5 >>> try : ... 1 / 0 ... except NameError : ... print ( \"Unknown variable\" ) ... else : ... print ( 'That went well.' ) ... finally : ... print ( \"Cleaning up\" ) ... Cleaning up ZeroDivisionError : division by zero >>> try : ... 1 / 1 ... except NameError : ... print ( \"Unknown variable\" ) ... else : ... print ( 'That went well.' ) ... finally : # \u65e0\u5f02\u5e38\u4e5f\u4f1a\u6267\u884c ... print ( \"Cleaning up\" ) ... 1.0 That went well . Cleaning up","title":"else,finally"},{"location":"python/Basic_08/#_8","text":"\u5f02\u5e38\u5305\u542b\u7684\u601d\u60f3\u5c31\u662f\uff0c\u5148\u505a\uff0c\u9519\u4e86\u518d\u5904\u7406\uff0c\u800c\u4e0d\u662f\u5148\u8003\u8651\u5468\u5230\u518d\u505a\u3002\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\u80fd\u6839\u636e\u6709\u65e0\u804c\u4f4d\u8fd9\u4e00\u9879\u6765\u6253\u5370\u4e2a\u4eba\u4fe1\u606f\u7684\u529f\u80fd\u51fd\u6570\uff1a # \u4f7f\u7528\u6761\u4ef6\u8bed\u53e5 def describe_person ( person ): print ( 'Description of' , person [ 'name' ]) print ( 'Age:' , person [ 'age' ]) if 'occupation' in person : # \u8fd9\u91cc\u9700\u8981\u67e5\u627e\u4e24\u6b21key print ( 'Occupation:' , person [ 'occupation' ]) # \u4f7f\u7528\u5f02\u5e38 def describe_person ( person ): print ( 'Description of' , person [ 'name' ]) print ( 'Age:' , person [ 'age' ]) try : print ( 'Occupation:' , person [ 'occupation' ]) # \u8fd9\u91cc\u53ea\u7528\u67e5\u627e\u4e00\u6b21\uff0c\u800c\u4e14\u4e0d\u7528\u5173\u5fc3\u5b58\u4e0d\u5b58\u5728\u8fd9\u4e2a\u952e except KeyError : pass","title":"\u5f02\u5e38\u4e4b\u7985"},{"location":"python/Basic_08/#_9","text":">>> from warnings import warn >>> warn ( 'not good' ) __main__ : 1 : UserWarning : not good >>> warn ( 'not good' ) # \u540c\u4e00\u4e2a\u8b66\u544a\u53ea\u663e\u793a\u4e00\u6b21 >>> from warnings import filterwarnings # \u5176\u4ed6\u4ee3\u7801\u8c03\u7528\u4f60\u7684\u6a21\u5757\u65f6\uff0c\u4f60\u53ef\u4ee5\u7528\u8fd9\u4e2a\u51fd\u6570\u5bf9\u8b66\u544a\u8fdb\u884c\u9650\u5236 >>> filterwarnings ( 'ignore' ) # \u76f4\u63a5\u5ffd\u7565 >>> warn ( 'Are you ok?' ) >>> filterwarnings ( 'error' ) # \u53d8\u4e3a\u5f02\u5e38\u629b\u51fa >>> warn ( 'Are you ok?' ) UserWarning : Are you ok ? >>> warn ( \"r u ok?\" , MyWarning ) NameError : name 'MyWarning' is not defined >>> warn ( \"r u ok?\" , DeprecationWarning ) # \u81ea\u5b9a\u4e49\u8b66\u544a\u7c7b\u578b DeprecationWarning : r u ok ? >>> filterwarnings ( 'ignore' , category = DeprecationWarning ) # \u6309\u7c7b\u578b\u5ffd\u7565 >>> warn ( \"hello\" , DeprecationWarning ) >>> warn ( 'sth else' ) UserWarning : sth else","title":"\u8b66\u544a"},{"location":"python/Basic_09/","text":"\u9b54\u6cd5\u65b9\u6cd5 __init__ >>> class FooBar : def __init__ ( self ): # \u4f1a\u5728\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u81ea\u52a8\u6267\u884c self . svar = 42 >>> f = FooBar () >>> f . svar 42 class Bird : def __init__ ( self ): self . hungry = True def eat ( self ): if self . hungry : print ( 'Aaaah ...' ) self . hungry = False else : print ( 'No, thanks!' ) class SongBird ( Bird ): def __init__ ( self ): super () . __init__ () #\u6216\u8005\u7528Bird.__init__(self) self . sound = 'Squawk!' def sing ( self ): print ( self . sound ) __all__ \u8fd9\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32list,\u7528\u4e8e\u5916\u90e8\u8c03\u7528 from xx import * \u65f6\uff0c\u8bbe\u5b9a\u54ea\u4e9b\u53d8\u91cf\u548c\u51fd\u6570\u5bf9\u5916\u5f00\u653e\u3002 \u4f8b\u5982\u5b58\u5728\u4ee5\u4e0b\u6587\u4ef6 all.py \uff1a __all__ = ['x', 'y', 'z'] x = 2 y = 3 z = 4 def test(): print('test') \u65b0\u5efa\u6587\u4ef6 foo.py \uff1a from all import * print ( 'x: ' , x ) print ( 'y: ' , y ) print ( 'z: ' , z ) test () \u7ed3\u679c\u5982\u4e0b\uff1a x : 2 y : 3 z : 4 Traceback ( most recent call last ): File \"foo.py\" , line 7 , in < module > test () NameError : name 'test' is not defined \u4f46\u662f\u5982\u679c\u624b\u52a8\u6dfb\u52a0 from all import test ,\u4f9d\u7136\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u3002 \u5b9e\u7528 __all__ \u7684\u597d\u5904\u5c31\u662f\uff0c\u53ef\u4ee5\u8bbe\u5b9a\u54ea\u4e9b\u5bf9\u5916\u66b4\u9732\uff0c\u4ece\u800c\u907f\u514d\u5bfc\u5165\u4e0d\u5fc5\u8981\u7684\u5305\u3002 \u8fed\u4ee3\u5668 class Fibs : def __init__ ( self ): self . a = 0 self . b = 1 # \u5b9e\u73b0\u4e86\u65b9\u6cd5__next__\u7684\u5bf9\u8c61\u662f\u8fed\u4ee3\u5668 def __next__ ( self ): self . a , self . b = self . b , self . a + self . b return self . a #\u5b9e\u73b0\u4e86__iter__\u65b9\u6cd5\u7684\u5bf9\u8c61\u624d\u662f\u53ef\u8fed\u4ee3\u7684 def __iter__ ( self ): return self >>> class T : value = 0 def __next__ ( self ): self . value += 1 if self . value > 10 : raise StopIteration return self . value def __iter__ ( self ): return self >>> t = T () >>> list ( t ) # T\u662f\u4e00\u4e2a\u8fd4\u56de10\u4e2a\u6570\u5b57\u5e8f\u5217\u7684\u8fed\u4ee3\u5668 [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] >>> class A : astr = \"a\" def __next__ ( self ): self . astr = random . choice ( string . ascii_letters ) if len ( self . astr ) > 10 : raise StopIteration return self . astr def __iter__ ( self ): return T () >>> a = A () >>> list ( a ) # __iter__\u53ef\u4ee5\u8fd4\u56de\u5176\u4ed6\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u6b64\u65f6\u8c03\u7528\u7684\u662fT\u7c7b\u578b\u5bf9\u8c61\u7684\u8fed\u4ee3\u5668 [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] >>> class A : ... astr = \"a\" ... def __next__ ( self ): ... self . astr += random . choice ( string . ascii_letters ) ... if len ( self . astr ) > 10 : raise StopIteration ... return self . astr ... def __iter__ ( self ): ... return self ... >>> a = A () >>> list ( a ) # \u6b64\u65f6\u8c03\u7528\u7684\u624d\u662fA\u7684\u8fed\u4ee3\u5668 [ 'az' , 'azT' , 'azTJ' , 'azTJU' , 'azTJUO' , 'azTJUOR' , 'azTJUORd' , 'azTJUORdU' , 'azTJUORdUt' ] \u751f\u6210\u5668 def flatten ( nested ): try : for sublist in nested : for element in flatten ( sublist ): # \u5bf9\u4e8e\u5e8f\u5217\uff0c\u904d\u5386\u5b50\u5e8f\u5217 yield element except TypeError : # \u5982\u679c\u5f53\u524d\u5904\u7406\u7684\u662f\u4e00\u4e2a\u6570\u5b57\u800c\u4e0d\u662f\u6570\u7ec4\uff0c\u76f4\u63a5\u8fd4\u56de\u8be5\u503c yield nested >>> n [ 0 , 1 , [ 3 , [ 4 ], [[ 5 , 6 ], [ 7 , 8 ]]], 3 , 4 ] >>> flatten ( n ) < generator object flatten at 0x000001B667C33BA0 > >>> list ( flatten ( n )) [ 0 , 1 , 3 , 4 , 5 , 6 , 7 , 8 , 3 , 4 ] >>> a = flatten ( 'aaa' ) # \u8be5\u51fd\u6570\u65e0\u6cd5\u5904\u7406\u5b57\u7b26\u4e32\uff0c\u56e0\u4e3a\u5355\u4e2a\u5b57\u7b26\u4e5f\u662f\u5b57\u7b26\u4e32\uff0c\u4e0d\u4f1a\u51fa\u73b0TypeError,\u540c\u65f6\u5b57\u7b26\u4e32\u5e94\u8be5\u89c6\u4e3a\u6574\u4f53\u800c\u4e0d\u662f\u5b57\u7b26\u7ec4\u6210\u7684\u5e8f\u5217 >>> list ( a ) Traceback ( most recent call last ): RecursionError : maximum recursion depth exceeded","title":"\u57fa\u7840\u603b\u7ed3(\u4e5d)-\u9b54\u6cd5\u65b9\u6cd5"},{"location":"python/Basic_09/#_1","text":"","title":"\u9b54\u6cd5\u65b9\u6cd5"},{"location":"python/Basic_09/#9595init9595","text":">>> class FooBar : def __init__ ( self ): # \u4f1a\u5728\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u81ea\u52a8\u6267\u884c self . svar = 42 >>> f = FooBar () >>> f . svar 42 class Bird : def __init__ ( self ): self . hungry = True def eat ( self ): if self . hungry : print ( 'Aaaah ...' ) self . hungry = False else : print ( 'No, thanks!' ) class SongBird ( Bird ): def __init__ ( self ): super () . __init__ () #\u6216\u8005\u7528Bird.__init__(self) self . sound = 'Squawk!' def sing ( self ): print ( self . sound )","title":"__init__"},{"location":"python/Basic_09/#9595all9595","text":"\u8fd9\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32list,\u7528\u4e8e\u5916\u90e8\u8c03\u7528 from xx import * \u65f6\uff0c\u8bbe\u5b9a\u54ea\u4e9b\u53d8\u91cf\u548c\u51fd\u6570\u5bf9\u5916\u5f00\u653e\u3002 \u4f8b\u5982\u5b58\u5728\u4ee5\u4e0b\u6587\u4ef6 all.py \uff1a __all__ = ['x', 'y', 'z'] x = 2 y = 3 z = 4 def test(): print('test') \u65b0\u5efa\u6587\u4ef6 foo.py \uff1a from all import * print ( 'x: ' , x ) print ( 'y: ' , y ) print ( 'z: ' , z ) test () \u7ed3\u679c\u5982\u4e0b\uff1a x : 2 y : 3 z : 4 Traceback ( most recent call last ): File \"foo.py\" , line 7 , in < module > test () NameError : name 'test' is not defined \u4f46\u662f\u5982\u679c\u624b\u52a8\u6dfb\u52a0 from all import test ,\u4f9d\u7136\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u3002 \u5b9e\u7528 __all__ \u7684\u597d\u5904\u5c31\u662f\uff0c\u53ef\u4ee5\u8bbe\u5b9a\u54ea\u4e9b\u5bf9\u5916\u66b4\u9732\uff0c\u4ece\u800c\u907f\u514d\u5bfc\u5165\u4e0d\u5fc5\u8981\u7684\u5305\u3002","title":"__all__"},{"location":"python/Basic_09/#_2","text":"class Fibs : def __init__ ( self ): self . a = 0 self . b = 1 # \u5b9e\u73b0\u4e86\u65b9\u6cd5__next__\u7684\u5bf9\u8c61\u662f\u8fed\u4ee3\u5668 def __next__ ( self ): self . a , self . b = self . b , self . a + self . b return self . a #\u5b9e\u73b0\u4e86__iter__\u65b9\u6cd5\u7684\u5bf9\u8c61\u624d\u662f\u53ef\u8fed\u4ee3\u7684 def __iter__ ( self ): return self >>> class T : value = 0 def __next__ ( self ): self . value += 1 if self . value > 10 : raise StopIteration return self . value def __iter__ ( self ): return self >>> t = T () >>> list ( t ) # T\u662f\u4e00\u4e2a\u8fd4\u56de10\u4e2a\u6570\u5b57\u5e8f\u5217\u7684\u8fed\u4ee3\u5668 [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] >>> class A : astr = \"a\" def __next__ ( self ): self . astr = random . choice ( string . ascii_letters ) if len ( self . astr ) > 10 : raise StopIteration return self . astr def __iter__ ( self ): return T () >>> a = A () >>> list ( a ) # __iter__\u53ef\u4ee5\u8fd4\u56de\u5176\u4ed6\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u6b64\u65f6\u8c03\u7528\u7684\u662fT\u7c7b\u578b\u5bf9\u8c61\u7684\u8fed\u4ee3\u5668 [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] >>> class A : ... astr = \"a\" ... def __next__ ( self ): ... self . astr += random . choice ( string . ascii_letters ) ... if len ( self . astr ) > 10 : raise StopIteration ... return self . astr ... def __iter__ ( self ): ... return self ... >>> a = A () >>> list ( a ) # \u6b64\u65f6\u8c03\u7528\u7684\u624d\u662fA\u7684\u8fed\u4ee3\u5668 [ 'az' , 'azT' , 'azTJ' , 'azTJU' , 'azTJUO' , 'azTJUOR' , 'azTJUORd' , 'azTJUORdU' , 'azTJUORdUt' ]","title":"\u8fed\u4ee3\u5668"},{"location":"python/Basic_09/#_3","text":"def flatten ( nested ): try : for sublist in nested : for element in flatten ( sublist ): # \u5bf9\u4e8e\u5e8f\u5217\uff0c\u904d\u5386\u5b50\u5e8f\u5217 yield element except TypeError : # \u5982\u679c\u5f53\u524d\u5904\u7406\u7684\u662f\u4e00\u4e2a\u6570\u5b57\u800c\u4e0d\u662f\u6570\u7ec4\uff0c\u76f4\u63a5\u8fd4\u56de\u8be5\u503c yield nested >>> n [ 0 , 1 , [ 3 , [ 4 ], [[ 5 , 6 ], [ 7 , 8 ]]], 3 , 4 ] >>> flatten ( n ) < generator object flatten at 0x000001B667C33BA0 > >>> list ( flatten ( n )) [ 0 , 1 , 3 , 4 , 5 , 6 , 7 , 8 , 3 , 4 ] >>> a = flatten ( 'aaa' ) # \u8be5\u51fd\u6570\u65e0\u6cd5\u5904\u7406\u5b57\u7b26\u4e32\uff0c\u56e0\u4e3a\u5355\u4e2a\u5b57\u7b26\u4e5f\u662f\u5b57\u7b26\u4e32\uff0c\u4e0d\u4f1a\u51fa\u73b0TypeError,\u540c\u65f6\u5b57\u7b26\u4e32\u5e94\u8be5\u89c6\u4e3a\u6574\u4f53\u800c\u4e0d\u662f\u5b57\u7b26\u7ec4\u6210\u7684\u5e8f\u5217 >>> list ( a ) Traceback ( most recent call last ): RecursionError : maximum recursion depth exceeded","title":"\u751f\u6210\u5668"},{"location":"python/Basic_10/","text":"\u6a21\u5757\u4e0e\u5305 \u6a21\u5757 >>> import sys >>> sys . path . append ( 'e:/' ) # \u5728e\u76d8\u6839\u76ee\u5f55\u6709\u6587\u4ef6hello.py >>> import hello # \u5bfc\u5165\u6a21\u5757\u65f6\u6267\u884c\u4ee3\u7801 Hello , world ! >>> import hello # \u6a21\u5757\u53ea\u6267\u884c\u4e00\u6b21 >>> import importlib # \u53ef\u901a\u8fc7\u8be5\u6a21\u5757\u5bf9\u6a21\u5757\u91cd\u65b0\u52a0\u8f7d >>> hello = importlib . reload ( hello ) Hello , world ! >>> import hello # \u6b64\u5904\u5c06\u539f\u6253\u5370\u529f\u80fd\u653e\u5165\u51fd\u6570hello,\u5e76\u6267\u884chello()\u8fdb\u884c\u6d4b\u8bd5 Hello , world ! >>> hello . hello () Hello , world ! # \u53ef\u89c1\u51fd\u6570\u5728\u5bfc\u5165\u548c\u6267\u884c\u65f6\u6548\u679c\u4e00\u81f4\uff0c\u4f46\u662f\u6211\u4eec\u5e0c\u671b\u7684\u662f\u5bfc\u5165\u7684\u65f6\u5019\u4e0d\u6267\u884c\uff0c\u8c03\u7528\u7684\u65f6\u5019\u624d\u6267\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u6709\u4e00\u79cd\u533a\u5206\u4f5c\u4e3a\u6a21\u5757\u548c\u6d4b\u8bd5\u7684\u65b9\u6cd5\uff1a >>> __name__ # \u5f53\u524d\u8fd0\u884c\u7a0b\u5e8f\u4e3a__main__ '__main__' >>> hello . __name__ # hello\u6a21\u5757\u5728\u88ab\u5bfc\u5165\u65f6\u540d\u79f0\u4e3ahello 'hello' # \u53ef\u4ee5\u4fee\u6539\u4e3a\u4ee5\u4e0b\u4ee3\u7801 def hello (): print ( \"Hello, world!\" ) def test (): hello () if __name__ == '__main__' : test () >>> import hello # \u6b64\u65f6\u4e0d\u4f1a\u6267\u884c\u4efb\u4f55\u4ee3\u7801 >>> hello . test () Hello , world ! \u6dfb\u52a0\u81ea\u5b9a\u4e49\u6a21\u5757 \u8981\u8ba9\u7a0b\u5e8f\u627e\u5230\u4f60\u7684\u6a21\u5757\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a \u5c06\u7a0b\u5e8f\u6dfb\u52a0\u5230\u6307\u5b9a\u7684\u641c\u7d22\u8def\u5f84\u6587\u4ef6\u5939\u4e2d\u3002\u8fd9\u79cd\u53ef\u4ee5\u901a\u8fc7\u6253\u5370sys.path\u67e5\u770b \u5c06\u7a0b\u5e8f\u6240\u5728\u8def\u5f84\u6dfb\u52a0\u5230\u641c\u7d22\u8def\u5f84\u4e2d\u3002\u524d\u9762\u7684\u76f4\u63a5append\u53ef\u4ee5\u52a8\u6001\u6dfb\u52a0\uff0c\u4e5f\u53ef\u4ee5\u6c38\u4e45\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cfPYTHONPATH\u4e2d\u3002 \u5305 \u5305\u5c31\u662f\u5305\u542b\u6a21\u5757\u7684\u6a21\u5757\u3002\u7cfb\u7edf\u6839\u636e\u6587\u4ef6\u5939\u662f\u5426\u5305\u542b __init__.py \u8fdb\u884c\u5224\u5b9a\u3002\u5982\u679c\u60f3\u8ba9\u5305\u4e5f\u548c\u6a21\u5757\u4e00\u6837\u4f7f\u7528\uff0c\u53ef\u4ee5\u628a\u76f8\u5e94\u7684\u903b\u8f91\u4ee3\u7801\u5199\u5728 __init__.py \uff0c\u4f8b\u5982\uff1a # \u5efa\u7acb\u4e00\u4e2a\u5305 E: \\> tree /f mytest E: \\M YTEST \u2502 hello.py \u2502 __init__.py \u2502 \u2514\u2500__pycache__ __init__.cpython-36.pyc \u5176\u4e2d\uff0c __init__.py \u4e2d\u6709\u4e00\u4e2a\u53d8\u91cfPI=3.14,\u6211\u4eec\u5bfc\u5165\u8bd5\u8bd5\uff1a >>> import mytest >>> mytest . PI 3.14 # \u4ee5\u4e0b\u662f\u5404\u79cd\u5bfc\u5165\u65b9\u5f0f >>> import mytest.hello >>> from mytest import hello >>> from mytest import hello as hl \u63a2\u7d22\u6a21\u5757 dir \u548c __all__ >>> import copy >>> [ n for n in dir ( copy ) if not n . startswith ( '_' )] # \u8fd4\u56de\u6a21\u5757\u7684\u6240\u6709\u5c5e\u6027\u548c\u53d8\u91cf [ 'Error' , 'copy' , 'deepcopy' , 'dispatch_table' , 'error' ] >>> [ n for n in dir ( mytest ) if not n . startswith ( '_' )] [ 'PI' , 'hello' ] >>> copy . __all__ # \u8fd4\u56de\u7684\u662f\u5bf9\u5916\u5f00\u653e\u63a5\u53e3\uff0c\u8fd9\u4e2a\u662f\u6a21\u5757\u5b9a\u4e49\u7684\uff0c\u5728import *\u65f6\u8d77\u4f5c\u7528 [ 'Error' , 'copy' , 'deepcopy' ] __file__ >>> copy . __file__ # \u53ef\u4ee5\u67e5\u5230\u6e90\u7801\u5730\u5740 'D: \\\\ Anaconda3 \\\\ lib \\\\ copy.py'","title":"\u57fa\u7840\u603b\u7ed3(\u5341)-\u6a21\u5757\u4e0e\u5305"},{"location":"python/Basic_10/#_1","text":"","title":"\u6a21\u5757\u4e0e\u5305"},{"location":"python/Basic_10/#_2","text":">>> import sys >>> sys . path . append ( 'e:/' ) # \u5728e\u76d8\u6839\u76ee\u5f55\u6709\u6587\u4ef6hello.py >>> import hello # \u5bfc\u5165\u6a21\u5757\u65f6\u6267\u884c\u4ee3\u7801 Hello , world ! >>> import hello # \u6a21\u5757\u53ea\u6267\u884c\u4e00\u6b21 >>> import importlib # \u53ef\u901a\u8fc7\u8be5\u6a21\u5757\u5bf9\u6a21\u5757\u91cd\u65b0\u52a0\u8f7d >>> hello = importlib . reload ( hello ) Hello , world ! >>> import hello # \u6b64\u5904\u5c06\u539f\u6253\u5370\u529f\u80fd\u653e\u5165\u51fd\u6570hello,\u5e76\u6267\u884chello()\u8fdb\u884c\u6d4b\u8bd5 Hello , world ! >>> hello . hello () Hello , world ! # \u53ef\u89c1\u51fd\u6570\u5728\u5bfc\u5165\u548c\u6267\u884c\u65f6\u6548\u679c\u4e00\u81f4\uff0c\u4f46\u662f\u6211\u4eec\u5e0c\u671b\u7684\u662f\u5bfc\u5165\u7684\u65f6\u5019\u4e0d\u6267\u884c\uff0c\u8c03\u7528\u7684\u65f6\u5019\u624d\u6267\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u6709\u4e00\u79cd\u533a\u5206\u4f5c\u4e3a\u6a21\u5757\u548c\u6d4b\u8bd5\u7684\u65b9\u6cd5\uff1a >>> __name__ # \u5f53\u524d\u8fd0\u884c\u7a0b\u5e8f\u4e3a__main__ '__main__' >>> hello . __name__ # hello\u6a21\u5757\u5728\u88ab\u5bfc\u5165\u65f6\u540d\u79f0\u4e3ahello 'hello' # \u53ef\u4ee5\u4fee\u6539\u4e3a\u4ee5\u4e0b\u4ee3\u7801 def hello (): print ( \"Hello, world!\" ) def test (): hello () if __name__ == '__main__' : test () >>> import hello # \u6b64\u65f6\u4e0d\u4f1a\u6267\u884c\u4efb\u4f55\u4ee3\u7801 >>> hello . test () Hello , world !","title":"\u6a21\u5757"},{"location":"python/Basic_10/#_3","text":"\u8981\u8ba9\u7a0b\u5e8f\u627e\u5230\u4f60\u7684\u6a21\u5757\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a \u5c06\u7a0b\u5e8f\u6dfb\u52a0\u5230\u6307\u5b9a\u7684\u641c\u7d22\u8def\u5f84\u6587\u4ef6\u5939\u4e2d\u3002\u8fd9\u79cd\u53ef\u4ee5\u901a\u8fc7\u6253\u5370sys.path\u67e5\u770b \u5c06\u7a0b\u5e8f\u6240\u5728\u8def\u5f84\u6dfb\u52a0\u5230\u641c\u7d22\u8def\u5f84\u4e2d\u3002\u524d\u9762\u7684\u76f4\u63a5append\u53ef\u4ee5\u52a8\u6001\u6dfb\u52a0\uff0c\u4e5f\u53ef\u4ee5\u6c38\u4e45\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cfPYTHONPATH\u4e2d\u3002","title":"\u6dfb\u52a0\u81ea\u5b9a\u4e49\u6a21\u5757"},{"location":"python/Basic_10/#_4","text":"\u5305\u5c31\u662f\u5305\u542b\u6a21\u5757\u7684\u6a21\u5757\u3002\u7cfb\u7edf\u6839\u636e\u6587\u4ef6\u5939\u662f\u5426\u5305\u542b __init__.py \u8fdb\u884c\u5224\u5b9a\u3002\u5982\u679c\u60f3\u8ba9\u5305\u4e5f\u548c\u6a21\u5757\u4e00\u6837\u4f7f\u7528\uff0c\u53ef\u4ee5\u628a\u76f8\u5e94\u7684\u903b\u8f91\u4ee3\u7801\u5199\u5728 __init__.py \uff0c\u4f8b\u5982\uff1a # \u5efa\u7acb\u4e00\u4e2a\u5305 E: \\> tree /f mytest E: \\M YTEST \u2502 hello.py \u2502 __init__.py \u2502 \u2514\u2500__pycache__ __init__.cpython-36.pyc \u5176\u4e2d\uff0c __init__.py \u4e2d\u6709\u4e00\u4e2a\u53d8\u91cfPI=3.14,\u6211\u4eec\u5bfc\u5165\u8bd5\u8bd5\uff1a >>> import mytest >>> mytest . PI 3.14 # \u4ee5\u4e0b\u662f\u5404\u79cd\u5bfc\u5165\u65b9\u5f0f >>> import mytest.hello >>> from mytest import hello >>> from mytest import hello as hl","title":"\u5305"},{"location":"python/Basic_10/#_5","text":"","title":"\u63a2\u7d22\u6a21\u5757"},{"location":"python/Basic_10/#dir-9595all9595","text":">>> import copy >>> [ n for n in dir ( copy ) if not n . startswith ( '_' )] # \u8fd4\u56de\u6a21\u5757\u7684\u6240\u6709\u5c5e\u6027\u548c\u53d8\u91cf [ 'Error' , 'copy' , 'deepcopy' , 'dispatch_table' , 'error' ] >>> [ n for n in dir ( mytest ) if not n . startswith ( '_' )] [ 'PI' , 'hello' ] >>> copy . __all__ # \u8fd4\u56de\u7684\u662f\u5bf9\u5916\u5f00\u653e\u63a5\u53e3\uff0c\u8fd9\u4e2a\u662f\u6a21\u5757\u5b9a\u4e49\u7684\uff0c\u5728import *\u65f6\u8d77\u4f5c\u7528 [ 'Error' , 'copy' , 'deepcopy' ]","title":"dir \u548c __all__"},{"location":"python/Basic_10/#9595file9595","text":">>> copy . __file__ # \u53ef\u4ee5\u67e5\u5230\u6e90\u7801\u5730\u5740 'D: \\\\ Anaconda3 \\\\ lib \\\\ copy.py'","title":"__file__"},{"location":"python/Basic_11/","text":"\u6587\u4ef6 open \u8fd9\u4e2a\u51fd\u6570\u6709\u4e24\u4e2a\u91cd\u8981\u53c2\u6570\uff1a\u6587\u4ef6\u540d\uff08\u5fc5\u9009\uff09\u548c \u6a21\u5f0f\uff08\u53ef\u9009\uff09\uff0c\u6a21\u5f0f\u6709w,r,x,a,+,t,b\u8fd9\u51e0\u79cd\uff0c\u5176\u4e2dw\u4e3a\u5199\u5165\u6a21\u5f0f\uff0c\u5982\u679c\u6587\u4ef6\u5b58\u5728\u4f1a\u5220\u9664\u539f\u6709\u7684\u6587\u4ef6\u5185\u5bb9\u518d\u8fdb\u884c\u5199\u5165\uff0c\u60f3\u4fdd\u7559\u539f\u6709\u5185\u5bb9\u7528\u9644\u52a0\u6a21\u5f0fa\u3002t\u4ee3\u8868text,\u9ed8\u8ba4\u5c31\u662f\u8fd9\u79cd\u6a21\u5f0f\uff0c\u8868\u793a\u4f5c\u4e3a\u6587\u672c\u5904\u7406\uff0c\u5982\u679c\u78b0\u5230\u97f3\u9891\uff0c\u89c6\u9891\u7b49\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528b\u6a21\u5f0f\u3002+\u4ee3\u8868\u53ef\u8bfb\u53ef\u5199\uff0c\u9700\u8981\u548c\u5176\u4ed6\u6761\u4ef6\u4e00\u8d77\u4f7f\u7528\uff0c\u5176\u4e2dr+\u4e0d\u4f1a\u622a\u65ad\uff0cw+\u4f1a\u622a\u65ad\uff08\u5220\u9664\u6587\u4ef6\u539f\u6709\u7684\u5185\u5bb9\uff09 seek and tell \u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u6309\u987a\u5e8f\u4f9d\u6b21\u8bfb\u53d6\uff0c\u5de5\u5177\u5c31\u662f\u8fd9\u4e24\u4e2a\uff1a >>> f = open ( 'test.txt' , 'w' ) >>> f . write ( '0123456789' ) 10 >>> f . seek ( 6 ) # \u79fb\u52a8\u5230\u7b2c\u516d\u4f4d 6 >>> f . write ( 'hi' ) 2 >>> f . close () >>> f = open ( 'test.txt' , 'r' ) >>> f . read () '012345hi89' >>> f . read ( 3 ) # \u65e0\u6cd5\u518d\u6b21\u8bfb\u53d6 '' >>> f . close () >>> f = open ( 'test.txt' , 'r' ) >>> f . read ( 3 ) '012' >>> f . read ( 2 ) '34' >>> f . tell () # \u8fd4\u56de\u5149\u6807\u5f53\u524d\u4f4d\u7f6e 5 close \u7531\u4e8ePython\u5728\u6587\u4ef6\u64cd\u4f5c\u7684\u65f6\u5019\u4f1a\u6682\u65f6\u5c06\u6587\u4ef6\u6d41\u5b58\u5165\u7f13\u51b2\u533a\uff0c\u56e0\u6b64\u5982\u679c\u4e00\u4e2a\u7f13\u51b2\u6ca1\u6709\u6b63\u5e38\u5173\u95ed\uff0c\u53ef\u80fd\u4f1a\u88ab\u8986\u76d6\u6389\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5728\u6587\u4ef6\u64cd\u4f5c\u5b8c\u6210\u540e\u8fdb\u884cclose.\u5982\u679c\u4e0d\u65b9\u4fbf\uff0c\u4f46\u662f\u60f3\u5148\u628a\u5185\u5bb9\u5b58\u5230\u78c1\u76d8\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528flush\u51fd\u6570\u3002\u6bd4\u8f83\u5e38\u89c1\u7684close\u89e3\u51b3\u65b9\u6848\u6709\uff1a # \u5728\u8fd9\u91cc\u6253\u5f00\u6587\u4ef6 try : # \u5c06\u6570\u636e\u5199\u5165\u5230\u6587\u4ef6\u4e2d finally : file . close () # \u8fd9\u662f\u5229\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff0c\u4f1a\u81ea\u52a8\u5904\u7406\u5173\u95ed\u95ee\u9898 with open ( \"somefile.txt\" ) as somefile : do_something ( somefile ) \u4f7f\u7528\u6587\u4ef6 \u8bfb\u53d6\u5b57\u7b26\uff1af.read(n) \u8bfb\u53d6\uff08\u5199\u5165\uff09\u884c\uff1af.write(),f.readline() \u8bfb\u53d6\u5199\u5165\u591a\u884c\uff1a f.readlines(),f.writelines() >>> f = open ( 'test.txt' ) >>> f . read () '012345hi89 \\n test' >>> f . close () >>> f = open ( 'test.txt' ) >>> f . read ( 1 ) '0' >>> f = open ( 'test.txt' ) >>> f . readline () '012345hi89 \\n ' >>> f = open ( 'test.txt' ) >>> f . readlines () [ '012345hi89 \\n ' , 'test' ] >>> f = open ( 'test.txt' ) >>> lines = f . readlines () >>> lines [ 1 ] = 'hello' >>> f = open ( 'test.txt' , 'w' ) >>> f . writelines ( lines ) >>> f . flush () >>> lines [ '012345hi89 \\n ' , 'hello' ] >>> f . close () \u8fed\u4ee3\u6587\u4ef6 # \u8fed\u4ee3\u5b57\u7b26 with open ( filename ) as f : while True : char = f . read ( 1 ) if not char : break process ( char ) # \u8fed\u4ee3\u884c with open ( filename ) as f : while True : line = f . readline () if not line : break process ( line ) # \u8fed\u4ee3\u6240\u6709 with open ( filename ) as f : for char in f . read (): process ( char ) with open ( filename ) as f : for line in f . readlines (): process ( line ) # \u4f7f\u7528fileinput\u5ef6\u8fdf\u8fed\u4ee3 import fileinput for line in fileinput . input ( filename ): process ( line ) # \u76f4\u63a5\u8fed\u4ee3\u6587\u4ef6 with open ( filename ) as f : for line in f : process ( line ) for line in open ( filename ): process ( line ) # \u5c06\u6587\u4ef6\u6d41\u5f53\u4f5c\u8fed\u4ee3\u5668 >>> f = open ( 'somefile.txt' , 'w' ) >>> print ( 'First' , 'line' , file = f ) >>> print ( 'Sec' , 'line' , file = f ) >>> print ( 'Third' , 'and final' , 'line' , file = f ) >>> f . close () >>> lines = open ( 'somefile.txt' ) >>> list ( lines ) [ 'First line \\n ' , 'Sec line \\n ' , 'Third and final line \\n ' ] >>> first , second , third = open ( 'somefile.txt' ) >>> first 'First line \\n ' >>> third 'Third and final line \\n '","title":"\u57fa\u7840\u603b\u7ed3(\u5341\u4e00)-\u6587\u4ef6\u64cd\u4f5c"},{"location":"python/Basic_11/#_1","text":"","title":"\u6587\u4ef6"},{"location":"python/Basic_11/#open","text":"\u8fd9\u4e2a\u51fd\u6570\u6709\u4e24\u4e2a\u91cd\u8981\u53c2\u6570\uff1a\u6587\u4ef6\u540d\uff08\u5fc5\u9009\uff09\u548c \u6a21\u5f0f\uff08\u53ef\u9009\uff09\uff0c\u6a21\u5f0f\u6709w,r,x,a,+,t,b\u8fd9\u51e0\u79cd\uff0c\u5176\u4e2dw\u4e3a\u5199\u5165\u6a21\u5f0f\uff0c\u5982\u679c\u6587\u4ef6\u5b58\u5728\u4f1a\u5220\u9664\u539f\u6709\u7684\u6587\u4ef6\u5185\u5bb9\u518d\u8fdb\u884c\u5199\u5165\uff0c\u60f3\u4fdd\u7559\u539f\u6709\u5185\u5bb9\u7528\u9644\u52a0\u6a21\u5f0fa\u3002t\u4ee3\u8868text,\u9ed8\u8ba4\u5c31\u662f\u8fd9\u79cd\u6a21\u5f0f\uff0c\u8868\u793a\u4f5c\u4e3a\u6587\u672c\u5904\u7406\uff0c\u5982\u679c\u78b0\u5230\u97f3\u9891\uff0c\u89c6\u9891\u7b49\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528b\u6a21\u5f0f\u3002+\u4ee3\u8868\u53ef\u8bfb\u53ef\u5199\uff0c\u9700\u8981\u548c\u5176\u4ed6\u6761\u4ef6\u4e00\u8d77\u4f7f\u7528\uff0c\u5176\u4e2dr+\u4e0d\u4f1a\u622a\u65ad\uff0cw+\u4f1a\u622a\u65ad\uff08\u5220\u9664\u6587\u4ef6\u539f\u6709\u7684\u5185\u5bb9\uff09","title":"open"},{"location":"python/Basic_11/#seek-and-tell","text":"\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u6309\u987a\u5e8f\u4f9d\u6b21\u8bfb\u53d6\uff0c\u5de5\u5177\u5c31\u662f\u8fd9\u4e24\u4e2a\uff1a >>> f = open ( 'test.txt' , 'w' ) >>> f . write ( '0123456789' ) 10 >>> f . seek ( 6 ) # \u79fb\u52a8\u5230\u7b2c\u516d\u4f4d 6 >>> f . write ( 'hi' ) 2 >>> f . close () >>> f = open ( 'test.txt' , 'r' ) >>> f . read () '012345hi89' >>> f . read ( 3 ) # \u65e0\u6cd5\u518d\u6b21\u8bfb\u53d6 '' >>> f . close () >>> f = open ( 'test.txt' , 'r' ) >>> f . read ( 3 ) '012' >>> f . read ( 2 ) '34' >>> f . tell () # \u8fd4\u56de\u5149\u6807\u5f53\u524d\u4f4d\u7f6e 5","title":"seek and tell"},{"location":"python/Basic_11/#close","text":"\u7531\u4e8ePython\u5728\u6587\u4ef6\u64cd\u4f5c\u7684\u65f6\u5019\u4f1a\u6682\u65f6\u5c06\u6587\u4ef6\u6d41\u5b58\u5165\u7f13\u51b2\u533a\uff0c\u56e0\u6b64\u5982\u679c\u4e00\u4e2a\u7f13\u51b2\u6ca1\u6709\u6b63\u5e38\u5173\u95ed\uff0c\u53ef\u80fd\u4f1a\u88ab\u8986\u76d6\u6389\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5728\u6587\u4ef6\u64cd\u4f5c\u5b8c\u6210\u540e\u8fdb\u884cclose.\u5982\u679c\u4e0d\u65b9\u4fbf\uff0c\u4f46\u662f\u60f3\u5148\u628a\u5185\u5bb9\u5b58\u5230\u78c1\u76d8\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528flush\u51fd\u6570\u3002\u6bd4\u8f83\u5e38\u89c1\u7684close\u89e3\u51b3\u65b9\u6848\u6709\uff1a # \u5728\u8fd9\u91cc\u6253\u5f00\u6587\u4ef6 try : # \u5c06\u6570\u636e\u5199\u5165\u5230\u6587\u4ef6\u4e2d finally : file . close () # \u8fd9\u662f\u5229\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff0c\u4f1a\u81ea\u52a8\u5904\u7406\u5173\u95ed\u95ee\u9898 with open ( \"somefile.txt\" ) as somefile : do_something ( somefile )","title":"close"},{"location":"python/Basic_11/#_2","text":"\u8bfb\u53d6\u5b57\u7b26\uff1af.read(n) \u8bfb\u53d6\uff08\u5199\u5165\uff09\u884c\uff1af.write(),f.readline() \u8bfb\u53d6\u5199\u5165\u591a\u884c\uff1a f.readlines(),f.writelines() >>> f = open ( 'test.txt' ) >>> f . read () '012345hi89 \\n test' >>> f . close () >>> f = open ( 'test.txt' ) >>> f . read ( 1 ) '0' >>> f = open ( 'test.txt' ) >>> f . readline () '012345hi89 \\n ' >>> f = open ( 'test.txt' ) >>> f . readlines () [ '012345hi89 \\n ' , 'test' ] >>> f = open ( 'test.txt' ) >>> lines = f . readlines () >>> lines [ 1 ] = 'hello' >>> f = open ( 'test.txt' , 'w' ) >>> f . writelines ( lines ) >>> f . flush () >>> lines [ '012345hi89 \\n ' , 'hello' ] >>> f . close ()","title":"\u4f7f\u7528\u6587\u4ef6"},{"location":"python/Basic_11/#_3","text":"# \u8fed\u4ee3\u5b57\u7b26 with open ( filename ) as f : while True : char = f . read ( 1 ) if not char : break process ( char ) # \u8fed\u4ee3\u884c with open ( filename ) as f : while True : line = f . readline () if not line : break process ( line ) # \u8fed\u4ee3\u6240\u6709 with open ( filename ) as f : for char in f . read (): process ( char ) with open ( filename ) as f : for line in f . readlines (): process ( line ) # \u4f7f\u7528fileinput\u5ef6\u8fdf\u8fed\u4ee3 import fileinput for line in fileinput . input ( filename ): process ( line ) # \u76f4\u63a5\u8fed\u4ee3\u6587\u4ef6 with open ( filename ) as f : for line in f : process ( line ) for line in open ( filename ): process ( line ) # \u5c06\u6587\u4ef6\u6d41\u5f53\u4f5c\u8fed\u4ee3\u5668 >>> f = open ( 'somefile.txt' , 'w' ) >>> print ( 'First' , 'line' , file = f ) >>> print ( 'Sec' , 'line' , file = f ) >>> print ( 'Third' , 'and final' , 'line' , file = f ) >>> f . close () >>> lines = open ( 'somefile.txt' ) >>> list ( lines ) [ 'First line \\n ' , 'Sec line \\n ' , 'Third and final line \\n ' ] >>> first , second , third = open ( 'somefile.txt' ) >>> first 'First line \\n ' >>> third 'Third and final line \\n '","title":"\u8fed\u4ee3\u6587\u4ef6"},{"location":"ss/ubuntu_ss/","text":"ubuntu\u914d\u7f6eshadowsocks-qt5 \u6dfb\u52a0ppa\u5e76\u4e0b\u8f7d sudo add-apt-repository ppa:hzwhuang/ss-qt5 sudo apt-get update sudo apt-get install shadowsocks-qt5 Ubuntu18.04 \u6dfb\u52a0\u4e0a\u9762\u7684ppa\u65f6\u51fa\u73b0\uff1a \u5ffd\u7565: http://ppa.launchpad.net/hzwhuang/ss-qt5/ubuntu bionic InRelease \u9519\u8bef: http://ppa.launchpad.net/hzwhuang/ss-qt5/ubuntu bionic Release 404 Not Found [ IP:91.189.95.83 80 ] \u8fd9\u662f\u4f5c\u8005\u8fd8\u6ca1\u6d4b\u8bd518.04,\u53ef\u4ee5\u76f4\u63a5\u5c06\u6e90\u91cc\u9762\u768418.04\u7684\u4ee3\u53f7(bionic)\u6539\u621016.04(xenial): sudo vim /etc/apt/sources.list.d/hzwhuang-ubuntu-ss-qt5-bionic.list #\u5c06\u4e0b\u9762\u7684bionic\u6539\u6210xenial deb http://ppa.launchpad.net/hzwhuang/ss-qt5/ubuntu xenial main \u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86\u3002","title":"ubuntu\u4e0a\u4f7f\u7528shaodwsocks-qt5"},{"location":"ss/ubuntu_ss/#ubuntushadowsocks-qt5","text":"","title":"ubuntu\u914d\u7f6eshadowsocks-qt5"},{"location":"ss/ubuntu_ss/#ppa","text":"sudo add-apt-repository ppa:hzwhuang/ss-qt5 sudo apt-get update sudo apt-get install shadowsocks-qt5","title":"\u6dfb\u52a0ppa\u5e76\u4e0b\u8f7d"},{"location":"ss/ubuntu_ss/#ubuntu1804","text":"\u6dfb\u52a0\u4e0a\u9762\u7684ppa\u65f6\u51fa\u73b0\uff1a \u5ffd\u7565: http://ppa.launchpad.net/hzwhuang/ss-qt5/ubuntu bionic InRelease \u9519\u8bef: http://ppa.launchpad.net/hzwhuang/ss-qt5/ubuntu bionic Release 404 Not Found [ IP:91.189.95.83 80 ] \u8fd9\u662f\u4f5c\u8005\u8fd8\u6ca1\u6d4b\u8bd518.04,\u53ef\u4ee5\u76f4\u63a5\u5c06\u6e90\u91cc\u9762\u768418.04\u7684\u4ee3\u53f7(bionic)\u6539\u621016.04(xenial): sudo vim /etc/apt/sources.list.d/hzwhuang-ubuntu-ss-qt5-bionic.list #\u5c06\u4e0b\u9762\u7684bionic\u6539\u6210xenial deb http://ppa.launchpad.net/hzwhuang/ss-qt5/ubuntu xenial main \u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86\u3002","title":"Ubuntu18.04"},{"location":"tools/zotero/","text":"zotero\u6587\u732e\u8d44\u6599\u7ba1\u7406 \u5e94\u7528\u573a\u666f \u7ba1\u7406\u8bba\u6587\uff0c\u5206\u7c7b\u548c\u6574\u7406\u8bba\u6587\uff0c\u6536\u85cf\u56fe\u4e66\u4fe1\u606f(\u5efa\u7acb\u81ea\u5df1\u7684\u4e66\u5e93),\u6536\u85cfgithub\u4ed3\u5e93\u5e76\u5efa\u7acb\u7d22\u5f15\uff0c\u4ee5\u53ca\u5404\u79cd\u8d44\u6599\u6536\u96c6\u6574\u7406\u3002 \u4e0eEvernote\u7684\u533a\u522b \u5370\u8c61\u7b14\u8bb0\u4e3b\u8981\u662f\u7528\u4e8e\u526a\u85cf\u7f51\u9875\uff0c\u8bb0\u5f55\u7b14\u8bb0\u7b49\uff0c\u800czotero\u66f4\u504f\u91cd\u8bba\u6587\uff0c\u4fe1\u606f\u7d22\u5f15\u7b49\u4fe1\u606f\u6574\u7406\u90e8\u5206\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u5bf9\u4fe1\u606f\u505a\u7b14\u8bb0\uff0c\u4f46\u4fa7\u91cd\u70b9\u5728\u4fe1\u606f\u7d22\u5f15\u3002 \u5b89\u88c5 http://www.zotero.org/download/ \uff08\u6ce8\uff1a\u6d4f\u89c8\u5668\u63d2\u4ef6\u4e5f\u8981\u5b89\u88c5\uff09 \u5bfc\u5165\u6587\u732e\u65b9\u5f0f \u4e92\u8054\u7f51\u81ea\u52a8\u8bc6\u522b\uff1aWeb Translators (URL bar icon) \u624b\u52a8\u8f93\u5165\uff1aManual Input or Edit From a bibliographic \u6587\u4ef6\u5bfc\u5165\uff1aformat (RIS, BibTeX, MARC, etc.) \u901a\u8fc7\u6807\u793a\u7b26\u589e\u52a0\uff1aAdd by identi\ufb01er (DOI, ISBN, PMID) \u901a\u8fc7PDF\u5143\u6570\u636e\u8bc6\u522b\uff1aAdd PDF then Retrieve Metadata \u4ece\u7f51\u9875\u8bc6\u522b\uff1aGet any Webpage with basic data \u8bb0\u5f55\u51e0\u4e2a\u6bd4\u8f83\u5b9e\u7528\u7684\u3002 \u4e92\u8054\u7f51\u81ea\u52a8\u8bc6\u522b \u6bd4\u5982\u4f60\u8981\u628a\u6df1\u5ea6\u5b66\u4e60\u8fd9\u672c\u4e66\u4f5c\u4e3a\u52a0\u5165\u6536\u85cf\uff0c\u90a3\u5c31\u8fdb\u5165 \u8c46\u74e3\u4e66\u7c4d\u9875\u9762 \uff0c\u6253\u5f00\u540e\u53f3\u4e0a\u89d2zotero\u63d2\u4ef6\u5c31\u4f1a\u53d8\u6210\u4e66\u7684\u6837\u5b50\uff0c\u70b9\u51fb\u5373\u53ef\u4fdd\u5b58 \u901a\u8fc7\u6807\u793a\u7b26\u589e\u52a0 \u8fd9\u91cc\u53ef\u4ee5\u901a\u8fc7\u624b\u52a8\u8f93\u5165ISBN\uff0cDOI\u7b49\u4fe1\u606f\u76f4\u63a5\u5bfc\u5165\uff1a \u5bfc\u5165Google\u5b66\u672f \u5728\u8c37\u6b4c\u5b66\u672f\u4e2d\u641c\u7d22\u4f60\u60f3\u627e\u7684\u9886\u57df\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u63d2\u4ef6\u76f4\u63a5\u6279\u91cf\u5bfc\u5165\u4e86\uff1a \u5bfc\u5165arxiv \u5bf9\u4e8e\u6211\u4eec\u641e\u8ba1\u7b97\u673a\u7684\uff0carxiv\u4e0a\u7684\u8bba\u6587\u8fd8\u662f\u770b\u7684\u4e0d\u5c11\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u6253\u5f00arxiv\u94fe\u63a5\uff0c\u901a\u8fc7\u63d2\u4ef6\u76f4\u63a5save\u3002\u4fdd\u5b58\u540e\u4f1a\u770b\u5230\u76f8\u5e94\u7684\u5feb\u7167\u751a\u81f3\u662f\u5bf9\u5e94\u7684pdf\u4e5f\u5df2\u7ecf\u5728\u91cc\u9762\u4e86\uff0c\u975e\u5e38\u65b9\u4fbf\uff1a \u5bfc\u5165pdf \u5982\u679c\u4e4b\u524d\u5df2\u7ecf\u4e0b\u8f7d\u4e86\u4e9bpdf\uff0c\u53ef\u76f4\u63a5\u62d6\u8fdbzotero\uff0c\u7136\u540e\u53f3\u952e\u9009\u62e9\u89e3\u6790metadata\u5c31\u53ef\u4ee5\u4e86\u3002\uff08\u4e00\u822c\u53ef\u81ea\u52a8\u5b8c\u6210\uff0c\u6ca1\u6709\u7684\u8bdd\u53ef\u4ee5\u624b\u52a8\uff09 \u63d2\u4ef6 zotfile: pdf\u6587\u4ef6\u64cd\u4f5c markdown here\uff1a markdown\u7b14\u8bb0 ZoteroQuickLook: \u53ef\u5feb\u901f\u9884\u89c8\u6587\u4ef6\u5185\u5bb9 \u6570\u636e\u540c\u6b65 \u8fd9\u91cc\u63a8\u8350\u76f4\u63a5\u901a\u8fc7\u767e\u5ea6\u4e91\uff0c\u575a\u679c\u4e91\u4e4b\u7c7b\u7684\u56fd\u5185\u89e3\u51b3\u65b9\u6848\uff0c\u6211\u662f\u901a\u8fc7\u767e\u5ea6\u4e91\u76f4\u63a5\u5c06 storage \u6587\u4ef6\u5939\u8fdb\u884c\u540c\u6b65\uff1a \u8fd9\u91cc\u6587\u4ef6\u76ee\u5f55\u662f\u6211\u81ea\u5b9a\u4e49\u7684\uff0c\u53ef\u4ee5\u5728\u7f16\u8f91->\u9996\u9009\u9879->\u9ad8\u7ea7\u4e0b\u7684\u6570\u636e\u5b58\u50a8\u4f4d\u7f6e\u5904\u4fee\u6539\uff1a \u81ea\u5b9a\u4e49\u641c\u7d22 \u6211\u4eec\u53ef\u4ee5\u6784\u9020\u81ea\u5df1\u7684\u6761\u4ef6\u6765\u8fdb\u884c\u6587\u732e\u641c\u7d22\uff0c\u6bd4\u5982\u6211\u60f3\u5c06\u8fd17\u5929\u7684\u8bba\u6587\u5efa\u7acb\u4e00\u4e2a\u7d22\u5f15\uff0c\u6bcf\u5929\u90fd\u53ef\u4ee5\u67e5\u770b\u6700\u8fd1\u4e03\u5929\u52a0\u5165\u7684\u8bba\u6587\uff0c\u53ef\u4ee5\u5728\u6211\u7684\u6587\u5e93\u53f3\u952e\u9009\u62e9\u65b0\u5efa\u641c\u7d22\uff0c\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u6761\u4ef6\u5373\u53ef\uff1a \u53c2\u8003 \u8c46\u74e3\u5c0f\u7ec4-Zotero\u5165\u95e8\u516d\u7bc7","title":"\u6587\u732e\u8d44\u6599\u7ba1\u7406-zotero"},{"location":"tools/zotero/#zotero","text":"","title":"zotero\u6587\u732e\u8d44\u6599\u7ba1\u7406"},{"location":"tools/zotero/#_1","text":"\u7ba1\u7406\u8bba\u6587\uff0c\u5206\u7c7b\u548c\u6574\u7406\u8bba\u6587\uff0c\u6536\u85cf\u56fe\u4e66\u4fe1\u606f(\u5efa\u7acb\u81ea\u5df1\u7684\u4e66\u5e93),\u6536\u85cfgithub\u4ed3\u5e93\u5e76\u5efa\u7acb\u7d22\u5f15\uff0c\u4ee5\u53ca\u5404\u79cd\u8d44\u6599\u6536\u96c6\u6574\u7406\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"tools/zotero/#evernote","text":"\u5370\u8c61\u7b14\u8bb0\u4e3b\u8981\u662f\u7528\u4e8e\u526a\u85cf\u7f51\u9875\uff0c\u8bb0\u5f55\u7b14\u8bb0\u7b49\uff0c\u800czotero\u66f4\u504f\u91cd\u8bba\u6587\uff0c\u4fe1\u606f\u7d22\u5f15\u7b49\u4fe1\u606f\u6574\u7406\u90e8\u5206\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u5bf9\u4fe1\u606f\u505a\u7b14\u8bb0\uff0c\u4f46\u4fa7\u91cd\u70b9\u5728\u4fe1\u606f\u7d22\u5f15\u3002","title":"\u4e0eEvernote\u7684\u533a\u522b"},{"location":"tools/zotero/#_2","text":"http://www.zotero.org/download/ \uff08\u6ce8\uff1a\u6d4f\u89c8\u5668\u63d2\u4ef6\u4e5f\u8981\u5b89\u88c5\uff09","title":"\u5b89\u88c5"},{"location":"tools/zotero/#_3","text":"\u4e92\u8054\u7f51\u81ea\u52a8\u8bc6\u522b\uff1aWeb Translators (URL bar icon) \u624b\u52a8\u8f93\u5165\uff1aManual Input or Edit From a bibliographic \u6587\u4ef6\u5bfc\u5165\uff1aformat (RIS, BibTeX, MARC, etc.) \u901a\u8fc7\u6807\u793a\u7b26\u589e\u52a0\uff1aAdd by identi\ufb01er (DOI, ISBN, PMID) \u901a\u8fc7PDF\u5143\u6570\u636e\u8bc6\u522b\uff1aAdd PDF then Retrieve Metadata \u4ece\u7f51\u9875\u8bc6\u522b\uff1aGet any Webpage with basic data \u8bb0\u5f55\u51e0\u4e2a\u6bd4\u8f83\u5b9e\u7528\u7684\u3002","title":"\u5bfc\u5165\u6587\u732e\u65b9\u5f0f"},{"location":"tools/zotero/#_4","text":"\u6bd4\u5982\u4f60\u8981\u628a\u6df1\u5ea6\u5b66\u4e60\u8fd9\u672c\u4e66\u4f5c\u4e3a\u52a0\u5165\u6536\u85cf\uff0c\u90a3\u5c31\u8fdb\u5165 \u8c46\u74e3\u4e66\u7c4d\u9875\u9762 \uff0c\u6253\u5f00\u540e\u53f3\u4e0a\u89d2zotero\u63d2\u4ef6\u5c31\u4f1a\u53d8\u6210\u4e66\u7684\u6837\u5b50\uff0c\u70b9\u51fb\u5373\u53ef\u4fdd\u5b58","title":"\u4e92\u8054\u7f51\u81ea\u52a8\u8bc6\u522b"},{"location":"tools/zotero/#_5","text":"\u8fd9\u91cc\u53ef\u4ee5\u901a\u8fc7\u624b\u52a8\u8f93\u5165ISBN\uff0cDOI\u7b49\u4fe1\u606f\u76f4\u63a5\u5bfc\u5165\uff1a","title":"\u901a\u8fc7\u6807\u793a\u7b26\u589e\u52a0"},{"location":"tools/zotero/#google","text":"\u5728\u8c37\u6b4c\u5b66\u672f\u4e2d\u641c\u7d22\u4f60\u60f3\u627e\u7684\u9886\u57df\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u63d2\u4ef6\u76f4\u63a5\u6279\u91cf\u5bfc\u5165\u4e86\uff1a","title":"\u5bfc\u5165Google\u5b66\u672f"},{"location":"tools/zotero/#arxiv","text":"\u5bf9\u4e8e\u6211\u4eec\u641e\u8ba1\u7b97\u673a\u7684\uff0carxiv\u4e0a\u7684\u8bba\u6587\u8fd8\u662f\u770b\u7684\u4e0d\u5c11\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u6253\u5f00arxiv\u94fe\u63a5\uff0c\u901a\u8fc7\u63d2\u4ef6\u76f4\u63a5save\u3002\u4fdd\u5b58\u540e\u4f1a\u770b\u5230\u76f8\u5e94\u7684\u5feb\u7167\u751a\u81f3\u662f\u5bf9\u5e94\u7684pdf\u4e5f\u5df2\u7ecf\u5728\u91cc\u9762\u4e86\uff0c\u975e\u5e38\u65b9\u4fbf\uff1a","title":"\u5bfc\u5165arxiv"},{"location":"tools/zotero/#pdf","text":"\u5982\u679c\u4e4b\u524d\u5df2\u7ecf\u4e0b\u8f7d\u4e86\u4e9bpdf\uff0c\u53ef\u76f4\u63a5\u62d6\u8fdbzotero\uff0c\u7136\u540e\u53f3\u952e\u9009\u62e9\u89e3\u6790metadata\u5c31\u53ef\u4ee5\u4e86\u3002\uff08\u4e00\u822c\u53ef\u81ea\u52a8\u5b8c\u6210\uff0c\u6ca1\u6709\u7684\u8bdd\u53ef\u4ee5\u624b\u52a8\uff09","title":"\u5bfc\u5165pdf"},{"location":"tools/zotero/#_6","text":"zotfile: pdf\u6587\u4ef6\u64cd\u4f5c markdown here\uff1a markdown\u7b14\u8bb0 ZoteroQuickLook: \u53ef\u5feb\u901f\u9884\u89c8\u6587\u4ef6\u5185\u5bb9","title":"\u63d2\u4ef6"},{"location":"tools/zotero/#_7","text":"\u8fd9\u91cc\u63a8\u8350\u76f4\u63a5\u901a\u8fc7\u767e\u5ea6\u4e91\uff0c\u575a\u679c\u4e91\u4e4b\u7c7b\u7684\u56fd\u5185\u89e3\u51b3\u65b9\u6848\uff0c\u6211\u662f\u901a\u8fc7\u767e\u5ea6\u4e91\u76f4\u63a5\u5c06 storage \u6587\u4ef6\u5939\u8fdb\u884c\u540c\u6b65\uff1a \u8fd9\u91cc\u6587\u4ef6\u76ee\u5f55\u662f\u6211\u81ea\u5b9a\u4e49\u7684\uff0c\u53ef\u4ee5\u5728\u7f16\u8f91->\u9996\u9009\u9879->\u9ad8\u7ea7\u4e0b\u7684\u6570\u636e\u5b58\u50a8\u4f4d\u7f6e\u5904\u4fee\u6539\uff1a","title":"\u6570\u636e\u540c\u6b65"},{"location":"tools/zotero/#_8","text":"\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u81ea\u5df1\u7684\u6761\u4ef6\u6765\u8fdb\u884c\u6587\u732e\u641c\u7d22\uff0c\u6bd4\u5982\u6211\u60f3\u5c06\u8fd17\u5929\u7684\u8bba\u6587\u5efa\u7acb\u4e00\u4e2a\u7d22\u5f15\uff0c\u6bcf\u5929\u90fd\u53ef\u4ee5\u67e5\u770b\u6700\u8fd1\u4e03\u5929\u52a0\u5165\u7684\u8bba\u6587\uff0c\u53ef\u4ee5\u5728\u6211\u7684\u6587\u5e93\u53f3\u952e\u9009\u62e9\u65b0\u5efa\u641c\u7d22\uff0c\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u6761\u4ef6\u5373\u53ef\uff1a","title":"\u81ea\u5b9a\u4e49\u641c\u7d22"},{"location":"tools/zotero/#_9","text":"\u8c46\u74e3\u5c0f\u7ec4-Zotero\u5165\u95e8\u516d\u7bc7","title":"\u53c2\u8003"}]}